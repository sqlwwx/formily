{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/array-cards/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,OAAO,CAAA;AAC5D,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,MAAM,CAAA;AAIpE,OAAO,EACL,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,cAAc,EACd,cAAc,GACf,MAAM,gBAAgB,CAAA;AACvB,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAA;AACxC,OAAO,GAAG,MAAM,YAAY,CAAA;AAG5B,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAA;AAC9C,OAAO,EAAE,SAAS,EAAmB,MAAM,eAAe,CAAA;AAC1D,OAAO,QAAQ,MAAM,cAAc,CAAA;AAE3B,IAAA,UAAU,GAAK,QAAQ,WAAb,CAAa;AAa/B,IAAM,mBAAmB,GAAG,UAAC,MAAe;;IAC1C,OAAO,CAAA,MAAA,MAAM,CAAC,aAAa,CAAC,0CAAE,OAAO,CAAC,UAAU,CAAC,IAAG,CAAC,CAAC,CAAA;AACxD,CAAC,CAAA;AAED,IAAM,gBAAgB,GAAG,UAAC,MAAe;;IACvC,OAAO,CAAA,MAAA,MAAM,CAAC,aAAa,CAAC,0CAAE,OAAO,CAAC,OAAO,CAAC,IAAG,CAAC,CAAC,CAAA;AACrD,CAAC,CAAA;AAED,IAAM,iBAAiB,GAAG,UAAC,MAAe;;IACxC,OAAO,CAAA,MAAA,MAAM,CAAC,aAAa,CAAC,0CAAE,OAAO,CAAC,QAAQ,CAAC,IAAG,CAAC,CAAC,CAAA;AACtD,CAAC,CAAA;AAED,IAAM,iBAAiB,GAAG,UAAC,MAAe;;IACxC,OAAO,CAAA,MAAA,MAAM,CAAC,aAAa,CAAC,0CAAE,OAAO,CAAC,QAAQ,CAAC,IAAG,CAAC,CAAC,CAAA;AACtD,CAAC,CAAA;AAED,IAAM,mBAAmB,GAAG,UAAC,MAAe;;IAC1C,OAAO,CAAA,MAAA,MAAM,CAAC,aAAa,CAAC,0CAAE,OAAO,CAAC,UAAU,CAAC,IAAG,CAAC,CAAC,CAAA;AACxD,CAAC,CAAA;AAED,IAAM,eAAe,GAAG,UAAC,MAAe;;IACtC,OAAO,CAAA,MAAA,MAAM,CAAC,aAAa,CAAC,0CAAE,OAAO,CAAC,MAAM,CAAC,IAAG,CAAC,CAAC,CAAA;AACpD,CAAC,CAAA;AAED,IAAM,oBAAoB,GAAG,UAAC,MAAe;IAC3C,OAAO,CACL,mBAAmB,CAAC,MAAM,CAAC;QAC3B,iBAAiB,CAAC,MAAM,CAAC;QACzB,mBAAmB,CAAC,MAAM,CAAC;QAC3B,iBAAiB,CAAC,MAAM,CAAC;QACzB,eAAe,CAAC,MAAM,CAAC,CACxB,CAAA;AACH,CAAC,CAAA;AAED,IAAM,YAAY,GAAiC,QAAQ,CAAC,UAAC,KAAK;;IAChE,IAAM,IAAI,GAAG,OAAO,EAAE,CAAA;IACtB,IAAM,KAAK,GAAG,QAAQ,EAAc,CAAA;IACpC,IAAM,SAAS,GAAG,YAAY,CAAC,qBAAqB,CAAC,CAAA;IACrD,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;QACjC,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,UAAG,KAAK,CAAC,OAAO,OAAI;KAC9B,CAAC,CAAA;IACF,IAAM,UAAU,GAAG,UAAC,OAAe;;QACjC,OAAO,MAAM,CACX,MAAA,OAAO;aACJ,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC;aACpD,KAAK,CAAC,OAAO,CAAC,0CAAG,CAAC,CAAC,CACvB,CAAA;IACH,CAAC,CAAA;IAED,IAAM,OAAO,GAAG,MAAA,KAAK,CAAC,OAAO,0CAAE,GAAG,CAAC,UAAC,EAAgB;YAAd,KAAK,WAAA,EAAE,KAAK,WAAA;QAChD,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,UAAC,EAAW;gBAAT,OAAO,aAAA;YACrC,IAAM,YAAY,GAAG,UAAU,CAAC,OAAO,CAAC,CAAA;YACxC,IAAM,UAAU,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAA;YAC/C,IAAM,QAAQ,GAAG,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAA;YACvC,OAAO,YAAY,IAAI,UAAU,IAAI,YAAY,IAAI,QAAQ,CAAA;QAC/D,CAAC,CAAC,CAAA;QACF,OAAO;YACL,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,oBAAC,KAAK,IAAC,GAAG,UAAE,KAAK,CAAS,CAAC,CAAC,CAAC,KAAK;YACpD,KAAK,OAAA;SACN,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,IAAM,KAAK,GAAG,MAAM,CAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,CAAC,CAAC,MAAM,GAAG,EAAE,CAAA;IAEjD,OAAO,CACL,oBAAC,MAAM,IACL,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,OAAO,EAAE,OAAO,EAChB,OAAO,QACP,KAAK,EAAE;YACL,KAAK,EAAE,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK;SAC/B,EACD,SAAS,EAAE,GAAG,CAAC,UAAG,SAAS,mBAAgB,EAAE;YAC3C,WAAW,EAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM;SAC5B,CAAC,GACF,CACH,CAAA;AACH,CAAC,CAAC,CAAA;AAEF,IAAM,oBAAoB,GAAG,UAAC,KAAK;;IAC3B,IAAA,KAAA,OAAwB,QAAQ,CAAC,CAAC,CAAC,IAAA,EAAlC,OAAO,QAAA,EAAE,UAAU,QAAe,CAAA;IACzC,IAAM,SAAS,GAAG,YAAY,CAAC,qBAAqB,CAAC,CAAA;IACrD,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,IAAI,EAAE,CAAA;IACrC,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,SAAS,CAAA;IACpC,IAAM,UAAU,GAAG,KAAK,CAAC,UAAU,IAAI,EAAE,CAAA;IACzC,IAAM,UAAU,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAA;IAC3C,IAAM,QAAQ,GAAG,UAAU,GAAG,QAAQ,GAAG,CAAC,CAAA;IAC1C,IAAM,KAAK,GAAG,CAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,MAAM,KAAI,CAAC,CAAA;IACrC,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAA;IAC7C,IAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,KAAK;QAC1D,IAAM,IAAI,GAAG,KAAK,GAAG,CAAC,CAAA;QACtB,OAAO;YACL,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,IAAI;SACZ,CAAA;IACH,CAAC,CAAC,CAAA;IACF,IAAM,YAAY,GAAG,UAAC,OAAe;QACnC,UAAU,CAAC,OAAO,CAAC,CAAA;IACrB,CAAC,CAAA;IAED,SAAS,CAAC;QACR,IAAI,SAAS,GAAG,CAAC,IAAI,SAAS,GAAG,OAAO,EAAE;YACxC,YAAY,CAAC,SAAS,CAAC,CAAA;SACxB;IACH,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAA;IAExB,IAAM,gBAAgB,GAAG;QACvB,IAAI,SAAS,IAAI,CAAC;YAAE,OAAM;QAC1B,OAAO,CACL,6BAAK,SAAS,EAAE,UAAG,SAAS,gBAAa;YACvC,oBAAC,KAAK;gBACJ,oBAAC,YAAY,IACX,KAAK,EAAE,OAAO,EACd,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,YAAY,EACtB,OAAO,EAAE,KAAK,EACd,eAAe,EAAE,KAAK,GACtB;gBACF,oBAAC,UAAU,eACL,KAAK,IACT,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,UAAU,CAAC,MAAM,EACxB,IAAI,EAAE,IAAI,EACV,eAAe,EAAE,KAAK,EACtB,QAAQ,EAAE,YAAY,IACtB,CACI,CACJ,CACP,CAAA;IACH,CAAC,CAAA;IAED,OAAO,CACL,oBAAC,QAAQ,QACN,MAAA,KAAK,CAAC,QAAQ,+CAAd,KAAK,EACJ,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,KAAK,CAAC,UAAU,EAAE,QAAQ,GAAG,CAAC,CAAC,EAC3C,gBAAgB,EAAE,CACnB,CACQ,CACZ,CAAA;AACH,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,UAAU,GAAuB,QAAQ,CAAC,UAAC,KAAK;IAC3D,IAAM,KAAK,GAAG,QAAQ,EAAc,CAAA;IACpC,IAAM,MAAM,GAAG,cAAc,EAAE,CAAA;IAC/B,IAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAA;IAChE,IAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAA;IACnE,IAAM,SAAS,GAAG,YAAY,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAA;IAE5D,IAAI,CAAC,MAAM;QAAE,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAA;IAE3D,IAAM,aAAa,GAAG,UAAC,MAAW;QAChC,OAAO,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;IACnC,CAAC,CAAA;IAED,IAAM,WAAW,GAAG,UAAC,UAAU;QAC7B,OAAO,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,GAAG,CAAC,UAAC,IAAI;YAC1B,IAAM,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,CAAA;YACjC,IAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;gBACvC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACxC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAA;YAChB,IAAM,KAAK,GAAG,CACZ;gBACE,oBAAC,cAAc,IACb,MAAM,EAAE,KAAK,EACb,IAAI,EAAE,KAAK,EACX,gBAAgB,EAAE,UAAC,MAAM;wBACvB,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;4BAAE,OAAO,KAAK,CAAA;wBAC3C,OAAO,IAAI,CAAA;oBACb,CAAC,EACD,oBAAoB,SACpB;gBACD,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CACtB,CACR,CAAA;YACD,IAAM,KAAK,GAAG,CACZ;gBACE,oBAAC,cAAc,IACb,MAAM,EAAE,KAAK,EACb,IAAI,EAAE,KAAK,EACX,gBAAgB,EAAE,UAAC,MAAM;wBACvB,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC;4BAAE,OAAO,KAAK,CAAA;wBAC/C,OAAO,IAAI,CAAA;oBACb,CAAC,EACD,oBAAoB,SACpB;gBACD,KAAK,CAAC,KAAK,CACP,CACR,CAAA;YACD,IAAM,OAAO,GAAG,CACd,oBAAC,cAAc,IACb,MAAM,EAAE,KAAK,EACb,IAAI,EAAE,KAAK,EACX,gBAAgB,EAAE,UAAC,MAAM;oBACvB,IAAI,gBAAgB,CAAC,MAAM,CAAC;wBAAE,OAAO,KAAK,CAAA;oBAC1C,IAAI,oBAAoB,CAAC,MAAM,CAAC;wBAAE,OAAO,KAAK,CAAA;oBAC9C,OAAO,IAAI,CAAA;gBACb,CAAC,GACD,CACH,CAAA;YACD,OAAO,CACL,oBAAC,SAAS,CAAC,IAAI,IAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI;gBACpD,oBAAC,UAAU;oBACT,oBAAC,IAAI,eACC,KAAK,IACT,QAAQ,EAAE,cAAO,CAAC,EAClB,SAAS,EAAE,GAAG,CAAC,UAAG,SAAS,UAAO,EAAE,KAAK,CAAC,SAAS,CAAC,EACpD,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,KAAK,KAEX,OAAO,CACH,CACI,CACE,CAClB,CAAA;QACH,CAAC,CAAC,CAAA;IACJ,CAAC,CAAA;IAED,IAAM,cAAc,GAAG;QACrB,OAAO,MAAM,CAAC,gBAAgB,CAAC,UAAC,QAAQ,EAAE,MAAM,EAAE,GAAG;YACnD,IAAI,mBAAmB,CAAC,MAAM,CAAC,EAAE;gBAC/B,OAAO,oBAAC,cAAc,IAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,GAAI,CAAA;aACrD;YACD,OAAO,QAAQ,CAAA;QACjB,CAAC,EAAE,IAAI,CAAC,CAAA;IACV,CAAC,CAAA;IACD,OAAO,CACL,oBAAC,QAAQ;QACN,CAAC,CAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,MAAM,CAAA,IAAI,CACtB,oBAAC,IAAI,eACC,KAAK,IACT,QAAQ,EAAE,cAAO,CAAC,EAClB,SAAS,EAAE,GAAG,CAAC,UAAG,SAAS,UAAO,EAAE,KAAK,CAAC,SAAS,CAAC,EACpD,KAAK,EAAE,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK;YAEjC,oBAAC,KAAK,OAAG,CACJ,CACR;QACD,oBAAC,oBAAoB,eAAK,UAAU,IAAE,UAAU,EAAE,UAAU,KACzD,UAAC,EAAE,EAAE,KAAK,IAAK,OAAA,CACd,oBAAC,SAAS;YACR,oBAAC,QAAQ,eAAK,CAAC,KAAK,CAAC,IAAI,IAAI,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,GAC5C,WAAW,CAAC,EAAE,CAAC,CACP;YACX,6BAAK,KAAK,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,IAAG,KAAK,CAAO;YAC3D,cAAc,EAAE,CACP,CACb,EARe,CAQf,CACoB,CACd,CACZ,CAAA;AACH,CAAC,CAAC,CAAA;AAEF,UAAU,CAAC,WAAW,GAAG,YAAY,CAAA;AAErC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAA;AAE3B,eAAe,UAAU,CAAA","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\nimport { Card, Empty, Pagination, Space, Select, Badge } from 'antd'\nimport { CardProps } from 'antd/lib/card'\nimport { IGridOptions } from '@formily/grid'\nimport { ArrayField } from '@formily/core'\nimport {\n  useForm,\n  useField,\n  observer,\n  useFieldSchema,\n  RecursionField,\n} from '@formily/react'\nimport { isBool } from '@formily/shared'\nimport cls from 'classnames'\nimport { ISchema } from '@formily/json-schema'\nimport { SelectProps } from 'antd/lib/select'\nimport { usePrefixCls } from '../__builtins__'\nimport { ArrayBase, ArrayBaseMixins } from '../array-base'\nimport FormGrid from '../form-grid'\n\nconst { GridColumn } = FormGrid\n\ninterface IStatusSelectProps extends SelectProps<any> {\n  pageSize?: number\n}\n\ninterface ArrayCardsProps extends CardProps {\n  grid?: IGridOptions\n  pagination?: any\n}\n\ntype ComposedArrayCards = React.FC<ArrayCardsProps> & ArrayBaseMixins\n\nconst isAdditionComponent = (schema: ISchema) => {\n  return schema['x-component']?.indexOf('Addition') > -1\n}\n\nconst isIndexComponent = (schema: ISchema) => {\n  return schema['x-component']?.indexOf('Index') > -1\n}\n\nconst isRemoveComponent = (schema: ISchema) => {\n  return schema['x-component']?.indexOf('Remove') > -1\n}\n\nconst isMoveUpComponent = (schema: ISchema) => {\n  return schema['x-component']?.indexOf('MoveUp') > -1\n}\n\nconst isMoveDownComponent = (schema: ISchema) => {\n  return schema['x-component']?.indexOf('MoveDown') > -1\n}\n\nconst isCopyComponent = (schema: ISchema) => {\n  return schema['x-component']?.indexOf('Copy') > -1\n}\n\nconst isOperationComponent = (schema: ISchema) => {\n  return (\n    isAdditionComponent(schema) ||\n    isRemoveComponent(schema) ||\n    isMoveDownComponent(schema) ||\n    isMoveUpComponent(schema) ||\n    isCopyComponent(schema)\n  )\n}\n\nconst StatusSelect: React.FC<IStatusSelectProps> = observer((props) => {\n  const form = useForm()\n  const field = useField<ArrayField>()\n  const prefixCls = usePrefixCls('formily-array-table')\n  const errors = form.queryFeedbacks({\n    type: 'error',\n    address: `${field.address}.*`,\n  })\n  const parseIndex = (address: string) => {\n    return Number(\n      address\n        .slice(address.indexOf(field.address.toString()) + 1)\n        .match(/(\\d+)/)?.[1]\n    )\n  }\n\n  const options = props.options?.map(({ label, value }) => {\n    const hasError = errors.some(({ address }) => {\n      const currentIndex = parseIndex(address)\n      const startIndex = (value - 1) * props.pageSize\n      const endIndex = value * props.pageSize\n      return currentIndex >= startIndex && currentIndex <= endIndex\n    })\n    return {\n      label: hasError ? <Badge dot>{label}</Badge> : label,\n      value,\n    }\n  })\n\n  const width = String(options?.length).length * 15\n\n  return (\n    <Select\n      value={props.value}\n      onChange={props.onChange}\n      options={options}\n      virtual\n      style={{\n        width: width < 60 ? 60 : width,\n      }}\n      className={cls(`${prefixCls}-status-select`, {\n        'has-error': errors?.length,\n      })}\n    />\n  )\n})\n\nconst ArrayCardsPagination = (props) => {\n  const [current, setCurrent] = useState(1)\n  const prefixCls = usePrefixCls('formily-array-cards')\n  const pageSize = props.pageSize || 10\n  const size = props.size || 'default'\n  const dataSource = props.dataSource || []\n  const startIndex = (current - 1) * pageSize\n  const endIndex = startIndex + pageSize - 1\n  const total = dataSource?.length || 0\n  const totalPage = Math.ceil(total / pageSize)\n  const pages = Array.from(new Array(totalPage)).map((_, index) => {\n    const page = index + 1\n    return {\n      label: page,\n      value: page,\n    }\n  })\n  const handleChange = (current: number) => {\n    setCurrent(current)\n  }\n\n  useEffect(() => {\n    if (totalPage > 0 && totalPage < current) {\n      handleChange(totalPage)\n    }\n  }, [totalPage, current])\n\n  const renderPagination = () => {\n    if (totalPage <= 1) return\n    return (\n      <div className={`${prefixCls}-pagination`}>\n        <Space>\n          <StatusSelect\n            value={current}\n            pageSize={pageSize}\n            onChange={handleChange}\n            options={pages}\n            notFoundContent={false}\n          />\n          <Pagination\n            {...props}\n            pageSize={pageSize}\n            current={current}\n            total={dataSource.length}\n            size={size}\n            showSizeChanger={false}\n            onChange={handleChange}\n          />\n        </Space>\n      </div>\n    )\n  }\n\n  return (\n    <Fragment>\n      {props.children?.(\n        dataSource?.slice(startIndex, endIndex + 1),\n        renderPagination()\n      )}\n    </Fragment>\n  )\n}\n\nexport const ArrayCards: ComposedArrayCards = observer((props) => {\n  const field = useField<ArrayField>()\n  const schema = useFieldSchema()\n  const dataSource = Array.isArray(field.value) ? field.value : []\n  const pagination = isBool(props.pagination) ? {} : props.pagination\n  const prefixCls = usePrefixCls('formily-array-cards', props)\n\n  if (!schema) throw new Error('can not found schema object')\n\n  const defaultRowKey = (record: any) => {\n    return dataSource.indexOf(record)\n  }\n\n  const renderItems = (dataSource) => {\n    return dataSource?.map((item) => {\n      const index = defaultRowKey(item)\n      const items = Array.isArray(schema.items)\n        ? schema.items[index] || schema.items[0]\n        : schema.items\n      const title = (\n        <span>\n          <RecursionField\n            schema={items}\n            name={index}\n            filterProperties={(schema) => {\n              if (!isIndexComponent(schema)) return false\n              return true\n            }}\n            onlyRenderProperties\n          />\n          {props.title || field.title}\n        </span>\n      )\n      const extra = (\n        <span>\n          <RecursionField\n            schema={items}\n            name={index}\n            filterProperties={(schema) => {\n              if (!isOperationComponent(schema)) return false\n              return true\n            }}\n            onlyRenderProperties\n          />\n          {props.extra}\n        </span>\n      )\n      const content = (\n        <RecursionField\n          schema={items}\n          name={index}\n          filterProperties={(schema) => {\n            if (isIndexComponent(schema)) return false\n            if (isOperationComponent(schema)) return false\n            return true\n          }}\n        />\n      )\n      return (\n        <ArrayBase.Item key={index} index={index} record={item}>\n          <GridColumn>\n            <Card\n              {...props}\n              onChange={() => {}}\n              className={cls(`${prefixCls}-item`, props.className)}\n              title={title}\n              extra={extra}\n            >\n              {content}\n            </Card>\n          </GridColumn>\n        </ArrayBase.Item>\n      )\n    })\n  }\n\n  const renderAddition = () => {\n    return schema.reduceProperties((addition, schema, key) => {\n      if (isAdditionComponent(schema)) {\n        return <RecursionField schema={schema} name={key} />\n      }\n      return addition\n    }, null)\n  }\n  return (\n    <Fragment>\n      {!dataSource?.length && (\n        <Card\n          {...props}\n          onChange={() => {}}\n          className={cls(`${prefixCls}-item`, props.className)}\n          title={props.title || field.title}\n        >\n          <Empty />\n        </Card>\n      )}\n      <ArrayCardsPagination {...pagination} dataSource={dataSource}>\n        {(ds, pager) => (\n          <ArrayBase>\n            <FormGrid {...(props.grid || { maxColumns: 1 })}>\n              {renderItems(ds)}\n            </FormGrid>\n            <div style={{ marginTop: 5, marginBottom: 5 }}>{pager}</div>\n            {renderAddition()}\n          </ArrayBase>\n        )}\n      </ArrayCardsPagination>\n    </Fragment>\n  )\n})\n\nArrayCards.displayName = 'ArrayCards'\n\nArrayBase.mixin(ArrayCards)\n\nexport default ArrayCards\n"]}
{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/array-tabs/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Tabs, Badge } from 'antd'\nimport { ArrayField } from '@formily/core'\nimport {\n  useField,\n  observer,\n  useFieldSchema,\n  RecursionField,\n} from '@formily/react'\nimport { TabsProps } from 'antd/lib/tabs'\n\nexport const ArrayTabs: React.FC<TabsProps> = observer((props) => {\n  const field = useField<ArrayField>()\n  const schema = useFieldSchema()\n  const [activeKey, setActiveKey] = useState('tab-0')\n  const value = Array.isArray(field.value) ? field.value : []\n  const dataSource = value?.length ? value : [{}]\n  const onEdit = (targetKey: any, type: 'add' | 'remove') => {\n    if (type == 'add') {\n      const id = dataSource.length\n      if (field?.value?.length) {\n        field.push(null)\n      } else {\n        field.push(null, null)\n      }\n      setActiveKey(`tab-${id}`)\n    } else if (type == 'remove') {\n      const index = targetKey.match(/-(\\d+)/)?.[1]\n      field.remove(Number(index))\n      if (activeKey === targetKey) {\n        setActiveKey(`tab-${index - 1}`)\n      }\n    }\n  }\n  const badgedTab = (index: number) => {\n    const tab = `${field.title || 'Untitled'} ${index + 1}`\n    const path = field.address.concat(index)\n    const errors = field.form.queryFeedbacks({\n      type: 'error',\n      address: `${path}.**`,\n    })\n    if (errors.length) {\n      return (\n        <Badge size=\"small\" className=\"errors-badge\" count={errors.length}>\n          {tab}\n        </Badge>\n      )\n    }\n    return tab\n  }\n  return (\n    <Tabs\n      {...props}\n      activeKey={activeKey}\n      onChange={(key) => {\n        setActiveKey(key)\n      }}\n      type=\"editable-card\"\n      onEdit={onEdit}\n    >\n      {dataSource?.map((item, index) => {\n        const items = Array.isArray(schema.items)\n          ? schema.items[index]\n          : schema.items\n        const key = `tab-${index}`\n        return (\n          <Tabs.TabPane key={key} closable={index !== 0} tab={badgedTab(index)}>\n            <RecursionField schema={items} name={index} />\n          </Tabs.TabPane>\n        )\n      })}\n    </Tabs>\n  )\n})\n\nexport default ArrayTabs\n"]}
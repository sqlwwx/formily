{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/form-collapse/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Fragment, useMemo } from 'react'\nimport { Collapse, Badge } from 'antd'\nimport { model, markRaw } from '@formily/reactive'\nimport { CollapseProps, CollapsePanelProps } from 'antd/lib/collapse'\nimport {\n  useField,\n  observer,\n  useFieldSchema,\n  RecursionField,\n} from '@formily/react'\nimport { Schema, SchemaKey } from '@formily/json-schema'\nimport cls from 'classnames'\nimport { usePrefixCls } from '../__builtins__'\nimport { toArr } from '@formily/shared'\n\ntype ActiveKeys = string | number | Array<string | number>\n\ntype ActiveKey = string | number\nexport interface IFormCollapse {\n  activeKeys: ActiveKeys\n  hasActiveKey(key: ActiveKey): boolean\n  setActiveKeys(key: ActiveKeys): void\n  addActiveKey(key: ActiveKey): void\n  removeActiveKey(key: ActiveKey): void\n  toggleActiveKey(key: ActiveKey): void\n}\n\nexport interface IFormCollapseProps extends CollapseProps {\n  formCollapse?: IFormCollapse\n}\n\ntype ComposedFormCollapse = React.FC<IFormCollapseProps> & {\n  CollapsePanel?: React.FC<CollapsePanelProps>\n  createFormCollapse?: (defaultActiveKeys?: ActiveKeys) => IFormCollapse\n}\n\nconst usePanels = () => {\n  const collapseField = useField()\n  const schema = useFieldSchema()\n  const panels: { name: SchemaKey; props: any; schema: Schema }[] = []\n  schema.mapProperties((schema, name) => {\n    const field = collapseField.query(collapseField.address.concat(name)).take()\n    if (field?.display === 'none' || field?.display === 'hidden') return\n    if (schema['x-component']?.indexOf('CollapsePanel') > -1) {\n      panels.push({\n        name,\n        props: {\n          ...schema?.['x-component-props'],\n          key: schema?.['x-component-props']?.key || name,\n        },\n        schema,\n      })\n    }\n  })\n  return panels\n}\n\nconst createFormCollapse = (defaultActiveKeys?: ActiveKeys) => {\n  const formCollapse = model({\n    activeKeys: defaultActiveKeys,\n    setActiveKeys(keys: ActiveKeys) {\n      formCollapse.activeKeys = keys\n    },\n    hasActiveKey(key: ActiveKey) {\n      if (Array.isArray(formCollapse.activeKeys)) {\n        if (formCollapse.activeKeys.includes(key)) {\n          return true\n        }\n      } else if (formCollapse.activeKeys == key) {\n        return true\n      }\n      return false\n    },\n    addActiveKey(key: ActiveKey) {\n      if (formCollapse.hasActiveKey(key)) return\n      formCollapse.activeKeys = toArr(formCollapse.activeKeys).concat(key)\n    },\n    removeActiveKey(key: ActiveKey) {\n      if (Array.isArray(formCollapse.activeKeys)) {\n        formCollapse.activeKeys = formCollapse.activeKeys.filter(\n          (item) => item != key\n        )\n      } else {\n        formCollapse.activeKeys = ''\n      }\n    },\n    toggleActiveKey(key: ActiveKey) {\n      if (formCollapse.hasActiveKey(key)) {\n        formCollapse.removeActiveKey(key)\n      } else {\n        formCollapse.addActiveKey(key)\n      }\n    },\n  })\n  return markRaw(formCollapse)\n}\n\nexport const FormCollapse: ComposedFormCollapse = observer(\n  ({ formCollapse, ...props }) => {\n    const field = useField()\n    const panels = usePanels()\n    const prefixCls = usePrefixCls('formily-collapse', props)\n    const _formCollapse = useMemo(() => {\n      return formCollapse ? formCollapse : createFormCollapse()\n    }, [])\n\n    const takeActiveKeys = () => {\n      if (props.activeKey) return props.activeKey\n      if (_formCollapse?.activeKeys) return _formCollapse?.activeKeys\n      if (props.accordion) return panels[0]?.name\n      return panels.map((item) => item.name)\n    }\n\n    const badgedHeader = (key: SchemaKey, props: any) => {\n      const errors = field.form.queryFeedbacks({\n        type: 'error',\n        address: `${field.address.concat(key)}.*`,\n      })\n      if (errors.length) {\n        return (\n          <Badge size=\"small\" className=\"errors-badge\" count={errors.length}>\n            {props.header}\n          </Badge>\n        )\n      }\n      return props.header\n    }\n    return (\n      <Collapse\n        {...props}\n        className={cls(prefixCls, props.className)}\n        activeKey={takeActiveKeys()}\n        onChange={(key) => {\n          props?.onChange?.(key)\n          _formCollapse?.setActiveKeys?.(key)\n        }}\n      >\n        {panels.map(({ props, schema, name }, index) => (\n          <Collapse.Panel\n            key={index}\n            {...props}\n            header={badgedHeader(name, props)}\n            forceRender\n          >\n            <RecursionField schema={schema} name={name} />\n          </Collapse.Panel>\n        ))}\n      </Collapse>\n    )\n  }\n)\n\nconst CollapsePanel: React.FC<CollapsePanelProps> = ({ children }) => {\n  return <Fragment>{children}</Fragment>\n}\n\nFormCollapse.CollapsePanel = CollapsePanel\nFormCollapse.createFormCollapse = createFormCollapse\n\nexport default FormCollapse\n"]}
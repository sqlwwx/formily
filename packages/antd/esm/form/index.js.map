{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/form/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,OAAO,CAAA;AAEzB,OAAO,EAAE,OAAO,EAAE,YAAY,EAAgB,MAAM,gBAAgB,CAAA;AACpE,OAAO,EAAE,UAAU,EAAoB,MAAM,gBAAgB,CAAA;AAC7D,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAA;AAS7C,MAAM,CAAC,IAAM,IAAI,GAAwB,UAAC,EAOzC;IANC,IAAA,IAAI,UAAA,EACJ,SAAS,eAAA,EACT,YAAY,kBAAA,EACZ,kBAAkB,wBAAA,EAClB,sBAAsB,4BAAA,EACnB,KAAK,cANgC,qFAOzC,CADS;IAER,IAAM,GAAG,GAAG,OAAO,EAAE,CAAA;IACrB,IAAM,aAAa,GAAG,UAAC,IAAc,IAAK,OAAA,CACxC,oBAAC,WAAW,CAAC,WAAW,IAAC,KAAK,EAAE,sBAAsB;QACpD,oBAAC,UAAU,eAAK,KAAK,GAClB,KAAK,CAAC,aAAa,CAClB,SAAS,EACT;YACE,QAAQ,EAAR,UAAS,CAAkB;;gBACzB,MAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,eAAe,+CAAlB,CAAC,CAAqB,CAAA;gBACtB,MAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,cAAc,+CAAjB,CAAC,CAAoB,CAAA;gBACrB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAA;YACrD,CAAC;SACF,EACD,KAAK,CAAC,QAAQ,CACf,CACU,CACW,CAC3B,EAhByC,CAgBzC,CAAA;IACD,IAAI,IAAI;QACN,OAAO,oBAAC,YAAY,IAAC,IAAI,EAAE,IAAI,IAAG,aAAa,CAAC,IAAI,CAAC,CAAgB,CAAA;IACvE,IAAI,CAAC,GAAG;QAAE,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAA;IAClE,OAAO,aAAa,CAAC,GAAG,CAAC,CAAA;AAC3B,CAAC,CAAA;AAED,IAAI,CAAC,YAAY,GAAG;IAClB,SAAS,EAAE,MAAM;CAClB,CAAA;AAED,eAAe,IAAI,CAAA","sourcesContent":["import React from 'react'\nimport { Form as FormType, IFormFeedback } from '@formily/core'\nimport { useForm, FormProvider, JSXComponent } from '@formily/react'\nimport { FormLayout, IFormLayoutProps } from '../form-layout'\nimport { PreviewText } from '../preview-text'\nexport interface FormProps extends IFormLayoutProps {\n  form?: FormType\n  component?: JSXComponent\n  onAutoSubmit?: (values: any) => any\n  onAutoSubmitFailed?: (feedbacks: IFormFeedback[]) => void\n  previewTextPlaceholder?: React.ReactNode\n}\n\nexport const Form: React.FC<FormProps> = ({\n  form,\n  component,\n  onAutoSubmit,\n  onAutoSubmitFailed,\n  previewTextPlaceholder,\n  ...props\n}) => {\n  const top = useForm()\n  const renderContent = (form: FormType) => (\n    <PreviewText.Placeholder value={previewTextPlaceholder}>\n      <FormLayout {...props}>\n        {React.createElement(\n          component,\n          {\n            onSubmit(e: React.FormEvent) {\n              e?.stopPropagation?.()\n              e?.preventDefault?.()\n              form.submit(onAutoSubmit).catch(onAutoSubmitFailed)\n            },\n          },\n          props.children\n        )}\n      </FormLayout>\n    </PreviewText.Placeholder>\n  )\n  if (form)\n    return <FormProvider form={form}>{renderContent(form)}</FormProvider>\n  if (!top) throw new Error('must pass form instance by createForm')\n  return renderContent(top)\n}\n\nForm.defaultProps = {\n  component: 'form',\n}\n\nexport default Form\n"]}
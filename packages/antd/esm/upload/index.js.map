{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/upload/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Field } from '@formily/core'\nimport { connect, mapProps, useField } from '@formily/react'\nimport { Upload as AntdUpload, Button } from 'antd'\nimport {\n  UploadChangeParam,\n  UploadProps as AntdUploadProps,\n  DraggerProps as AntdDraggerProps,\n} from 'antd/lib/upload'\nimport { InboxOutlined, UploadOutlined } from '@ant-design/icons'\nimport { reaction } from '@formily/reactive'\nimport { UploadFile } from 'antd/lib/upload/interface'\nimport { isArr, toArr } from '@formily/shared'\nimport { UPLOAD_PLACEHOLDER } from './placeholder'\nimport { usePrefixCls } from '../__builtins__'\n\nexport type UploadProps = Omit<AntdUploadProps, 'onChange'> & {\n  textContent?: React.ReactNode\n  onChange?: (fileList: UploadFile[]) => void\n  serviceErrorMessage?: string\n}\n\nexport type DraggerProps = Omit<AntdDraggerProps, 'onChange'> & {\n  textContent?: React.ReactNode\n  onChange?: (fileList: UploadFile[]) => void\n  serviceErrorMessage?: string\n}\n\ntype ComposedUpload = React.FC<UploadProps> & {\n  Dragger?: React.FC<DraggerProps>\n}\n\ntype IUploadProps = {\n  serviceErrorMessage?: string\n  onChange?: (...args: any) => void\n}\n\nconst testOpts = (\n  ext: RegExp,\n  options: { exclude?: string[]; include?: string[] }\n) => {\n  if (options && isArr(options.include)) {\n    return options.include.some((url) => ext.test(url))\n  }\n\n  if (options && isArr(options.exclude)) {\n    return !options.exclude.some((url) => ext.test(url))\n  }\n\n  return true\n}\n\nconst getImageByUrl = (url: string, options: any) => {\n  for (let i = 0; i < UPLOAD_PLACEHOLDER.length; i++) {\n    if (\n      UPLOAD_PLACEHOLDER[i].ext.test(url) &&\n      testOpts(UPLOAD_PLACEHOLDER[i].ext, options)\n    ) {\n      return UPLOAD_PLACEHOLDER[i].icon || url\n    }\n  }\n\n  return url\n}\n\nconst getURL = (target: any) => {\n  return target?.['url'] || target?.['downloadURL'] || target?.['imgURL']\n}\nconst getThumbURL = (target: any) => {\n  return (\n    target?.['thumbUrl'] ||\n    target?.['url'] ||\n    target?.['downloadURL'] ||\n    target?.['imgURL']\n  )\n}\n\nconst getErrorMessage = (target: any) => {\n  return (\n    target?.errorMessage ||\n    target?.errMsg ||\n    target?.errorMsg ||\n    target?.message ||\n    (typeof target?.error === 'string' ? target.error : '')\n  )\n}\n\nconst getState = (target: any) => {\n  if (target?.success === false) return 'error'\n  if (target?.failed === true) return 'error'\n  if (target?.error) return 'error'\n  return target?.state || target?.status\n}\n\nconst normalizeFileList = (fileList: UploadFile[]) => {\n  if (fileList && fileList.length) {\n    return fileList.map((file, index) => {\n      return {\n        ...file,\n        uid: file.uid || `${index}`,\n        status: getState(file.response) || getState(file),\n        url: getURL(file) || getURL(file?.response),\n        thumbUrl: getImageByUrl(\n          getThumbURL(file) || getThumbURL(file?.response),\n          {\n            exclude: ['.png', '.jpg', '.jpeg', '.gif'],\n          }\n        ),\n      }\n    })\n  }\n  return []\n}\n\nconst useValidator = (validator: (value: any) => string) => {\n  const field = useField<Field>()\n  useEffect(() => {\n    const dispose = reaction(\n      () => field.value,\n      (value) => {\n        const message = validator(value)\n        field.setFeedback({\n          type: 'error',\n          code: 'UploadError',\n          messages: message ? [message] : [],\n        })\n      }\n    )\n    return () => {\n      dispose()\n    }\n  }, [])\n}\n\nconst useUploadValidator = (serviceErrorMessage = 'Upload Service Error') => {\n  useValidator((value) => {\n    const list = toArr(value)\n    for (let i = 0; i < list.length; i++) {\n      if (list[i]?.status === 'error') {\n        return (\n          getErrorMessage(list[i]?.response) ||\n          getErrorMessage(list[i]) ||\n          serviceErrorMessage\n        )\n      }\n    }\n  })\n}\n\nfunction useUploadProps<T extends IUploadProps = UploadProps>({\n  serviceErrorMessage,\n  ...props\n}: T) {\n  useUploadValidator(serviceErrorMessage)\n  const onChange = (param: UploadChangeParam<UploadFile>) => {\n    props.onChange?.(normalizeFileList([...param.fileList]))\n  }\n  return {\n    ...props,\n    onChange,\n  }\n}\n\nconst getPlaceholder = (props: UploadProps) => {\n  if (props.listType !== 'picture-card') {\n    return (\n      <Button>\n        <UploadOutlined />\n        {props.textContent}\n      </Button>\n    )\n  }\n  return <UploadOutlined style={{ fontSize: 20 }} />\n}\n\nexport const Upload: ComposedUpload = connect(\n  (props: React.PropsWithChildren<UploadProps>) => {\n    return (\n      <AntdUpload {...useUploadProps(props)}>\n        {props.children || getPlaceholder(props)}\n      </AntdUpload>\n    )\n  },\n  mapProps({\n    value: 'fileList',\n  })\n)\n\nconst Dragger = connect(\n  (props: React.PropsWithChildren<DraggerProps>) => {\n    return (\n      <div className={usePrefixCls('upload-dragger')}>\n        <AntdUpload.Dragger {...useUploadProps(props)}>\n          {props.children || (\n            <React.Fragment>\n              <p className=\"ant-upload-drag-icon\">\n                <InboxOutlined />\n              </p>\n              {props.textContent && (\n                <p className=\"ant-upload-text\">{props.textContent}</p>\n              )}\n            </React.Fragment>\n          )}\n        </AntdUpload.Dragger>\n      </div>\n    )\n  },\n  mapProps({\n    value: 'fileList',\n  })\n)\n\nUpload.Dragger = Dragger\n\nexport default Upload\n"]}
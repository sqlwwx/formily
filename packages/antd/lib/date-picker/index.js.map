{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/date-picker/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,wCAAiE;AACjE,6BAAmD;AAKnD,gDAA6C;AAC7C,+CAA+D;AAc/D,IAAM,aAAa,GAAG;IACpB,IAAM,gBAAgB,GAAG,UAAC,KAA2C;QACnE,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,OAAO,EAAE;YAC/B,OAAO,SAAS,CAAA;SACjB;aAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE;YACxC,OAAO,WAAW,CAAA;SACnB;aAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,MAAM,EAAE;YACrC,OAAO,MAAM,CAAA;SACd;aAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,MAAM,EAAE;YACrC,OAAO,SAAS,CAAA;SACjB;QACD,OAAO,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,YAAY,CAAA;IACjE,CAAC,CAAA;IACD,OAAO,UAAC,KAAU;QAChB,IAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAA;QACzD,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAA;QAC/B,6BACK,KAAK,KACR,MAAM,EAAE,MAAM,EACd,KAAK,EAAE,IAAA,wBAAU,EAAC,KAAK,CAAC,KAAK,EAAE,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,EACzE,QAAQ,EAAE,UAAC,KAAsC;gBAC/C,IAAI,QAAQ,EAAE;oBACZ,QAAQ,CAAC,IAAA,+BAAiB,EAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAA;iBAC3C;YACH,CAAC,IACF;IACH,CAAC,CAAA;AACH,CAAC,CAAA;AAEY,QAAA,UAAU,GAAuB,IAAA,eAAO,EACnD,iBAAc,EACd,IAAA,gBAAQ,EAAC,aAAa,EAAE,CAAC,EACzB,IAAA,qBAAa,EAAC,0BAAW,CAAC,UAAU,CAAC,CACtC,CAAA;AAED,kBAAU,CAAC,WAAW,GAAG,IAAA,eAAO,EAC9B,iBAAc,CAAC,WAAW,EAC1B,IAAA,gBAAQ,EAAC,aAAa,EAAE,CAAC,EACzB,IAAA,qBAAa,EAAC,0BAAW,CAAC,eAAe,CAAC,CAC3C,CAAA;AAED,kBAAe,kBAAU,CAAA","sourcesContent":["import moment from 'moment'\nimport { connect, mapProps, mapReadPretty } from '@formily/react'\nimport { DatePicker as AntdDatePicker } from 'antd'\nimport {\n  DatePickerProps as AntdDatePickerProps,\n  RangePickerProps,\n} from 'antd/lib/date-picker'\nimport { PreviewText } from '../preview-text'\nimport { formatMomentValue, momentable } from '../__builtins__'\n\ntype DatePickerProps<PickerProps> = Exclude<\n  PickerProps,\n  'value' | 'onChange'\n> & {\n  value: string\n  onChange: (value: string | string[]) => void\n}\n\ntype ComposedDatePicker = React.FC<AntdDatePickerProps> & {\n  RangePicker?: React.FC<RangePickerProps>\n}\n\nconst mapDateFormat = function () {\n  const getDefaultFormat = (props: DatePickerProps<AntdDatePickerProps>) => {\n    if (props['picker'] === 'month') {\n      return 'YYYY-MM'\n    } else if (props['picker'] === 'quarter') {\n      return 'YYYY-\\\\QQ'\n    } else if (props['picker'] === 'year') {\n      return 'YYYY'\n    } else if (props['picker'] === 'week') {\n      return 'gggg-wo'\n    }\n    return props['showTime'] ? 'YYYY-MM-DD HH:mm:ss' : 'YYYY-MM-DD'\n  }\n  return (props: any) => {\n    const format = props['format'] || getDefaultFormat(props)\n    const onChange = props.onChange\n    return {\n      ...props,\n      format: format,\n      value: momentable(props.value, format === 'gggg-wo' ? 'gggg-ww' : format),\n      onChange: (value: moment.Moment | moment.Moment[]) => {\n        if (onChange) {\n          onChange(formatMomentValue(value, format))\n        }\n      },\n    }\n  }\n}\n\nexport const DatePicker: ComposedDatePicker = connect(\n  AntdDatePicker,\n  mapProps(mapDateFormat()),\n  mapReadPretty(PreviewText.DatePicker)\n)\n\nDatePicker.RangePicker = connect(\n  AntdDatePicker.RangePicker,\n  mapProps(mapDateFormat()),\n  mapReadPretty(PreviewText.DateRangePicker)\n)\n\nexport default DatePicker\n"]}
{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/form-dialog/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Fragment, useRef, useLayoutEffect, useState } from 'react'\nimport { createPortal } from 'react-dom'\nimport { createForm, IFormProps, Form } from '@formily/core'\nimport { toJS } from '@formily/reactive'\nimport { FormProvider, Observer, observer } from '@formily/react'\nimport {\n  isNum,\n  isStr,\n  isBool,\n  isFn,\n  applyMiddleware,\n  IMiddleware,\n} from '@formily/shared'\nimport { Modal, ModalProps } from 'antd'\nimport {\n  usePrefixCls,\n  loading,\n  createPortalProvider,\n  createPortalRoot,\n} from '../__builtins__'\n\ntype FormDialogRenderer =\n  | React.ReactElement\n  | ((form: Form) => React.ReactElement)\n\ntype ModalTitle = string | number | React.ReactElement\n\nconst isModalTitle = (props: any): props is ModalTitle => {\n  return (\n    isNum(props) || isStr(props) || isBool(props) || React.isValidElement(props)\n  )\n}\n\nconst getModelProps = (props: any): IModalProps => {\n  if (isModalTitle(props)) {\n    return {\n      title: props,\n    }\n  } else {\n    return props\n  }\n}\n\nexport interface IFormDialog {\n  forOpen(middleware: IMiddleware<IFormProps>): IFormDialog\n  forConfirm(middleware: IMiddleware<Form>): IFormDialog\n  forCancel(middleware: IMiddleware<Form>): IFormDialog\n  open(props?: IFormProps): Promise<any>\n  close(): void\n}\n\nexport interface IModalProps extends ModalProps {\n  onOk?: (event: React.MouseEvent<HTMLElement>) => void | boolean\n  onCancel?: (event: React.MouseEvent<HTMLElement>) => void | boolean\n  loadingText?: React.ReactNode\n}\n\nexport function FormDialog(\n  title: IModalProps,\n  id: string,\n  renderer: FormDialogRenderer\n): IFormDialog\nexport function FormDialog(\n  title: IModalProps,\n  renderer: FormDialogRenderer\n): IFormDialog\nexport function FormDialog(\n  title: ModalTitle,\n  id: string,\n  renderer: FormDialogRenderer\n): IFormDialog\nexport function FormDialog(\n  title: ModalTitle,\n  renderer: FormDialogRenderer\n): IFormDialog\nexport function FormDialog(title: any, id: any, renderer?: any): IFormDialog {\n  if (isFn(id) || React.isValidElement(id)) {\n    renderer = id\n    id = 'form-dialog'\n  }\n  const env = {\n    host: document.createElement('div'),\n    form: null,\n    promise: null,\n    openMiddlewares: [],\n    confirmMiddlewares: [],\n    cancelMiddlewares: [],\n  }\n  const root = createPortalRoot(env.host, id)\n  const props = getModelProps(title)\n  const modal = {\n    ...props,\n    afterClose: () => {\n      props?.afterClose?.()\n      root.unmount()\n    },\n  }\n  const DialogContent = observer(() => {\n    return <Fragment>{isFn(renderer) ? renderer(env.form) : renderer}</Fragment>\n  })\n  const renderDialog = (\n    visible = true,\n    resolve?: () => any,\n    reject?: () => any\n  ) => {\n    return (\n      <Observer>\n        {() => (\n          <Modal\n            {...modal}\n            visible={visible}\n            confirmLoading={env.form.submitting}\n            onCancel={(e) => {\n              if (modal?.onCancel?.(e) !== false) {\n                reject()\n              }\n            }}\n            onOk={async (e) => {\n              if (modal?.onOk?.(e) !== false) {\n                resolve()\n              }\n            }}\n          >\n            <FormProvider form={env.form}>\n              <DialogContent />\n            </FormProvider>\n          </Modal>\n        )}\n      </Observer>\n    )\n  }\n\n  document.body.appendChild(env.host)\n  const formDialog = {\n    forOpen: (middleware: IMiddleware<IFormProps>) => {\n      if (isFn(middleware)) {\n        env.openMiddlewares.push(middleware)\n      }\n      return formDialog\n    },\n    forConfirm: (middleware: IMiddleware<Form>) => {\n      if (isFn(middleware)) {\n        env.confirmMiddlewares.push(middleware)\n      }\n      return formDialog\n    },\n    forCancel: (middleware: IMiddleware<Form>) => {\n      if (isFn(middleware)) {\n        env.cancelMiddlewares.push(middleware)\n      }\n      return formDialog\n    },\n    open: async (props: IFormProps) => {\n      if (env.promise) return env.promise\n      env.promise = new Promise(async (resolve, reject) => {\n        try {\n          props = await loading(modal.loadingText, () =>\n            applyMiddleware(props, env.openMiddlewares)\n          )\n          env.form = env.form || createForm(props)\n        } catch (e) {\n          reject(e)\n        }\n        root.render(() =>\n          renderDialog(\n            true,\n            () => {\n              env.form\n                .submit(async () => {\n                  await applyMiddleware(env.form, env.confirmMiddlewares)\n                  resolve(toJS(env.form.values))\n                  formDialog.close()\n                })\n                .catch(() => {})\n            },\n            async () => {\n              await loading(modal.loadingText, () =>\n                applyMiddleware(env.form, env.cancelMiddlewares)\n              )\n              formDialog.close()\n            }\n          )\n        )\n      })\n      return env.promise\n    },\n    close: () => {\n      if (!env.host) return\n      root.render(() => renderDialog(false))\n    },\n  }\n  return formDialog\n}\n\nconst DialogFooter: React.FC = (props) => {\n  const ref = useRef<HTMLDivElement>()\n  const [footer, setFooter] = useState<HTMLDivElement>()\n  const footerRef = useRef<HTMLDivElement>()\n  const prefixCls = usePrefixCls('modal')\n  useLayoutEffect(() => {\n    const content = ref.current?.closest(`.${prefixCls}-content`)\n    if (content) {\n      if (!footerRef.current) {\n        footerRef.current = content.querySelector(`.${prefixCls}-footer`)\n        if (!footerRef.current) {\n          footerRef.current = document.createElement('div')\n          footerRef.current.classList.add(`${prefixCls}-footer`)\n          content.appendChild(footerRef.current)\n        }\n      }\n      setFooter(footerRef.current)\n    }\n  })\n\n  footerRef.current = footer\n\n  return (\n    <div ref={ref} style={{ display: 'none' }}>\n      {footer && createPortal(props.children, footer)}\n    </div>\n  )\n}\n\nFormDialog.Footer = DialogFooter\n\nFormDialog.Portal = createPortalProvider('form-dialog')\n\nexport default FormDialog\n"]}
{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/password/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gDAAyB;AACzB,wCAAuD;AACvD,6BAA4B;AAE5B,uDAAqD;AACrD,gDAA6C;AAMhC,QAAA,QAAQ,GAAG,IAAA,eAAO,EAAC,UAAC,KAAqB;IAC5C,IAAA,KAAK,GAA0C,KAAK,MAA/C,EAAE,SAAS,GAA+B,KAAK,UAApC,EAAE,aAAa,GAAgB,KAAK,cAArB,EAAK,MAAM,UAAK,KAAK,EAAtD,uCAA8C,CAAF,CAAU;IAC5D,IAAM,UAAU,GAAwB;QACtC,QAAQ,EAAE,UAAU;QACpB,MAAM,EAAE,CAAC;QACT,MAAM,EAAE,CAAC;QACT,GAAG,EAAE,CAAC;QACN,UAAU,EAAE,MAAM;QAClB,KAAK,EAAE,CAAC;QACR,SAAS,EAAE,oBAAoB;KAChC,CAAA;IACD,OAAO,CACL,wCAAM,SAAS,EAAE,SAAS;QACxB,8BAAC,YAAK,CAAC,QAAQ,eAAK,MAAM,IAAE,KAAK,EAAE,KAAK,IAAI;QAC3C,aAAa,IAAI,CAChB,8BAAC,mCAAgB,IAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,IACnC,UAAC,KAAK;YACL,OAAO,CACL,uCACE,KAAK,EAAE;oBACL,UAAU,EAAE,SAAS;oBACrB,YAAY,EAAE,CAAC;oBACf,QAAQ,EAAE,UAAU;iBACrB;gBAED,uCAAK,KAAK,wBAAO,UAAU,KAAE,IAAI,EAAE,KAAK,MAAM;gBAC9C,uCAAK,KAAK,wBAAO,UAAU,KAAE,IAAI,EAAE,KAAK,MAAM;gBAC9C,uCAAK,KAAK,wBAAO,UAAU,KAAE,IAAI,EAAE,KAAK,MAAM;gBAC9C,uCAAK,KAAK,wBAAO,UAAU,KAAE,IAAI,EAAE,KAAK,MAAM;gBAC9C,uCACE,KAAK,EAAE;wBACL,QAAQ,EAAE,UAAU;wBACpB,eAAe,EACb,iDAAiD;wBACnD,UAAU,EAAE,uBAAuB;wBACnC,MAAM,EAAE,CAAC;wBACT,KAAK,EAAE,MAAM;wBACb,SAAS,EAAE,CAAC;wBACZ,QAAQ,EAAE,sBAAe,KAAK,iBAAO,KAAK,mBAAgB;qBAC3D,GACD,CACE,CACP,CAAA;QACH,CAAC,CACgB,CACpB,CACI,CACR,CAAA;AACH,CAAC,EAAE,IAAA,qBAAa,EAAC,0BAAW,CAAC,KAAK,CAAC,CAAC,CAAA;AAEpC,kBAAe,gBAAQ,CAAA","sourcesContent":["import React from 'react'\nimport { connect, mapReadPretty } from '@formily/react'\nimport { Input } from 'antd'\nimport { PasswordProps } from 'antd/lib/input'\nimport { PasswordStrength } from './PasswordStrength'\nimport { PreviewText } from '../preview-text'\n\nexport interface IPasswordProps extends PasswordProps {\n  checkStrength: boolean\n}\n\nexport const Password = connect((props: IPasswordProps) => {\n  const { value, className, checkStrength, ...others } = props\n  const blockStyle: React.CSSProperties = {\n    position: 'absolute',\n    zIndex: 1,\n    height: 8,\n    top: 0,\n    background: '#fff',\n    width: 1,\n    transform: 'translate(-50%, 0)',\n  }\n  return (\n    <span className={className}>\n      <Input.Password {...others} value={value} />\n      {checkStrength && (\n        <PasswordStrength value={String(value)}>\n          {(score) => {\n            return (\n              <div\n                style={{\n                  background: '#e0e0e0',\n                  marginBottom: 3,\n                  position: 'relative',\n                }}\n              >\n                <div style={{ ...blockStyle, left: '20%' }} />\n                <div style={{ ...blockStyle, left: '40%' }} />\n                <div style={{ ...blockStyle, left: '60%' }} />\n                <div style={{ ...blockStyle, left: '80%' }} />\n                <div\n                  style={{\n                    position: 'relative',\n                    backgroundImage:\n                      '-webkit-linear-gradient(left, #ff5500, #ff9300)',\n                    transition: 'all 0.35s ease-in-out',\n                    height: 8,\n                    width: '100%',\n                    marginTop: 5,\n                    clipPath: `polygon(0 0,${score}% 0,${score}% 100%,0 100%)`,\n                  }}\n                />\n              </div>\n            )\n          }}\n        </PasswordStrength>\n      )}\n    </span>\n  )\n}, mapReadPretty(PreviewText.Input))\n\nexport default Password\n"]}
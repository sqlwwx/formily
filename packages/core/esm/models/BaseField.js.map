{"version":3,"file":"BaseField.js","sourceRoot":"","sources":["../../src/models/BaseField.ts"],"names":[],"mappings":"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","sourcesContent":["import { FormPath, FormPathPattern, isValid, toArr } from '@formily/shared'\nimport {\n  JSXComponent,\n  LifeCycleTypes,\n  FieldDisplayTypes,\n  FieldPatternTypes,\n  FieldDecorator,\n  FieldComponent,\n} from '../types'\nimport { buildNodeIndexes, initFieldUpdate } from '../shared/internals'\nimport { Form } from './Form'\nimport { Query } from './Query'\n\nexport class BaseField<Decorator = any, Component = any, TextType = any> {\n  title: TextType\n  description: TextType\n\n  selfDisplay: FieldDisplayTypes\n  selfPattern: FieldPatternTypes\n  initialized: boolean\n  mounted: boolean\n  unmounted: boolean\n\n  content: any\n\n  data: any\n\n  decoratorType: Decorator\n  decoratorProps: Record<string, any>\n  componentType: Component\n  componentProps: Record<string, any>\n\n  designable: boolean\n  address: FormPath\n  path: FormPath\n  form: Form\n\n  disposers: (() => void)[] = []\n\n  makeIndexes(address: FormPathPattern) {\n    this.form.fields[address.toString()] = this as any\n    buildNodeIndexes(this as any, address)\n  }\n\n  get component() {\n    return [this.componentType, this.componentProps]\n  }\n\n  set component(value: FieldComponent<Component>) {\n    const component = toArr(value)\n    this.componentType = component[0]\n    this.componentProps = component[1] || {}\n  }\n\n  get decorator() {\n    return [this.decoratorType, this.decoratorProps]\n  }\n\n  set decorator(value: FieldDecorator<Decorator>) {\n    const decorator = toArr(value)\n    this.decoratorType = decorator[0]\n    this.decoratorProps = decorator[1] || {}\n  }\n\n  get parent() {\n    let parent = this.address.parent()\n    let identifier = parent.toString()\n    while (!this.form.fields[identifier]) {\n      parent = parent.parent()\n      identifier = parent.toString()\n      if (!identifier) return\n    }\n    return this.form.fields[identifier]\n  }\n\n  get display(): FieldDisplayTypes {\n    const parentDisplay = (this.parent as any)?.display\n    if (parentDisplay && parentDisplay !== 'visible') {\n      if (this.selfDisplay && this.selfDisplay !== 'visible')\n        return this.selfDisplay\n      return parentDisplay\n    }\n    if (isValid(this.selfDisplay)) return this.selfDisplay\n    return parentDisplay || this.form.display || 'visible'\n  }\n\n  get pattern(): FieldPatternTypes {\n    const parentPattern = (this.parent as any)?.pattern\n    if (isValid(this.selfPattern)) return this.selfPattern\n    return parentPattern || this.form.pattern || 'editable'\n  }\n\n  get editable() {\n    return this.pattern === 'editable'\n  }\n\n  get disabled() {\n    return this.pattern === 'disabled'\n  }\n\n  get readOnly() {\n    return this.pattern === 'readOnly'\n  }\n\n  get readPretty() {\n    return this.pattern === 'readPretty'\n  }\n\n  get hidden() {\n    return this.display === 'hidden'\n  }\n\n  get visible() {\n    return this.display === 'visible'\n  }\n\n  set hidden(hidden: boolean) {\n    if (!isValid(hidden)) return\n    if (hidden) {\n      this.display = 'hidden'\n    } else {\n      this.display = 'visible'\n    }\n  }\n\n  set visible(visible: boolean) {\n    if (!isValid(visible)) return\n    if (visible) {\n      this.display = 'visible'\n    } else {\n      this.display = 'none'\n    }\n  }\n\n  set editable(editable: boolean) {\n    if (!isValid(editable)) return\n    if (editable) {\n      this.pattern = 'editable'\n    } else {\n      this.pattern = 'readPretty'\n    }\n  }\n\n  set readOnly(readOnly: boolean) {\n    if (!isValid(readOnly)) return\n    if (readOnly) {\n      this.pattern = 'readOnly'\n    } else {\n      this.pattern = 'editable'\n    }\n  }\n\n  set disabled(disabled: boolean) {\n    if (!isValid(disabled)) return\n    if (disabled) {\n      this.pattern = 'disabled'\n    } else {\n      this.pattern = 'editable'\n    }\n  }\n\n  set readPretty(readPretty: boolean) {\n    if (!isValid(readPretty)) return\n    if (readPretty) {\n      this.pattern = 'readPretty'\n    } else {\n      this.pattern = 'editable'\n    }\n  }\n\n  set pattern(pattern: FieldPatternTypes) {\n    this.selfPattern = pattern\n  }\n\n  set display(display: FieldDisplayTypes) {\n    this.selfDisplay = display\n  }\n\n  setTitle = (title?: TextType) => {\n    this.title = title\n  }\n\n  setDescription = (description?: TextType) => {\n    this.description = description\n  }\n\n  setDisplay = (type?: FieldDisplayTypes) => {\n    this.display = type\n  }\n\n  setPattern = (type?: FieldPatternTypes) => {\n    this.pattern = type\n  }\n\n  setComponent = <C extends JSXComponent, ComponentProps extends object = {}>(\n    component?: C,\n    props?: ComponentProps\n  ) => {\n    if (component) {\n      this.componentType = component as any\n    }\n    if (props) {\n      this.componentProps = this.componentProps || {}\n      Object.assign(this.componentProps, props)\n    }\n  }\n\n  setComponentProps = <ComponentProps extends object = {}>(\n    props?: ComponentProps\n  ) => {\n    if (props) {\n      this.componentProps = this.componentProps || {}\n      Object.assign(this.componentProps, props)\n    }\n  }\n\n  setDecorator = <D extends JSXComponent, ComponentProps extends object = {}>(\n    component?: D,\n    props?: ComponentProps\n  ) => {\n    if (component) {\n      this.decoratorType = component as any\n    }\n    if (props) {\n      this.decoratorProps = this.decoratorProps || {}\n      Object.assign(this.decoratorProps, props)\n    }\n  }\n\n  setDecoratorProps = <ComponentProps extends object = {}>(\n    props?: ComponentProps\n  ) => {\n    if (props) {\n      this.decoratorProps = this.decoratorProps || {}\n      Object.assign(this.decoratorProps, props)\n    }\n  }\n\n  setData = (data: any) => {\n    this.data = data\n  }\n\n  setContent = (content: any) => {\n    this.content = content\n  }\n\n  onInit = () => {\n    this.initialized = true\n    initFieldUpdate(this as any)\n    this.notify(LifeCycleTypes.ON_FIELD_INIT)\n  }\n\n  onMount = () => {\n    this.mounted = true\n    this.unmounted = false\n    this.notify(LifeCycleTypes.ON_FIELD_MOUNT)\n  }\n\n  onUnmount = () => {\n    this.mounted = false\n    this.unmounted = true\n    this.notify(LifeCycleTypes.ON_FIELD_UNMOUNT)\n  }\n\n  query = (pattern: FormPathPattern | RegExp) => {\n    return new Query({\n      pattern,\n      base: this.address,\n      form: this.form,\n    })\n  }\n\n  notify = (type: LifeCycleTypes, payload?: any) => {\n    return this.form.notify(type, payload ?? this)\n  }\n\n  dispose = () => {\n    this.disposers.forEach((dispose) => {\n      dispose()\n    })\n    this.form.removeEffects(this)\n  }\n\n  destroy = () => {\n    this.dispose()\n    delete this.form.fields[this.address.toString()]\n  }\n\n  match = (pattern: FormPathPattern) => {\n    return FormPath.parse(pattern).matchAliasGroup(this.address, this.path)\n  }\n}\n"]}
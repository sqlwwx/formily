{"version":3,"file":"internals.js","sourceRoot":"","sources":["../../src/shared/internals.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  FormPath,\n  FormPathPattern,\n  each,\n  pascalCase,\n  isFn,\n  isValid,\n  isEmpty,\n  isArr,\n  isPlainObj,\n  isNumberLike,\n  clone,\n  toArr,\n} from '@formily/shared'\nimport {\n  ValidatorTriggerType,\n  validate,\n  parseValidatorDescriptions,\n} from '@formily/validator'\nimport {\n  autorun,\n  batch,\n  contains,\n  toJS,\n  isObservable,\n  DataChange,\n} from '@formily/reactive'\nimport { Field, ArrayField, Form, ObjectField } from '../models'\nimport {\n  ISpliceArrayStateProps,\n  IExchangeArrayStateProps,\n  IFieldResetOptions,\n  ISearchFeedback,\n  IFieldFeedback,\n  INodePatch,\n  GeneralField,\n  IFormFeedback,\n  LifeCycleTypes,\n  FieldMatchPattern,\n} from '../types'\nimport {\n  isArrayField,\n  isObjectField,\n  isGeneralField,\n  isDataField,\n  isForm,\n  isQuery,\n  isVoidField,\n} from './externals'\nimport {\n  RESPONSE_REQUEST_DURATION,\n  ReservedProperties,\n  MutuallyExclusiveProperties,\n  NumberIndexReg,\n  GlobalState,\n  ReadOnlyProperties,\n} from './constants'\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\n\nconst notify = (\n  target: Form | Field,\n  formType: LifeCycleTypes,\n  fieldType: LifeCycleTypes\n) => {\n  if (isForm(target)) {\n    target.notify(formType)\n  } else {\n    target.notify(fieldType)\n  }\n}\n\nexport const isHTMLInputEvent = (event: any, stopPropagation = true) => {\n  if (event?.target) {\n    if (isValid(event.target.value) || isValid(event.target.checked))\n      return true\n    if (\n      event.target.tagName &&\n      event.target.tagName !== 'INPUT' &&\n      event.target.tagName !== 'TEXTAREA' &&\n      event.target.tagName !== 'SELECT'\n    ) {\n      return false\n    }\n    if (stopPropagation) event.stopPropagation?.()\n    return true\n  }\n  return false\n}\n\nexport const getValuesFromEvent = (args: any[]) => {\n  return args.map((event) => {\n    if (event?.target) {\n      if (isValid(event.target.value)) return event.target.value\n      if (isValid(event.target.checked)) return event.target.checked\n      return\n    }\n    return event\n  })\n}\n\nexport const buildFieldPath = (field: GeneralField) => {\n  let prevArray = false\n  const fields = field.form.fields\n  const segments = field.address.segments\n  const path = segments.reduce((path: string[], key: string, index: number) => {\n    const currentPath = path.concat(key)\n    const currentAddress = segments.slice(0, index + 1)\n    const current = fields[currentAddress.join('.')]\n    if (prevArray) {\n      prevArray = false\n      return path\n    }\n    if (index >= segments.length - 1) {\n      if (isVoidField(field)) {\n        return currentPath\n      }\n      return currentPath\n    }\n    if (isVoidField(current)) {\n      const parentAddress = segments.slice(0, index)\n      const parent = fields[parentAddress.join('.')]\n      if (isArrayField(parent) && isNumberLike(key)) {\n        prevArray = true\n        return currentPath\n      }\n      return path\n    } else {\n      prevArray = false\n    }\n    return currentPath\n  }, [])\n  return new FormPath(path)\n}\n\nexport const buildNodeIndexes = (\n  field: GeneralField,\n  address: FormPathPattern\n) => {\n  field.address = FormPath.parse(address)\n  field.path = buildFieldPath(field)\n  field.form.indexes[field.path.toString()] = field.address.toString()\n  return field\n}\n\nexport const patchFieldStates = (\n  target: Record<string, GeneralField>,\n  patches: INodePatch<GeneralField>[]\n) => {\n  patches.forEach(({ type, address, oldAddress, payload }) => {\n    if (type === 'remove') {\n      target[address]?.dispose()\n      delete target[address]\n    } else if (type === 'update') {\n      if (payload) {\n        target[address] = payload\n        if (target[oldAddress] === payload) delete target[oldAddress]\n      }\n      if (address && payload) {\n        buildNodeIndexes(payload, address)\n      }\n    }\n  })\n}\n\nexport const patchFormValues = (\n  form: Form,\n  path: Array<string | number>,\n  source: any\n) => {\n  const update = (path: Array<string | number>, source: any) => {\n    if (path.length) {\n      form.setValuesIn(path, clone(source))\n    } else {\n      Object.assign(form.values, clone(source))\n    }\n  }\n\n  const patch = (source: any, path: Array<string | number> = []) => {\n    const targetValue = form.getValuesIn(path)\n    const targetField = form.query(path).take()\n    if (allowAssignDefaultValue(targetValue, source)) {\n      update(path, source)\n    } else {\n      if (isEmpty(source)) return\n      if (GlobalState.initializing) return\n      if (isPlainObj(targetValue) && isPlainObj(source)) {\n        each(source, (value, key) => {\n          patch(value, path.concat(key))\n        })\n      } else {\n        if (targetField) {\n          if (!isVoidField(targetField) && !targetField.selfModified) {\n            update(path, source)\n          }\n        } else if (form.initialized) {\n          update(path, source)\n        }\n      }\n    }\n  }\n  patch(source, path)\n}\n\nexport const matchFeedback = (\n  search?: ISearchFeedback,\n  feedback?: IFormFeedback\n) => {\n  if (!search || !feedback) return false\n  if (search.type && search.type !== feedback.type) return false\n  if (search.code && search.code !== feedback.code) return false\n  if (search.path && feedback.path) {\n    if (!FormPath.parse(search.path).match(feedback.path)) return false\n  }\n  if (search.address && feedback.address) {\n    if (!FormPath.parse(search.address).match(feedback.address)) return false\n  }\n  if (search.triggerType && search.triggerType !== feedback.triggerType)\n    return false\n  return true\n}\n\nexport const queryFeedbacks = (field: Field, search?: ISearchFeedback) => {\n  return field.feedbacks.filter((feedback) => {\n    if (!feedback.messages?.length) return false\n    return matchFeedback(search, {\n      ...feedback,\n      address: field.address?.toString(),\n      path: field.path?.toString(),\n    })\n  })\n}\n\nexport const queryFeedbackMessages = (\n  field: Field,\n  search: ISearchFeedback\n) => {\n  return queryFeedbacks(field, search).reduce(\n    (buf, info) => (isEmpty(info.messages) ? buf : buf.concat(info.messages)),\n    []\n  )\n}\n\nexport const updateFeedback = (field: Field, feedback?: IFieldFeedback) => {\n  if (!feedback) return\n  return batch(() => {\n    if (!field.feedbacks.length) {\n      if (!feedback.messages?.length) {\n        return\n      }\n      field.feedbacks = [feedback]\n    } else {\n      const searched = queryFeedbacks(field, feedback)\n      if (searched.length) {\n        field.feedbacks = field.feedbacks.reduce((buf, item) => {\n          if (searched.includes(item)) {\n            if (feedback.messages?.length) {\n              item.messages = feedback.messages\n              return buf.concat(item)\n            } else {\n              return buf\n            }\n          } else {\n            return buf.concat(item)\n          }\n        }, [])\n        return\n      } else if (feedback.messages?.length) {\n        field.feedbacks = field.feedbacks.concat(feedback)\n      }\n    }\n  })\n}\n\nexport const validateToFeedbacks = async (\n  field: Field,\n  triggerType?: ValidatorTriggerType\n) => {\n  const results = await validate(field.value, field.validator, {\n    triggerType,\n    validateFirst: field.props.validateFirst || field.form.props.validateFirst,\n    context: { field, form: field.form },\n  })\n\n  batch(() => {\n    each(results, (messages, type) => {\n      field.setFeedback({\n        triggerType,\n        type,\n        code: pascalCase(`validate-${type}`),\n        messages: messages,\n      } as any)\n    })\n  })\n  return results\n}\n\nexport const setValidatorRule = (field: Field, name: string, value: any) => {\n  if (!isValid(value)) return\n  const hasRule = parseValidatorDescriptions(field.validator).some(\n    (desc) => name in desc\n  )\n  const rule = {\n    [name]: value,\n  }\n  if (hasRule) {\n    if (isArr(field.validator)) {\n      field.validator = field.validator.map((desc: any) => {\n        if (isPlainObj(desc) && hasOwnProperty.call(desc, name)) {\n          desc[name] = value\n          return desc\n        }\n        return desc\n      })\n    } else if (isPlainObj(field.validator)) {\n      field.validator[name] = value\n    } else {\n      field.validator = {\n        [name]: value,\n      }\n    }\n  } else {\n    if (isArr(field.validator)) {\n      if (name === 'required') {\n        field.validator.unshift(rule)\n      } else {\n        field.validator.push(rule)\n      }\n    } else {\n      if (name === 'required') {\n        field.validator = [rule, field.validator]\n      } else if (isPlainObj(field.validator)) {\n        field.validator[name] = value\n      } else if (field.validator) {\n        field.validator = [field.validator, rule]\n      } else {\n        field.validator = rule\n      }\n    }\n  }\n}\n\nexport const spliceArrayState = (\n  field: ArrayField,\n  props?: ISpliceArrayStateProps\n) => {\n  const { startIndex, deleteCount, insertCount } = {\n    startIndex: 0,\n    deleteCount: 0,\n    insertCount: 0,\n    ...props,\n  }\n  const address = field.address.toString()\n  const addrLength = address.length\n  const fields = field.form.fields\n  const fieldPatches: INodePatch<GeneralField>[] = []\n  const offset = insertCount - deleteCount\n  const isArrayChildren = (identifier: string) => {\n    return identifier.indexOf(address) === 0 && identifier.length > addrLength\n  }\n  const isAfterNode = (identifier: string) => {\n    const afterStr = identifier.substring(addrLength)\n    const number = afterStr.match(NumberIndexReg)?.[1]\n    if (number === undefined) return false\n    const index = Number(number)\n    return index > startIndex + deleteCount - 1\n  }\n  const isInsertNode = (identifier: string) => {\n    const afterStr = identifier.substring(addrLength)\n    const number = afterStr.match(NumberIndexReg)?.[1]\n    if (number === undefined) return false\n    const index = Number(number)\n    return index >= startIndex && index < startIndex + insertCount\n  }\n  const isDeleteNode = (identifier: string) => {\n    const preStr = identifier.substring(0, addrLength)\n    const afterStr = identifier.substring(addrLength)\n    const number = afterStr.match(NumberIndexReg)?.[1]\n    if (number === undefined) return false\n    const index = Number(number)\n    return (\n      index >= startIndex &&\n      !fields[\n        `${preStr}${afterStr.replace(/^\\.\\d+/, `.${index + deleteCount}`)}`\n      ]\n    )\n  }\n  const moveIndex = (identifier: string) => {\n    if (offset === 0) return identifier\n    const preStr = identifier.substring(0, addrLength)\n    const afterStr = identifier.substring(addrLength)\n    const number = afterStr.match(NumberIndexReg)?.[1]\n    if (number === undefined) return identifier\n    const index = Number(number) + offset\n    return `${preStr}${afterStr.replace(/^\\.\\d+/, `.${index}`)}`\n  }\n\n  batch(() => {\n    each(fields, (field, identifier) => {\n      if (isArrayChildren(identifier)) {\n        if (isAfterNode(identifier)) {\n          const newIdentifier = moveIndex(identifier)\n          fieldPatches.push({\n            type: 'update',\n            address: newIdentifier,\n            oldAddress: identifier,\n            payload: field,\n          })\n        }\n        if (isInsertNode(identifier) || isDeleteNode(identifier)) {\n          fieldPatches.push({ type: 'remove', address: identifier })\n        }\n      }\n    })\n    patchFieldStates(fields, fieldPatches)\n  })\n  field.form.notify(LifeCycleTypes.ON_FORM_GRAPH_CHANGE)\n}\n\nexport const exchangeArrayState = (\n  field: ArrayField,\n  props: IExchangeArrayStateProps\n) => {\n  const { fromIndex, toIndex } = {\n    fromIndex: 0,\n    toIndex: 0,\n    ...props,\n  }\n  const address = field.address.toString()\n  const fields = field.form.fields\n  const addrLength = address.length\n  const fieldPatches: INodePatch<GeneralField>[] = []\n  const isArrayChildren = (identifier: string) => {\n    return identifier.indexOf(address) === 0 && identifier.length > addrLength\n  }\n\n  const isDown = fromIndex < toIndex\n\n  const isMoveNode = (identifier: string) => {\n    const afterStr = identifier.slice(address.length)\n    const number = afterStr.match(NumberIndexReg)?.[1]\n    if (number === undefined) return false\n    const index = Number(number)\n    return isDown\n      ? index > fromIndex && index <= toIndex\n      : index < fromIndex && index >= toIndex\n  }\n\n  const isFromNode = (identifier: string) => {\n    const afterStr = identifier.substring(addrLength)\n    const number = afterStr.match(NumberIndexReg)?.[1]\n    if (number === undefined) return false\n    const index = Number(number)\n    return index === fromIndex\n  }\n\n  const moveIndex = (identifier: string) => {\n    const preStr = identifier.substring(0, addrLength)\n    const afterStr = identifier.substring(addrLength)\n    const number = afterStr.match(NumberIndexReg)[1]\n    const current = Number(number)\n    let index = current\n    if (index === fromIndex) {\n      index = toIndex\n    } else {\n      index += isDown ? -1 : 1\n    }\n\n    return `${preStr}${afterStr.replace(/^\\.\\d+/, `.${index}`)}`\n  }\n\n  batch(() => {\n    each(fields, (field, identifier) => {\n      if (isArrayChildren(identifier)) {\n        if (isMoveNode(identifier) || isFromNode(identifier)) {\n          const newIdentifier = moveIndex(identifier)\n          fieldPatches.push({\n            type: 'update',\n            address: newIdentifier,\n            oldAddress: identifier,\n            payload: field,\n          })\n          if (!fields[newIdentifier]) {\n            fieldPatches.push({\n              type: 'remove',\n              address: identifier,\n            })\n          }\n        }\n      }\n    })\n    patchFieldStates(fields, fieldPatches)\n  })\n  field.form.notify(LifeCycleTypes.ON_FORM_GRAPH_CHANGE)\n}\n\nexport const cleanupArrayChildren = (field: ArrayField, start: number) => {\n  const address = field.address.toString()\n  const fields = field.form.fields\n\n  const isArrayChildren = (identifier: string) => {\n    return (\n      identifier.indexOf(address) === 0 && identifier.length > address.length\n    )\n  }\n\n  const isNeedCleanup = (identifier: string) => {\n    const afterStr = identifier.slice(address.length)\n    const number = afterStr.match(NumberIndexReg)?.[1]\n    if (number === undefined) return false\n    const index = Number(number)\n    return index >= start\n  }\n\n  batch(() => {\n    each(fields, (field, identifier) => {\n      if (isArrayChildren(identifier) && isNeedCleanup(identifier)) {\n        field.destroy()\n      }\n    })\n  })\n}\n\nexport const cleanupObjectChildren = (field: ObjectField, keys: string[]) => {\n  if (keys.length === 0) return\n  const address = field.address.toString()\n  const fields = field.form.fields\n\n  const isObjectChildren = (identifier: string) => {\n    return (\n      identifier.indexOf(address) === 0 && identifier.length > address.length\n    )\n  }\n\n  const isNeedCleanup = (identifier: string) => {\n    const afterStr = identifier.slice(address.length)\n    const key = afterStr.match(/^\\.([^.]+)/)?.[1]\n    if (key === undefined) return false\n    return keys.includes(key)\n  }\n\n  batch(() => {\n    each(fields, (field, identifier) => {\n      if (isObjectChildren(identifier) && isNeedCleanup(identifier)) {\n        field.destroy()\n      }\n    })\n  })\n}\n\nexport const initFieldUpdate = batch.scope.bound((field: GeneralField) => {\n  const form = field.form\n  const updates = FormPath.ensureIn(form, 'requests.updates', [])\n  const indexes = FormPath.ensureIn(form, 'requests.updateIndexes', {})\n  for (let index = 0; index < updates.length; index++) {\n    const { pattern, callbacks } = updates[index]\n    let removed = false\n    if (field.match(pattern)) {\n      callbacks.forEach((callback) => {\n        field.setState(callback)\n      })\n      if (!pattern.isWildMatchPattern && !pattern.isMatchPattern) {\n        updates.splice(index--, 1)\n        removed = true\n      }\n    }\n    if (!removed) {\n      indexes[pattern.toString()] = index\n    } else {\n      delete indexes[pattern.toString()]\n    }\n  }\n})\n\nexport const subscribeUpdate = (\n  form: Form,\n  pattern: FormPath,\n  callback: (...args: any[]) => void\n) => {\n  const updates = FormPath.ensureIn(form, 'requests.updates', [])\n  const indexes = FormPath.ensureIn(form, 'requests.updateIndexes', {})\n  const id = pattern.toString()\n  const current = indexes[id]\n  if (isValid(current)) {\n    if (\n      updates[current] &&\n      !updates[current].callbacks.some((fn: any) =>\n        fn.toString() === callback.toString() ? fn === callback : false\n      )\n    ) {\n      updates[current].callbacks.push(callback)\n    }\n  } else {\n    indexes[id] = updates.length\n    updates.push({\n      pattern,\n      callbacks: [callback],\n    })\n  }\n}\n\nexport const deserialize = (model: any, setter: any) => {\n  if (!model) return\n  if (isFn(setter)) {\n    setter(model)\n  } else {\n    for (let key in setter) {\n      if (!hasOwnProperty.call(setter, key)) continue\n      if (ReadOnlyProperties[key] || ReservedProperties[key]) continue\n      const MutuallyExclusiveKey = MutuallyExclusiveProperties[key]\n      if (\n        MutuallyExclusiveKey &&\n        hasOwnProperty.call(setter, MutuallyExclusiveKey) &&\n        !isValid(setter[MutuallyExclusiveKey])\n      )\n        continue\n      const value = setter[key]\n      if (isFn(value)) continue\n      model[key] = value\n    }\n  }\n  return model\n}\n\nexport const serialize = (model: any, getter?: any) => {\n  if (isFn(getter)) {\n    return getter(model)\n  } else {\n    const results = {}\n    for (let key in model) {\n      if (!hasOwnProperty.call(model, key)) continue\n      if (ReservedProperties[key]) continue\n      if (key === 'address' || key === 'path') {\n        results[key] = model[key].toString()\n        continue\n      }\n      const value = model[key]\n      if (isFn(value)) continue\n      results[key] = toJS(value)\n    }\n    return results\n  }\n}\n\nexport const createChildrenFeedbackFilter = (field: Field) => {\n  const identifier = field.address?.toString()\n  return ({ address }: IFormFeedback) => {\n    return address.indexOf(identifier) === 0\n  }\n}\n\nexport const createStateSetter = (model: any) => {\n  return batch.bound((setter?: any) => deserialize(model, setter))\n}\n\nexport const createStateGetter = (model: any) => {\n  return (getter?: any) => serialize(model, getter)\n}\n\nexport const createBatchStateSetter = (form: Form) => {\n  return batch.bound((pattern: FieldMatchPattern, payload?: any) => {\n    if (isQuery(pattern)) {\n      pattern.forEach((field) => {\n        field.setState(payload)\n      })\n    } else if (isGeneralField(pattern)) {\n      pattern.setState(payload)\n    } else {\n      let matchCount = 0,\n        path = FormPath.parse(pattern)\n      form.query(path).forEach((field) => {\n        field.setState(payload)\n        matchCount++\n      })\n\n      if (matchCount === 0 || path.isWildMatchPattern) {\n        subscribeUpdate(form, path, payload)\n      }\n    }\n  })\n}\n\nexport const createBatchStateGetter = (form: Form) => {\n  return (pattern: FieldMatchPattern, payload?: any) => {\n    if (isQuery(pattern)) {\n      return pattern.take(payload)\n    } else if (isGeneralField(pattern)) {\n      return (pattern as any).getState(payload)\n    } else {\n      return form.query(pattern).take((field: any) => {\n        return field.getState(payload)\n      })\n    }\n  }\n}\n\nexport const triggerFormInitialValuesChange = (\n  form: Form,\n  change: DataChange\n) => {\n  const path = change.path\n  if (Array.isArray(change.object) && change.key === 'length') return\n  if (\n    contains(form.initialValues, change.object) ||\n    contains(form.initialValues, change.value)\n  ) {\n    if (change.type === 'add' || change.type === 'set') {\n      patchFormValues(form, path.slice(1), change.value)\n    }\n    if (form.initialized) {\n      form.notify(LifeCycleTypes.ON_FORM_INITIAL_VALUES_CHANGE)\n    }\n  }\n}\n\nexport const triggerFormValuesChange = (form: Form, change: DataChange) => {\n  if (Array.isArray(change.object) && change.key === 'length') return\n  if (\n    (contains(form.values, change.object) ||\n      contains(form.values, change.value)) &&\n    form.initialized\n  ) {\n    form.notify(LifeCycleTypes.ON_FORM_VALUES_CHANGE)\n  }\n}\n\nexport const setValidating = (target: Form | Field, validating: boolean) => {\n  clearTimeout(target.requests.validate)\n  if (validating) {\n    target.requests.validate = setTimeout(() => {\n      batch(() => {\n        target.validating = validating\n        notify(\n          target,\n          LifeCycleTypes.ON_FORM_VALIDATING,\n          LifeCycleTypes.ON_FIELD_VALIDATING\n        )\n      })\n    }, RESPONSE_REQUEST_DURATION)\n    notify(\n      target,\n      LifeCycleTypes.ON_FORM_VALIDATE_START,\n      LifeCycleTypes.ON_FIELD_VALIDATE_START\n    )\n  } else {\n    if (target.validating !== validating) {\n      target.validating = validating\n    }\n    notify(\n      target,\n      LifeCycleTypes.ON_FORM_VALIDATE_END,\n      LifeCycleTypes.ON_FIELD_VALIDATE_END\n    )\n  }\n}\n\nexport const setSubmitting = (target: Form | Field, submitting: boolean) => {\n  clearTimeout(target.requests.submit)\n  if (submitting) {\n    target.requests.submit = setTimeout(() => {\n      batch(() => {\n        target.submitting = submitting\n        notify(\n          target,\n          LifeCycleTypes.ON_FORM_SUBMITTING,\n          LifeCycleTypes.ON_FIELD_SUBMITTING\n        )\n      })\n    }, RESPONSE_REQUEST_DURATION)\n    notify(\n      target,\n      LifeCycleTypes.ON_FORM_SUBMIT_START,\n      LifeCycleTypes.ON_FIELD_SUBMIT_START\n    )\n  } else {\n    if (target.submitting !== submitting) {\n      target.submitting = submitting\n    }\n    notify(\n      target,\n      LifeCycleTypes.ON_FORM_SUBMIT_END,\n      LifeCycleTypes.ON_FIELD_SUBMIT_END\n    )\n  }\n}\n\nexport const setLoading = (target: Form | Field, loading: boolean) => {\n  clearTimeout(target.requests.loading)\n  if (loading) {\n    target.requests.loading = setTimeout(() => {\n      batch(() => {\n        target.loading = loading\n        notify(\n          target,\n          LifeCycleTypes.ON_FORM_LOADING,\n          LifeCycleTypes.ON_FIELD_LOADING\n        )\n      })\n    }, RESPONSE_REQUEST_DURATION)\n  } else if (target.loading !== loading) {\n    target.loading = loading\n  }\n}\n\nexport const batchSubmit = async <T>(\n  target: Form | Field,\n  onSubmit?: (values: any) => Promise<T> | void\n): Promise<T> => {\n  const getValues = (target: Form | Field) => {\n    if (isForm(target)) {\n      return toJS(target.values)\n    }\n    return toJS(target.value)\n  }\n  target.setSubmitting(true)\n  try {\n    notify(\n      target,\n      LifeCycleTypes.ON_FORM_SUBMIT_VALIDATE_START,\n      LifeCycleTypes.ON_FIELD_SUBMIT_VALIDATE_START\n    )\n    await target.validate()\n    notify(\n      target,\n      LifeCycleTypes.ON_FORM_SUBMIT_VALIDATE_SUCCESS,\n      LifeCycleTypes.ON_FIELD_SUBMIT_VALIDATE_SUCCESS\n    )\n  } catch (e) {\n    notify(\n      target,\n      LifeCycleTypes.ON_FORM_SUBMIT_VALIDATE_FAILED,\n      LifeCycleTypes.ON_FIELD_SUBMIT_VALIDATE_FAILED\n    )\n  }\n  notify(\n    target,\n    LifeCycleTypes.ON_FORM_SUBMIT_VALIDATE_END,\n    LifeCycleTypes.ON_FIELD_SUBMIT_VALIDATE_END\n  )\n  let results: any\n  try {\n    if (target.invalid) {\n      throw target.errors\n    }\n    if (isFn(onSubmit)) {\n      results = await onSubmit(getValues(target))\n    } else {\n      results = getValues(target)\n    }\n    notify(\n      target,\n      LifeCycleTypes.ON_FORM_SUBMIT_SUCCESS,\n      LifeCycleTypes.ON_FIELD_SUBMIT_SUCCESS\n    )\n  } catch (e) {\n    target.setSubmitting(false)\n    notify(\n      target,\n      LifeCycleTypes.ON_FORM_SUBMIT_FAILED,\n      LifeCycleTypes.ON_FIELD_SUBMIT_FAILED\n    )\n    notify(\n      target,\n      LifeCycleTypes.ON_FORM_SUBMIT,\n      LifeCycleTypes.ON_FIELD_SUBMIT\n    )\n    throw e\n  }\n  target.setSubmitting(false)\n  notify(target, LifeCycleTypes.ON_FORM_SUBMIT, LifeCycleTypes.ON_FIELD_SUBMIT)\n  return results\n}\n\nexport const batchValidate = async (\n  target: Form | Field,\n  pattern: FormPathPattern,\n  triggerType?: ValidatorTriggerType\n) => {\n  if (isForm(target)) target.setValidating(true)\n  else {\n    if (target.pattern !== 'editable' || target.display !== 'visible') return\n  }\n  const tasks = []\n  target.query(pattern).forEach((field) => {\n    if (!isVoidField(field)) {\n      tasks.push(validateSelf(field, triggerType, field === target))\n    }\n  })\n  await Promise.all(tasks)\n  if (isForm(target)) target.setValidating(false)\n  if (target.invalid) {\n    notify(\n      target,\n      LifeCycleTypes.ON_FORM_VALIDATE_FAILED,\n      LifeCycleTypes.ON_FIELD_VALIDATE_FAILED\n    )\n    throw target.errors\n  }\n  notify(\n    target,\n    LifeCycleTypes.ON_FORM_VALIDATE_SUCCESS,\n    LifeCycleTypes.ON_FIELD_VALIDATE_SUCCESS\n  )\n}\n\nexport const batchReset = async (\n  target: Form | Field,\n  pattern: FormPathPattern,\n  options?: IFieldResetOptions\n) => {\n  const tasks = []\n  target.query(pattern).forEach((field) => {\n    if (!isVoidField(field)) {\n      tasks.push(resetSelf(field, options, target === field))\n    }\n  })\n  if (isForm(target)) {\n    target.modified = false\n  }\n  notify(target, LifeCycleTypes.ON_FORM_RESET, LifeCycleTypes.ON_FIELD_RESET)\n  await Promise.all(tasks)\n}\n\nexport const validateSelf = batch.bound(\n  async (target: Field, triggerType?: ValidatorTriggerType, noEmit = false) => {\n    const start = () => {\n      setValidating(target, true)\n    }\n    const end = () => {\n      setValidating(target, false)\n      if (noEmit) return\n      if (target.selfValid) {\n        target.notify(LifeCycleTypes.ON_FIELD_VALIDATE_SUCCESS)\n      } else {\n        target.notify(LifeCycleTypes.ON_FIELD_VALIDATE_FAILED)\n      }\n    }\n\n    if (target.pattern !== 'editable' || target.display !== 'visible') return {}\n    start()\n    if (!triggerType) {\n      const allTriggerTypes = parseValidatorDescriptions(\n        target.validator\n      ).reduce(\n        (types, desc) =>\n          types.indexOf(desc.triggerType) > -1\n            ? types\n            : types.concat(desc.triggerType),\n        []\n      )\n      const results = {}\n      for (let i = 0; i < allTriggerTypes.length; i++) {\n        const payload = await validateToFeedbacks(target, allTriggerTypes[i])\n        each(payload, (result, key) => {\n          results[key] = results[key] || []\n          results[key] = results[key].concat(result)\n        })\n      }\n      end()\n      return results\n    }\n    const results = await validateToFeedbacks(target, triggerType)\n    end()\n    return results\n  }\n)\n\nexport const resetSelf = batch.bound(\n  async (target: Field, options?: IFieldResetOptions, noEmit = false) => {\n    target.modified = false\n    target.selfModified = false\n    target.visited = false\n    target.feedbacks = []\n    target.inputValue = undefined\n    target.inputValues = []\n    target.caches = {}\n    if (options?.forceClear) {\n      if (isArrayField(target)) {\n        target.value = []\n      } else if (isObjectField(target)) {\n        target.value = {}\n      } else {\n        target.value = undefined\n      }\n    } else if (isValid(target.value)) {\n      target.value = toJS(target.initialValue)\n    }\n    if (!noEmit) {\n      target.notify(LifeCycleTypes.ON_FIELD_RESET)\n    }\n    if (options?.validate) {\n      return await validateSelf(target)\n    }\n  }\n)\n\nexport const modifySelf = (target: Field) => {\n  if (target.selfModified) return\n  target.selfModified = true\n  target.modified = true\n  let parent = target.parent\n  while (parent) {\n    if (isDataField(parent)) {\n      if (parent.modified) return\n      parent.modified = true\n    }\n    parent = parent.parent\n  }\n  target.form.modified = true\n}\n\nexport const getValidFormValues = (values: any) => {\n  if (isObservable(values)) return values\n  return clone(values || {})\n}\n\nexport const getValidFieldDefaultValue = (value: any, initialValue: any) => {\n  if (allowAssignDefaultValue(value, initialValue)) return clone(initialValue)\n  return value\n}\n\nexport const allowAssignDefaultValue = (target: any, source: any) => {\n  const isEmptyTarget = isEmpty(target)\n  const isEmptySource = isEmpty(source)\n  const isValidTarget = isValid(target)\n  const isValidSource = isValid(source)\n  if (!isValidTarget) {\n    if (isValidSource) {\n      return true\n    }\n    return false\n  }\n\n  if (isEmptyTarget) {\n    if (isEmptySource) {\n      return false\n    } else {\n      return true\n    }\n  }\n  return false\n}\n\nexport const createReactions = (field: GeneralField) => {\n  const reactions = toArr(field.props.reactions)\n  field.form.addEffects(field, () => {\n    reactions.forEach((reaction) => {\n      if (isFn(reaction)) {\n        field.disposers.push(autorun(batch.scope.bound(() => reaction(field))))\n      }\n    })\n  })\n}\n\nexport const initializeStart = () => {\n  GlobalState.initializing = true\n}\n\nexport const initializeEnd = () => {\n  batch.endpoint(() => {\n    GlobalState.initializing = false\n  })\n}\n"]}
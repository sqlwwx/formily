{"version":3,"file":"checkers.js","sourceRoot":"","sources":["../../src/shared/checkers.ts"],"names":[],"mappings":"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","sourcesContent":["import { isFn } from '@formily/shared'\nimport { DataField } from '..'\nimport {\n  Form,\n  Field,\n  ArrayField,\n  ObjectField,\n  VoidField,\n  Query,\n} from '../models'\nimport {\n  IFormState,\n  IFieldState,\n  IVoidFieldState,\n  GeneralField,\n  IGeneralFieldState,\n} from '../types'\n\nexport const isForm = (node: any): node is Form => {\n  return node instanceof Form\n}\n\nexport const isField = (node: any): node is Field => {\n  return node instanceof Field\n}\n\nexport const isGeneralField = (node: any): node is GeneralField => {\n  return node instanceof Field || node instanceof VoidField\n}\n\nexport const isArrayField = (node: any): node is ArrayField => {\n  return node instanceof ArrayField\n}\n\nexport const isObjectField = (node: any): node is ObjectField => {\n  return node instanceof ObjectField\n}\n\nexport const isVoidField = (node: any): node is VoidField => {\n  return node instanceof VoidField\n}\n\nexport const isFormState = (state: any): state is IFormState => {\n  if (isFn(state?.initialize)) return false\n  return state?.displayName === 'Form'\n}\n\nexport const isFieldState = (state: any): state is IFieldState => {\n  if (isFn(state?.initialize)) return false\n  return state?.displayName === 'Field'\n}\n\nexport const isGeneralFieldState = (node: any): node is IGeneralFieldState => {\n  if (isFn(node?.initialize)) return false\n  return node?.displayName?.indexOf('Field') > -1\n}\n\nexport const isArrayFieldState = (state: any): state is IFieldState => {\n  if (isFn(state?.initialize)) return false\n  return state?.displayName === 'ArrayField'\n}\n\nexport const isDataField = (node: any): node is DataField => {\n  return isField(node) || isArrayField(node) || isObjectField(node)\n}\n\nexport const isDataFieldState = (node: any) => {\n  return (\n    isFieldState(node) || isObjectFieldState(node) || isArrayFieldState(node)\n  )\n}\n\nexport const isObjectFieldState = (state: any): state is IFieldState => {\n  if (isFn(state?.initialize)) return false\n  return state?.displayName === 'ObjectField'\n}\n\nexport const isVoidFieldState = (state: any): state is IVoidFieldState => {\n  if (isFn(state?.initialize)) return false\n  return state?.displayName === 'VoidField'\n}\n\nexport const isQuery = (query: any): query is Query => {\n  return query && query instanceof Query\n}\n"]}
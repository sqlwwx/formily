{"version":3,"file":"resolve-component.js","sourceRoot":"","sources":["../../../src/__builtins__/shared/resolve-component.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAA;AAE/C,OAAO,EAAE,OAAO,EAAE,MAAM,SAAS,CAAA;AAEjC,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAC9B,KAAiB,EACjB,KAA2B;IAE3B,IAAI,KAAK,EAAE;QACT,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC1D,OAAO,KAAK,CAAA;SACb;aAAM,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE;YACtC,OAAQ,KAAkB,CAAC,KAAK,CAAC,CAAA;SAClC;aAAM,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;YACzB,OAAO,KAAK,CAAA;SACb;aAAM;YACL,OAAO,CAAC,CAAC,KAAK,CAAC,KAAkB,CAAC,EAAE,EAAE,KAAK,OAAA,EAAE,CAAC,CAAA;SAC/C;KACF;IAED,OAAO,IAAI,CAAA;AACb,CAAC,CAAA","sourcesContent":["import { Component } from 'vue'\nimport { h, toRaw } from '@vue/composition-api'\nimport { SlotTypes } from '.'\nimport { isVnode } from './utils'\n\nexport const resolveComponent = (\n  child?: SlotTypes,\n  props?: Record<string, any>\n) => {\n  if (child) {\n    if (typeof child === 'string' || typeof child === 'number') {\n      return child\n    } else if (typeof child === 'function') {\n      return (child as Function)(props)\n    } else if (isVnode(child)) {\n      return child\n    } else {\n      return h(toRaw(child as Component), { props })\n    }\n  }\n\n  return null\n}\n"]}
{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/editable/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { defineComponent, ref, onBeforeUnmount } from '@vue/composition-api'\nimport { observer } from '@formily/reactive-vue'\nimport { reaction } from '@formily/reactive'\nimport { isVoidField, Field } from '@formily/core'\nimport { h, useField } from '@formily/vue'\nimport { Popover } from 'element-ui'\nimport { stylePrefix } from '../__builtins__/configs'\n\nimport type { Popover as PopoverProps } from 'element-ui'\nimport { FormBaseItem, FormItemProps } from '../form-item'\nimport { composeExport } from '../__builtins__/shared'\n\nexport type EditableProps = FormItemProps\nexport type EditablePopoverProps = PopoverProps\n\nconst getParentPattern = (fieldRef) => {\n  const field = fieldRef.value\n  return field?.parent?.pattern || field?.form?.pattern\n}\n\nconst getFormItemProps = (fieldRef): FormItemProps => {\n  const field = fieldRef.value\n\n  if (isVoidField(field)) return {}\n  if (!field) return {}\n  const takeMessage = () => {\n    if (field.selfErrors.length) return field.selfErrors[0]\n    if (field.selfWarnings.length) return field.selfWarnings[0]\n    if (field.selfSuccesses.length) return field.selfSuccesses[0]\n  }\n\n  return {\n    feedbackStatus:\n      field.validateStatus === 'validating' ? 'pending' : field.validateStatus,\n    feedbackText: takeMessage(),\n    extra: field.description,\n  }\n}\n\nconst EditableInner = observer(\n  defineComponent<EditableProps>({\n    name: 'FEditable',\n    setup(props, { attrs, slots, refs }) {\n      const fieldRef = useField<Field>()\n\n      const prefixCls = `${stylePrefix}-editable`\n      const setEditable = (payload: boolean) => {\n        const pattern = getParentPattern(fieldRef)\n\n        if (pattern !== 'editable') return\n        fieldRef.value.setPattern(payload ? 'editable' : 'readPretty')\n      }\n\n      const dispose = reaction(\n        () => {\n          const pattern = getParentPattern(fieldRef)\n\n          return pattern\n        },\n        (pattern) => {\n          if (pattern === 'editable') {\n            fieldRef.value.setPattern('readPretty')\n          }\n        },\n        {\n          fireImmediately: true,\n        }\n      )\n\n      onBeforeUnmount(dispose)\n\n      return () => {\n        const field = fieldRef.value\n        const editable = field.pattern === 'editable'\n        const pattern = getParentPattern(fieldRef)\n        const itemProps = getFormItemProps(fieldRef)\n\n        const recover = () => {\n          if (editable && !fieldRef.value?.errors?.length) {\n            setEditable(false)\n          }\n        }\n\n        const onClick = (e: MouseEvent) => {\n          const innerRef = refs.innerRef as HTMLElement\n          const target = e.target as HTMLElement\n          const close = innerRef.querySelector(`.${prefixCls}-close-btn`)\n\n          if (target?.contains(close) || close?.contains(target)) {\n            recover()\n          } else if (!editable) {\n            setTimeout(() => {\n              setEditable(true)\n              setTimeout(() => {\n                innerRef.querySelector('input')?.focus()\n              })\n            })\n          }\n        }\n\n        const renderEditHelper = () => {\n          if (editable) return null\n\n          return h(\n            FormBaseItem,\n            {\n              attrs: {\n                ...attrs,\n                ...itemProps,\n              },\n            },\n            {\n              default: () => {\n                return h(\n                  'i',\n                  {\n                    class: [\n                      `${prefixCls}-edit-btn`,\n                      pattern === 'editable'\n                        ? 'el-icon-edit'\n                        : 'el-icon-chat-dot-round',\n                    ],\n                  },\n                  {}\n                )\n              },\n            }\n          )\n        }\n\n        const renderCloseHelper = () => {\n          if (!editable) return null\n          return h(\n            FormBaseItem,\n            {\n              attrs: {\n                ...attrs,\n              },\n            },\n            {\n              default: () => {\n                return h(\n                  'i',\n                  {\n                    class: [`${prefixCls}-close-btn`, 'el-icon-close'],\n                  },\n                  {}\n                )\n              },\n            }\n          )\n        }\n\n        return h(\n          'div',\n          {\n            class: prefixCls,\n            ref: 'innerRef',\n            on: {\n              click: onClick,\n            },\n          },\n          {\n            default: () =>\n              h(\n                'div',\n                {\n                  class: `${prefixCls}-content`,\n                },\n                {\n                  default: () => [\n                    h(\n                      FormBaseItem,\n                      {\n                        attrs: {\n                          ...attrs,\n                          ...itemProps,\n                        },\n                      },\n                      slots\n                    ),\n                    renderEditHelper(),\n                    renderCloseHelper(),\n                  ],\n                }\n              ),\n          }\n        )\n      }\n    },\n  })\n)\n\nconst EditablePopover = observer(\n  defineComponent<EditablePopoverProps>({\n    name: 'FEditablePopover',\n    setup(props, { attrs, slots }) {\n      const fieldRef = useField<Field>()\n\n      const prefixCls = `${stylePrefix}-editable`\n      const visible = ref(false)\n\n      return () => {\n        const field = fieldRef.value\n        const pattern = getParentPattern(fieldRef)\n        return h(\n          Popover,\n          {\n            class: [prefixCls],\n            attrs: {\n              ...attrs,\n              title: attrs.title || field.title,\n              value: visible.value,\n              trigger: 'click',\n            },\n            on: {\n              input: (value) => {\n                visible.value = value\n              },\n            },\n          },\n          {\n            default: () => [slots.default()],\n            reference: () =>\n              h(\n                FormBaseItem,\n                { class: [`${prefixCls}-trigger`] },\n                {\n                  default: () =>\n                    h(\n                      'div',\n                      {\n                        class: [`${prefixCls}-content`],\n                      },\n                      {\n                        default: () => [\n                          h(\n                            'span',\n                            {\n                              class: [`${prefixCls}-preview`],\n                            },\n                            {\n                              default: () => [attrs.title || field.title],\n                            }\n                          ),\n                          h(\n                            'i',\n                            {\n                              class: [\n                                `${prefixCls}-edit-btn`,\n                                pattern === 'editable'\n                                  ? 'el-icon-edit'\n                                  : 'el-icon-chat-dot-round',\n                              ],\n                            },\n                            {}\n                          ),\n                        ],\n                      }\n                    ),\n                }\n              ),\n          }\n        )\n      }\n    },\n  })\n)\n\nexport const Editable = composeExport(EditableInner, {\n  Popover: EditablePopover,\n})\n\nexport default Editable\n"]}
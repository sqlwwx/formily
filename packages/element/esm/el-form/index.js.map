{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/el-form/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,EAAE,YAAY,IAAI,aAAa,EAAE,UAAU,EAAE,MAAM,cAAc,CAAA;;AAKxE,IAAM,YAAY,GAAG,aAAqC,CAAA;AAQ1D,MAAM,CAAC,IAAM,MAAM,GAA4C;IAC7D,UAAU,EAAE,IAAI;IAChB,MAAM,EAAN,UAAO,CAAC,EAAE,OAAO;;QACf,IAAM,KAKF,OAAO,CAAC,KAAK,EAJf,YAAqB,EAArB,IAAI,mBAAG,UAAU,CAAC,EAAE,CAAC,KAAA,EACrB,iBAA2B,EAA3B,SAAS,mBAAG,eAAe,KAAA,EAC3B,oBAA4C,EAA5C,YAAY,mBAAG,MAAA,OAAO,CAAC,SAAS,0CAAE,UAAU,KAAA,EACzC,KAAK,cAJJ,qCAKL,CAAgB,CAAA;QACjB,IAAM,aAAa,GAAG,CACpB,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CACrC,CAAA;QACzB,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,EAAE,IAAI,MAAA,EAAE,EAAE,EAAE;YAC1C,CAAC,CACC,SAAS,wBAEJ,OAAO,CAAC,IAAI,KACf,KAAK,OAAA,EACL,QAAQ,EAAE;oBACR,MAAM,EAAE,UAAC,CAAQ;;wBACf,MAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,eAAe,+CAAlB,CAAC,CAAqB,CAAA;wBACtB,MAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,cAAc,+CAAjB,CAAC,CAAoB,CAAA;wBACrB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAA;oBAC5B,CAAC;iBACF,KAEH,OAAO,CAAC,QAAQ,CACjB;SACF,CAAC,CAAA;IACJ,CAAC;CACF,CAAA;AAED,eAAe,MAAM,CAAA","sourcesContent":["import { Form } from '@formily/core'\nimport { FormProvider as _FormProvider, createForm } from '@formily/vue'\nimport type { Form as _ElFormProps } from 'element-ui'\nimport type { FunctionalComponentOptions, Component } from 'vue'\nimport { Form as ElFormComponent } from 'element-ui'\n\nconst FormProvider = _FormProvider as unknown as Component\n\nexport type ElFormProps = _ElFormProps & {\n  form?: Form\n  component: Component\n  onAutoSubmit?: (values: any) => any\n}\n\nexport const ElForm: FunctionalComponentOptions<ElFormProps> = {\n  functional: true,\n  render(h, context) {\n    const {\n      form = createForm({}),\n      component = ElFormComponent,\n      onAutoSubmit = context.listeners?.autoSubmit,\n      ...props\n    } = context.props\n    const submitHandler = (\n      Array.isArray(onAutoSubmit) ? onAutoSubmit[0] : onAutoSubmit\n    ) as (values: any) => any\n    return h(FormProvider, { props: { form } }, [\n      h(\n        component,\n        {\n          ...context.data,\n          props,\n          nativeOn: {\n            submit: (e: Event) => {\n              e?.stopPropagation?.()\n              e?.preventDefault?.()\n              form.submit(submitHandler)\n            },\n          },\n        },\n        context.children\n      ),\n    ])\n  },\n}\n\nexport default ElForm\n"]}
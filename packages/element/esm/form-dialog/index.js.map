{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/form-dialog/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { h, FormProvider, Fragment } from '@formily/vue'\nimport { toJS } from '@formily/reactive'\nimport { observer } from '@formily/reactive-vue'\nimport { createForm, Form, IFormProps } from '@formily/core'\nimport {\n  isNum,\n  isStr,\n  isBool,\n  isFn,\n  IMiddleware,\n  applyMiddleware,\n} from '@formily/shared'\nimport { Dialog, Button } from 'element-ui'\nimport type { Dialog as DialogProps, Button as ButtonProps } from 'element-ui'\nimport { t } from 'element-ui/src/locale'\nimport Vue, { Component, VNode } from 'vue'\nimport {\n  isValidElement,\n  resolveComponent,\n  createPortalProvider,\n  getProtalContext,\n  loading,\n} from '../__builtins__/shared'\nimport { stylePrefix } from '../__builtins__/configs'\nimport { defineComponent } from '@vue/composition-api'\nimport { Portal, PortalTarget } from 'portal-vue'\n\ntype FormDialogContentProps = { form: Form }\n\ntype FormDialogContent = Component | ((props: FormDialogContentProps) => VNode)\n\ntype DialogTitle = string | number | Component | VNode | (() => VNode)\n\ntype IFormDialogProps = Omit<DialogProps, 'title'> & {\n  title?: DialogTitle\n  footer?: null | Component | VNode | (() => VNode)\n  cancelText?: string | Component | VNode | (() => VNode)\n  cancelButtonProps?: ButtonProps\n  okText?: string | Component | VNode | (() => VNode)\n  okButtonProps?: ButtonProps\n  onOpen?: () => void\n  onOpend?: () => void\n  onClose?: () => void\n  onClosed?: () => void\n  onCancel?: () => void\n  onOK?: () => void\n  loadingText?: string\n}\n\nconst PORTAL_TARGET_NAME = 'FormDialogFooter'\n\nconst isDialogTitle = (props: any): props is DialogTitle => {\n  return isNum(props) || isStr(props) || isBool(props) || isValidElement(props)\n}\n\nconst getDialogProps = (props: any): IFormDialogProps => {\n  if (isDialogTitle(props)) {\n    return {\n      title: props,\n    } as IFormDialogProps\n  } else {\n    return props\n  }\n}\n\nexport interface IFormDialog {\n  forOpen(middleware: IMiddleware<IFormProps>): IFormDialog\n  forConfirm(middleware: IMiddleware<IFormProps>): IFormDialog\n  forCancel(middleware: IMiddleware<IFormProps>): IFormDialog\n  open(props?: IFormProps): Promise<any>\n  close(): void\n}\n\nexport interface IFormDialogComponentProps {\n  content: FormDialogContent\n  resolve: () => any\n  reject: () => any\n}\n\nexport function FormDialog(\n  title: IFormDialogProps | DialogTitle,\n  content: FormDialogContent\n): IFormDialog\n\nexport function FormDialog(\n  title: IFormDialogProps | DialogTitle,\n  id: string | symbol,\n  content: FormDialogContent\n): IFormDialog\n\nexport function FormDialog(\n  title: DialogTitle,\n  id: string,\n  content: FormDialogContent\n): IFormDialog\n\nexport function FormDialog(\n  title: IFormDialogProps | DialogTitle,\n  id: string | symbol | FormDialogContent,\n  content?: FormDialogContent\n): IFormDialog {\n  if (isFn(id) || isValidElement(id)) {\n    content = id as FormDialogContent\n    id = 'form-dialog'\n  }\n\n  const prefixCls = `${stylePrefix}-form-dialog`\n  const env = {\n    root: document.createElement('div'),\n    form: null,\n    promise: null,\n    instance: null,\n    openMiddlewares: [],\n    confirmMiddlewares: [],\n    cancelMiddlewares: [],\n  }\n\n  document.body.appendChild(env.root)\n\n  const props = getDialogProps(title)\n  const dialogProps = {\n    ...props,\n    onClosed: () => {\n      props.onClosed?.()\n      env.instance.$destroy()\n      env.instance = null\n      env.root?.parentNode?.removeChild(env.root)\n      env.root = undefined\n    },\n  }\n\n  const component = observer(\n    defineComponent({\n      setup() {\n        return () =>\n          h(\n            Fragment,\n            {},\n            {\n              default: () =>\n                resolveComponent(content, {\n                  form: env.form,\n                }),\n            }\n          )\n      },\n    })\n  )\n\n  const render = (visible = true, resolve?: () => any, reject?: () => any) => {\n    if (!env.instance) {\n      const ComponentConstructor = observer(\n        Vue.extend({\n          props: ['dialogProps'],\n          data() {\n            return {\n              visible: false,\n            }\n          },\n          render() {\n            const {\n              onClose,\n              onClosed,\n              onOpen,\n              onOpend,\n              onOK,\n              onCancel,\n              title,\n              footer,\n              okText,\n              cancelText,\n              okButtonProps,\n              cancelButtonProps,\n              ...dialogProps\n            } = this.dialogProps\n\n            return h(\n              FormProvider,\n              {\n                props: {\n                  form: env.form,\n                },\n              },\n              {\n                default: () =>\n                  h(\n                    Dialog,\n                    {\n                      class: [`${prefixCls}`],\n                      attrs: {\n                        visible: this.visible,\n                        ...dialogProps,\n                      },\n                      on: {\n                        'update:visible': (val) => {\n                          this.visible = val\n                        },\n                        close: () => {\n                          onClose?.()\n                        },\n\n                        closed: () => {\n                          onClosed?.()\n                        },\n                        open: () => {\n                          onOpen?.()\n                        },\n                        opend: () => {\n                          onOpend?.()\n                        },\n                      },\n                    },\n                    {\n                      default: () => [h(component, {}, {})],\n                      title: () =>\n                        h(\n                          'div',\n                          {},\n                          { default: () => resolveComponent(title) }\n                        ),\n                      footer: () =>\n                        h(\n                          'div',\n                          {},\n                          {\n                            default: () => {\n                              const FooterProtalTarget = h(\n                                PortalTarget,\n                                {\n                                  props: {\n                                    name: PORTAL_TARGET_NAME,\n                                    slim: true,\n                                  },\n                                },\n                                {}\n                              )\n                              if (footer === null) {\n                                return [null, FooterProtalTarget]\n                              } else if (footer) {\n                                return [\n                                  resolveComponent(footer),\n                                  FooterProtalTarget,\n                                ]\n                              }\n\n                              return [\n                                h(\n                                  Button,\n                                  {\n                                    attrs: cancelButtonProps,\n                                    on: {\n                                      click: (e) => {\n                                        onCancel?.(e)\n                                        reject()\n                                      },\n                                    },\n                                  },\n                                  {\n                                    default: () =>\n                                      resolveComponent(\n                                        cancelText ||\n                                          t('el.popconfirm.cancelButtonText')\n                                      ),\n                                  }\n                                ),\n\n                                h(\n                                  Button,\n                                  {\n                                    attrs: {\n                                      type: 'primary',\n                                      ...okButtonProps,\n                                      loading: env.form.submitting,\n                                    },\n                                    on: {\n                                      click: (e) => {\n                                        onOK?.(e)\n                                        resolve()\n                                      },\n                                    },\n                                  },\n                                  {\n                                    default: () =>\n                                      resolveComponent(\n                                        okText ||\n                                          t('el.popconfirm.confirmButtonText')\n                                      ),\n                                  }\n                                ),\n                                FooterProtalTarget,\n                              ]\n                            },\n                          }\n                        ),\n                    }\n                  ),\n              }\n            )\n          },\n        })\n      )\n      env.instance = new ComponentConstructor({\n        propsData: {\n          dialogProps,\n        },\n        parent: getProtalContext(id as string | symbol),\n      })\n      env.instance.$mount(env.root)\n    }\n\n    env.instance.visible = visible\n  }\n\n  const formDialog = {\n    forOpen: (middleware: IMiddleware<IFormProps>) => {\n      if (isFn(middleware)) {\n        env.openMiddlewares.push(middleware)\n      }\n      return formDialog\n    },\n    forConfirm: (middleware: IMiddleware<Form>) => {\n      if (isFn(middleware)) {\n        env.confirmMiddlewares.push(middleware)\n      }\n      return formDialog\n    },\n    forCancel: (middleware: IMiddleware<Form>) => {\n      if (isFn(middleware)) {\n        env.cancelMiddlewares.push(middleware)\n      }\n      return formDialog\n    },\n    open: (props: IFormProps) => {\n      if (env.promise) return env.promise\n\n      env.promise = new Promise(async (resolve, reject) => {\n        try {\n          props = await loading(dialogProps.loadingText, () =>\n            applyMiddleware(props, env.openMiddlewares)\n          )\n          env.form = env.form || createForm(props)\n        } catch (e) {\n          reject(e)\n        }\n\n        render(\n          true,\n          () => {\n            env.form\n              .submit(async () => {\n                await applyMiddleware(env.form, env.confirmMiddlewares)\n                resolve(toJS(env.form.values))\n                if (dialogProps.beforeClose) {\n                  setTimeout(() => {\n                    dialogProps.beforeClose(() => {\n                      formDialog.close()\n                    })\n                  })\n                } else {\n                  formDialog.close()\n                }\n              })\n              .catch(reject)\n          },\n          async () => {\n            await loading(dialogProps.loadingText, () =>\n              applyMiddleware(env.form, env.cancelMiddlewares)\n            )\n\n            if (dialogProps.beforeClose) {\n              dialogProps.beforeClose(() => {\n                formDialog.close()\n              })\n            } else {\n              formDialog.close()\n            }\n          }\n        )\n      })\n      return env.promise\n    },\n    close: () => {\n      if (!env.root) return\n      render(false)\n    },\n  }\n  return formDialog\n}\n\nconst FormDialogFooter = defineComponent({\n  name: 'FFormDialogFooter',\n  setup(props, { slots }) {\n    return () => {\n      return h(\n        Portal,\n        {\n          props: {\n            to: PORTAL_TARGET_NAME,\n          },\n        },\n        slots\n      )\n    }\n  },\n})\n\nFormDialog.Footer = FormDialogFooter\nFormDialog.Portal = createPortalProvider('form-dialog')\n\nexport default FormDialog\n"]}
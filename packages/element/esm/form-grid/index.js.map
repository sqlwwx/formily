{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/form-grid/index.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EACL,eAAe,EACf,OAAO,EACP,GAAG,EACH,SAAS,EAGT,QAAQ,EACR,WAAW,GACZ,MAAM,sBAAsB,CAAA;AAC7B,OAAO,EAAE,CAAC,EAAE,MAAM,cAAc,CAAA;AAChC,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAA;AAChD,OAAO,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAA;AAC3C,OAAO,EAAE,IAAI,EAAgB,MAAM,eAAe,CAAA;AAClD,OAAO,EAAE,WAAW,EAAE,MAAM,yBAAyB,CAAA;AACrD,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAA;AACtD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAC9C,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAA;AAU7C,IAAM,cAAc,GAClB,MAAM,CAAC,iBAAiB,CAAC,CAAA;AAM3B,MAAM,CAAC,IAAM,cAAc,GAAG,UAAC,KAAqB;IAClD,OAAO,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;AACjC,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,WAAW,GAAG,cAA8B,OAAA,MAAM,CAAC,cAAc,CAAC,EAAtB,CAAsB,CAAA;AAE/E;;GAEG;AACH,IAAM,WAAW,GAAG,UAAC,QAAgB;IACnC,OAAO,QAAQ,CAAA;AACjB,CAAC,CAAA;AAED;;GAEG;AACH,MAAM,CAAC,IAAM,aAAa,GAAG,UAAC,QAAY;IAAZ,yBAAA,EAAA,YAAY;IACxC,OAAO,QAAQ,CAAA;AACjB,CAAC,CAAA;AAED,IAAM,aAAa,GAAG,QAAQ,CAC5B,eAAe,CAAC;IACd,IAAI,EAAE,WAAW;IACjB,KAAK,EAAE;QACL,SAAS,EAAE;YACT,IAAI,EAAE,MAAM;SACb;QACD,MAAM,EAAE;YACN,IAAI,EAAE,MAAM;SACb;QACD,UAAU,EAAE;YACV,IAAI,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;SACtB;QACD,QAAQ,EAAE;YACR,IAAI,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;SACtB;QACD,UAAU,EAAE;YACV,IAAI,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;SACtB;QACD,QAAQ,EAAE;YACR,IAAI,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;SACtB;QACD,WAAW,EAAE;YACX,IAAI,EAAE,KAAK;SACZ;QACD,OAAO,EAAE;YACP,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,IAAI;SACd;QACD,aAAa,EAAE;YACb,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,KAAK;SACf;QACD,aAAa,EAAE;YACb,IAAI,EAAE,QAAmD;YACzD,OAAO;gBACL,OAAO,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAA;YACnB,CAAC;SACF;QACD,IAAI,EAAE;YACJ,IAAI,EAAE,MAAqC;SAC5C;KACF;IACD,KAAK,EAAL,UAAM,KAAqB;QACzB,IAAM,MAAM,GAAG,aAAa,EAAE,CAAA;QAE9B,IAAM,YAAY,GAAG,QAAQ,CAAC;;YAC5B,IAAM,QAAQ,GAAmB,EAAE,CAAA;YACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG;gBAC7B,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,WAAW,EAAE;oBACrC,QAAQ,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAA;iBAC3B;YACH,CAAC,CAAC,CAAA;YACF,IAAM,OAAO,cACX,SAAS,EAAE,MAAA,MAAA,MAAM,CAAC,KAAK,0CAAE,aAAa,mCAAI,CAAC,EAC3C,MAAM,EAAE,MAAA,MAAA,MAAM,CAAC,KAAK,0CAAE,UAAU,mCAAI,CAAC,IAClC,QAAQ,CACZ,CAAA;YACD,OAAO,OAAO,CAAC,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,EAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAA;QAClE,CAAC,CAAC,CAAA;QACF,IAAM,SAAS,GAAG,UAAG,WAAW,eAAY,CAAA;QAC5C,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,CAAA;QAEtB,OAAO,CAAC,cAAc,EAAE,YAAY,CAAC,CAAA;QAErC,SAAS,CAAC;YACR,WAAW,CAAC,UAAC,YAAY;gBACvB,IAAM,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;gBACtD,YAAY,CAAC;oBACX,OAAO,EAAE,CAAA;gBACX,CAAC,CAAC,CAAA;YACJ,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,OAAO;YACL,SAAS,WAAA;YACT,IAAI,MAAA;YACJ,YAAY,cAAA;SACb,CAAA;IACH,CAAC;IACD,MAAM;QAAN,iBAkBC;QAjBO,IAAA,KAA8B,IAAI,EAAhC,SAAS,eAAA,EAAE,YAAY,kBAAS,CAAA;QACxC,OAAO,CAAC,CACN,KAAK,EACL;YACE,KAAK,EAAE;gBACL,KAAK,EAAE,UAAG,SAAS,CAAE;aACtB;YACD,KAAK,EAAE;gBACL,mBAAmB,EAAE,YAAY,CAAC,eAAe;gBACjD,GAAG,EAAE,YAAY,CAAC,GAAG;aACtB;YACD,GAAG,EAAE,MAAM;SACZ,EACD;YACE,OAAO,EAAE,cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,OAAO,EAAnB,CAAmB;SACnC,CACF,CAAA;IACH,CAAC;CACF,CAAC,CACI,CAAA;AAER,IAAM,cAAc,GAAG,QAAQ,CAC7B,eAAe,CAAC;IACd,IAAI,EAAE,iBAAiB;IACvB,KAAK,EAAE;QACL,QAAQ,EAAE;YACR,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,CAAC;SACX;KACF;IACD,KAAK,EAAL,UAAM,KAAsB,EAAE,EAAS;YAAP,KAAK,WAAA;QACnC,OAAO;YACL,OAAO,CAAC,CACN,KAAK,EACL;gBACE,KAAK,EAAE;oBACL,gBAAgB,EAAE,KAAK,CAAC,QAAQ;iBACjC;aACF,EACD,KAAK,CACN,CAAA;QACH,CAAC,CAAA;IACH,CAAC;CACF,CAAC,CACH,CAAA;AAED,MAAM,CAAC,IAAM,QAAQ,GAAG,aAAa,CAAC,aAAa,EAAE;IACnD,UAAU,EAAE,cAAc;IAC1B,WAAW,aAAA;IACX,WAAW,aAAA;IACX,cAAc,gBAAA;CACf,CAAC,CAAA;AAEF,eAAe,QAAQ,CAAA","sourcesContent":["import {\n  defineComponent,\n  provide,\n  ref,\n  onMounted,\n  InjectionKey,\n  Ref,\n  computed,\n  watchEffect,\n} from '@vue/composition-api'\nimport { h } from '@formily/vue'\nimport { observer } from '@formily/reactive-vue'\nimport { markRaw } from '@formily/reactive'\nimport { Grid, IGridOptions } from '@formily/grid'\nimport { stylePrefix } from '../__builtins__/configs'\nimport { composeExport } from '../__builtins__/shared'\nimport { useFormLayout } from '../form-layout'\nimport { inject } from '@vue/composition-api'\nimport { PropType } from '@vue/composition-api'\n\nexport interface IFormGridProps extends IGridOptions {\n  grid?: Grid<HTMLElement>\n  prefixCls?: string\n  className?: string\n  style?: React.CSSProperties\n}\n\nconst FormGridSymbol: InjectionKey<Ref<Grid<HTMLElement>>> =\n  Symbol('FormGridContext')\n\ninterface GridColumnProps {\n  gridSpan: number\n}\n\nexport const createFormGrid = (props: IFormGridProps): Grid<HTMLElement> => {\n  return markRaw(new Grid(props))\n}\n\nexport const useFormGrid = (): Ref<Grid<HTMLElement>> => inject(FormGridSymbol)\n\n/**\n * @deprecated\n */\nconst useGridSpan = (gridSpan: number) => {\n  return gridSpan\n}\n\n/**\n * @deprecated\n */\nexport const useGridColumn = (gridSpan = 1) => {\n  return gridSpan\n}\n\nconst FormGridInner = observer(\n  defineComponent({\n    name: 'FFormGrid',\n    props: {\n      columnGap: {\n        type: Number,\n      },\n      rowGap: {\n        type: Number,\n      },\n      minColumns: {\n        type: [Number, Array],\n      },\n      minWidth: {\n        type: [Number, Array],\n      },\n      maxColumns: {\n        type: [Number, Array],\n      },\n      maxWidth: {\n        type: [Number, Array],\n      },\n      breakpoints: {\n        type: Array,\n      },\n      colWrap: {\n        type: Boolean,\n        default: true,\n      },\n      strictAutoFit: {\n        type: Boolean,\n        default: false,\n      },\n      shouldVisible: {\n        type: Function as PropType<IGridOptions['shouldVisible']>,\n        default() {\n          return () => true\n        },\n      },\n      grid: {\n        type: Object as PropType<Grid<HTMLElement>>,\n      },\n    },\n    setup(props: IFormGridProps) {\n      const layout = useFormLayout()\n\n      const gridInstance = computed(() => {\n        const newProps: IFormGridProps = {}\n        Object.keys(props).forEach((key) => {\n          if (typeof props[key] !== 'undefined') {\n            newProps[key] = props[key]\n          }\n        })\n        const options = {\n          columnGap: layout.value?.gridColumnGap ?? 8,\n          rowGap: layout.value?.gridRowGap ?? 4,\n          ...newProps,\n        }\n        return markRaw(options?.grid ? options.grid : new Grid(options))\n      })\n      const prefixCls = `${stylePrefix}-form-grid`\n      const root = ref(null)\n\n      provide(FormGridSymbol, gridInstance)\n\n      onMounted(() => {\n        watchEffect((onInvalidate) => {\n          const dispose = gridInstance.value.connect(root.value)\n          onInvalidate(() => {\n            dispose()\n          })\n        })\n      })\n\n      return {\n        prefixCls,\n        root,\n        gridInstance,\n      }\n    },\n    render() {\n      const { prefixCls, gridInstance } = this\n      return h(\n        'div',\n        {\n          attrs: {\n            class: `${prefixCls}`,\n          },\n          style: {\n            gridTemplateColumns: gridInstance.templateColumns,\n            gap: gridInstance.gap,\n          },\n          ref: 'root',\n        },\n        {\n          default: () => this.$slots.default,\n        }\n      )\n    },\n  })\n) as any\n\nconst FormGridColumn = observer(\n  defineComponent({\n    name: 'FFormGridColumn',\n    props: {\n      gridSpan: {\n        type: Number,\n        default: 1,\n      },\n    },\n    setup(props: GridColumnProps, { slots }) {\n      return () => {\n        return h(\n          'div',\n          {\n            attrs: {\n              'data-grid-span': props.gridSpan,\n            },\n          },\n          slots\n        )\n      }\n    },\n  })\n)\n\nexport const FormGrid = composeExport(FormGridInner, {\n  GridColumn: FormGridColumn,\n  useGridSpan,\n  useFormGrid,\n  createFormGrid,\n})\n\nexport default FormGrid\n"]}
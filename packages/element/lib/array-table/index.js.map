{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/array-table/index.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  defineComponent,\n  onBeforeUnmount,\n  ref,\n  Ref,\n  shallowRef,\n} from '@vue/composition-api'\nimport { observe } from '@formily/reactive'\nimport {\n  GeneralField,\n  IVoidFieldFactoryProps,\n  FieldDisplayTypes,\n  ArrayField,\n} from '@formily/core'\nimport {\n  useField,\n  useFieldSchema,\n  RecursionField as _RecursionField,\n  h,\n  Fragment,\n  useForm,\n} from '@formily/vue'\nimport { observer } from '@formily/reactive-vue'\nimport { FormPath, isArr, isBool } from '@formily/shared'\nimport { ArrayBase } from '../array-base'\nimport { stylePrefix } from '../__builtins__/configs'\nimport { composeExport } from '../__builtins__/shared'\nimport type { Schema } from '@formily/json-schema'\nimport type {\n  Table as TableProps,\n  TableColumn as ElColumnProps,\n  Pagination as PaginationProps,\n} from 'element-ui'\nimport type { VNode, Component } from 'vue'\nimport {\n  Table as ElTable,\n  TableColumn as ElTableColumn,\n  Pagination,\n  Select,\n  Option,\n  Badge,\n} from 'element-ui'\nimport { Space } from '../space'\n\nconst RecursionField = _RecursionField as unknown as Component\n\ninterface IArrayTableProps extends TableProps {\n  pagination?: PaginationProps | boolean\n}\ninterface IArrayTablePaginationProps extends PaginationProps {\n  dataSource?: any[]\n}\n\ninterface ObservableColumnSource {\n  field: GeneralField\n  fieldProps: IVoidFieldFactoryProps<any, any>\n  columnProps: ElColumnProps & { title: string; asterisk: boolean }\n  schema: Schema\n  display: FieldDisplayTypes\n  required: boolean\n  name: string\n}\n\ntype ColumnProps = ElColumnProps & {\n  key: string | number\n  asterisk: boolean\n  render?: (props: {\n    row: Record<string, any>\n    column: ElColumnProps\n    $index: number\n  }) => VNode\n}\n\nconst isColumnComponent = (schema: Schema) => {\n  return schema['x-component']?.indexOf('Column') > -1\n}\n\nconst isOperationsComponent = (schema: Schema) => {\n  return schema['x-component']?.indexOf('Operations') > -1\n}\n\nconst isAdditionComponent = (schema: Schema) => {\n  return schema['x-component']?.indexOf('Addition') > -1\n}\n\nconst getArrayTableSources = (\n  arrayFieldRef: Ref<ArrayField>,\n  schemaRef: Ref<Schema>\n) => {\n  const arrayField = arrayFieldRef.value\n  const parseSources = (schema: Schema): ObservableColumnSource[] => {\n    if (\n      isColumnComponent(schema) ||\n      isOperationsComponent(schema) ||\n      isAdditionComponent(schema)\n    ) {\n      if (!schema['x-component-props']?.['prop'] && !schema['name']) return []\n      const name = schema['x-component-props']?.['prop'] || schema['name']\n      const field = arrayField.query(arrayField.address.concat(name)).take()\n      const fieldProps = field?.props || schema.toFieldProps()\n      const columnProps =\n        (field?.component as any[])?.[1] || schema['x-component-props'] || {}\n      const display = field?.display || schema['x-display']\n      const required = schema.reduceProperties((required, property) => {\n        if (required) {\n          return required\n        }\n        return !!property.required\n      }, false)\n\n      return [\n        {\n          name,\n          display,\n          required,\n          field,\n          fieldProps,\n          schema,\n          columnProps,\n        },\n      ]\n    } else if (schema.properties) {\n      return schema.reduceProperties((buf: any[], schema) => {\n        return buf.concat(parseSources(schema))\n      }, [])\n    } else {\n      return []\n    }\n  }\n\n  const parseArrayTable = (schema: Schema['items']) => {\n    if (!schema) return []\n    const sources: ObservableColumnSource[] = []\n    const items = isArr(schema) ? schema : ([schema] as Schema[])\n    return items.reduce((columns, schema) => {\n      const item = parseSources(schema)\n      if (item) {\n        return columns.concat(item)\n      }\n      return columns\n    }, sources)\n  }\n\n  if (!schemaRef.value) throw new Error('can not found schema object')\n\n  return parseArrayTable(schemaRef.value.items)\n}\n\nconst getArrayTableColumns = (\n  reactiveDataSource: Ref<any[]>,\n  sources: ObservableColumnSource[]\n): ColumnProps[] => {\n  return sources.reduce(\n    (\n      buf: ColumnProps[],\n      { name, columnProps, schema, display, required },\n      key\n    ) => {\n      const { title, asterisk, ...props } = columnProps\n      if (display !== 'visible') return buf\n      if (!isColumnComponent(schema)) return buf\n\n      const render =\n        columnProps?.type && columnProps?.type !== 'default'\n          ? undefined\n          : (props: {\n              row: Record<string, any>\n              column: ElColumnProps\n              $index: number\n            }): VNode => {\n              // let index = props.$index\n              const index = reactiveDataSource.value.indexOf(props.row)\n\n              const children = h(\n                ArrayBase.Item,\n                { props: { index, record: props.row }, key: `${key}${index}` },\n                {\n                  default: () =>\n                    h(\n                      RecursionField,\n                      {\n                        props: {\n                          schema,\n                          name: index,\n                          onlyRenderProperties: true,\n                        },\n                      },\n                      {}\n                    ),\n                }\n              )\n              return children\n            }\n      return buf.concat({\n        label: title,\n        ...props,\n        key,\n        prop: name,\n        asterisk: asterisk ?? required,\n        render,\n      })\n    },\n    []\n  )\n}\n\nconst renderAddition = () => {\n  const schema = useFieldSchema()\n  return schema.value.reduceProperties((addition, schema) => {\n    if (isAdditionComponent(schema)) {\n      return h(\n        RecursionField,\n        {\n          props: {\n            schema,\n            name: 'addition',\n          },\n        },\n        {}\n      )\n    }\n    return addition\n  }, null)\n}\n\nconst StatusSelect = observer(\n  defineComponent({\n    props: {\n      value: Number,\n      onChange: Function,\n      options: Array,\n      pageSize: Number,\n    },\n    setup(props) {\n      const formRef = useForm()\n      const fieldRef = useField<ArrayField>()\n      const prefixCls = `${stylePrefix}-array-table`\n      const width = String(props.options?.length).length * 15\n\n      return () => {\n        const form = formRef.value\n        const field = fieldRef.value\n\n        const errors = form.queryFeedbacks({\n          type: 'error',\n          address: `${field.address}.*`,\n        })\n        const createIndexPattern = (page: number) => {\n          const pattern = `${field.address}.*[${(page - 1) * props.pageSize}:${\n            page * props.pageSize\n          }].*`\n          return FormPath.parse(pattern)\n        }\n\n        return h(\n          Select,\n          {\n            style: {\n              width: `${width < 60 ? 60 : width}px`,\n            },\n            class: [\n              `${prefixCls}-status-select`,\n              {\n                'has-error': errors?.length,\n              },\n            ],\n            props: {\n              value: props.value,\n              popperClass: `${prefixCls}-status-select-dropdown`,\n            },\n            on: {\n              input: props.onChange,\n            },\n          },\n          {\n            default: () => {\n              return props.options?.map(({ label, value }) => {\n                const hasError = errors.some(({ address }) => {\n                  return createIndexPattern(value).match(address)\n                })\n\n                return h(\n                  Option,\n                  {\n                    key: value,\n                    props: {\n                      label,\n                      value,\n                    },\n                  },\n                  {\n                    default: () => {\n                      if (hasError) {\n                        return h(\n                          Badge,\n                          {\n                            props: {\n                              isDot: true,\n                            },\n                          },\n                          { default: () => label }\n                        )\n                      }\n\n                      return label\n                    },\n                  }\n                )\n              })\n            },\n          }\n        )\n      }\n    },\n  })\n)\n\nconst ArrayTablePagination = defineComponent<IArrayTablePaginationProps>({\n  inheritAttrs: false,\n  props: [],\n  setup(props, { attrs, slots }) {\n    const prefixCls = `${stylePrefix}-array-table`\n    const current = ref(1)\n    return () => {\n      const props = attrs as unknown as IArrayTablePaginationProps\n      const pageSize = props.pageSize || 10\n      const dataSource = props.dataSource || []\n      const startIndex = (current.value - 1) * pageSize\n      const endIndex = startIndex + pageSize - 1\n      const total = dataSource?.length || 0\n      const totalPage = Math.ceil(total / pageSize)\n      const pages = Array.from(new Array(totalPage)).map((_, index) => {\n        const page = index + 1\n        return {\n          label: page,\n          value: page,\n        }\n      })\n\n      const renderPagination = function () {\n        if (totalPage <= 1) return\n        return h(\n          'div',\n          {\n            class: [`${prefixCls}-pagination`],\n          },\n          {\n            default: () =>\n              h(\n                Space,\n                {},\n                {\n                  default: () => [\n                    h(\n                      StatusSelect,\n                      {\n                        props: {\n                          value: current.value,\n                          onChange: (val: number) => {\n                            current.value = val\n                          },\n                          pageSize,\n                          options: pages,\n                        },\n                      },\n                      {}\n                    ),\n                    h(\n                      Pagination,\n                      {\n                        props: {\n                          background: true,\n                          layout: 'prev, pager, next',\n                          ...props,\n                          pageSize,\n                          pageCount: totalPage,\n                          currentPage: current.value,\n                        },\n                        on: {\n                          'current-change': (val: number) => {\n                            current.value = val\n                          },\n                        },\n                      },\n                      {}\n                    ),\n                  ],\n                }\n              ),\n          }\n        )\n      }\n\n      return h(\n        Fragment,\n        {},\n        {\n          default: () =>\n            slots?.default?.(\n              dataSource?.slice(startIndex, endIndex + 1),\n              renderPagination\n            ),\n        }\n      )\n    }\n  },\n})\n\nconst ArrayTableInner = observer(\n  defineComponent<IArrayTableProps>({\n    name: 'FArrayTable',\n    inheritAttrs: false,\n    setup(props, { attrs, listeners, slots }) {\n      const fieldRef = useField<ArrayField>()\n      const schemaRef = useFieldSchema()\n      const prefixCls = `${stylePrefix}-array-table`\n      const { getKey, keyMap } = ArrayBase.useKey(schemaRef.value)\n\n      const defaultRowKey = (record: any) => {\n        return getKey(record)\n      }\n      const reactiveDataSource = shallowRef([])\n\n      const dispose = observe(\n        fieldRef.value,\n        () => {\n          reactiveDataSource.value = fieldRef.value.value\n        },\n        false\n      )\n\n      onBeforeUnmount(dispose)\n\n      return () => {\n        const props = attrs as unknown as IArrayTableProps\n        const field = fieldRef.value\n        const dataSource = Array.isArray(field.value) ? field.value.slice() : []\n        const pagination = props.pagination\n        const sources = getArrayTableSources(fieldRef, schemaRef)\n        const columns = getArrayTableColumns(reactiveDataSource, sources)\n\n        const renderColumns = () =>\n          columns.map(({ key, render, asterisk, ...props }) => {\n            const children = {} as Record<string, any>\n            if (render) {\n              children.default = render\n            }\n            if (asterisk) {\n              children.header = ({ column }: { column: ElColumnProps }) =>\n                h(\n                  'span',\n                  {},\n                  {\n                    default: () => [\n                      h(\n                        'span',\n                        { class: `${prefixCls}-asterisk` },\n                        { default: () => ['*'] }\n                      ),\n                      column.label,\n                    ],\n                  }\n                )\n            }\n            return h(\n              ElTableColumn,\n              {\n                key,\n                props,\n              },\n              children\n            )\n          })\n        const renderStateManager = () =>\n          sources.map((column, key) => {\n            //专门用来承接对Column的状态管理\n            if (!isColumnComponent(column.schema)) return\n            return h(\n              RecursionField,\n              {\n                props: {\n                  name: column.name,\n                  schema: column.schema,\n                  onlyRenderSelf: true,\n                },\n                key,\n              },\n              {}\n            )\n          })\n\n        const renderTable = (dataSource?: any[], pager?: () => VNode) => {\n          return h(\n            'div',\n            { class: prefixCls },\n            {\n              default: () =>\n                h(\n                  ArrayBase,\n                  {\n                    props: {\n                      keyMap,\n                    },\n                  },\n                  {\n                    default: () => [\n                      h(\n                        ElTable,\n                        {\n                          props: {\n                            rowKey: defaultRowKey,\n                            ...attrs,\n                            data: dataSource,\n                          },\n                          on: listeners,\n                        },\n                        {\n                          ...slots,\n                          default: renderColumns,\n                        }\n                      ),\n                      pager?.(),\n                      renderStateManager(),\n                      renderAddition(),\n                    ],\n                  }\n                ),\n            }\n          )\n        }\n\n        if (!pagination) {\n          return renderTable(dataSource, null)\n        }\n        return h(\n          ArrayTablePagination,\n          {\n            attrs: {\n              ...(isBool(pagination) ? {} : pagination),\n              dataSource,\n            },\n          },\n          { default: renderTable }\n        )\n      }\n    },\n  })\n)\n\nconst ArrayTableColumn: Component = {\n  name: 'FArrayTableColumn',\n  render(h) {\n    return h()\n  },\n}\n\nexport const ArrayTable = composeExport(ArrayTableInner, {\n  Column: ArrayTableColumn,\n  Index: ArrayBase.Index,\n  SortHandle: ArrayBase.SortHandle,\n  Addition: ArrayBase.Addition,\n  Remove: ArrayBase.Remove,\n  MoveDown: ArrayBase.MoveDown,\n  MoveUp: ArrayBase.MoveUp,\n  useArray: ArrayBase.useArray,\n  useIndex: ArrayBase.useIndex,\n  useRecord: ArrayBase.useRecord,\n})\n\nexport default ArrayTable\n"]}
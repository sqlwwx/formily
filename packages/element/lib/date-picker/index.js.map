{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/date-picker/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,iDAA2D;AAC3D,oCAA+D;AAG/D,yCAAuD;AACvD,gDAA6C;AAI7C,IAAM,qBAAqB,GAAG,IAAA,2BAAkB,EAC9C,uBAAY,EACZ;IACE,MAAM,EAAE,OAAO;CAChB,CACF,CAAA;AAED,IAAM,gBAAgB,GAAG,UAAC,KAAK,EAAE,UAAqB;IAArB,2BAAA,EAAA,qBAAqB;IACpD,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAA;IAEvB,IAAI,IAAI,KAAK,MAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;QAC9C,OAAO,SAAS,CAAA;KACjB;SAAM,IAAI,IAAI,KAAK,OAAO,EAAE;QAC3B,OAAO,SAAS,CAAA;KACjB;SAAM,IAAI,IAAI,KAAK,MAAM,EAAE;QAC1B,OAAO,MAAM,CAAA;KACd;SAAM,IAAI,IAAI,KAAK,UAAU,IAAI,IAAI,KAAK,eAAe,EAAE;QAC1D,OAAO,qBAAqB,CAAA;KAC7B;IAED,OAAO,YAAY,CAAA;AACrB,CAAC,CAAA;AAEY,QAAA,UAAU,GAAG,IAAA,aAAO,EAC/B,qBAAqB,EACrB,IAAA,cAAQ,EAAC,EAAE,QAAQ,EAAE,UAAU,EAAE,EAAE,UAAC,KAAK;IACvC,6BACK,KAAK,KACR,MAAM,EAAE,KAAK,CAAC,MAAM,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAC/C,WAAW,EAAE,KAAK,CAAC,WAAW,IAAI,gBAAgB,CAAC,KAAK,EAAE,aAAa,CAAC,IACzE;AACH,CAAC,CAAC,EACF,IAAA,mBAAa,EAAC,0BAAW,CAAC,UAAU,CAAC,CACtC,CAAA;AAED,kBAAe,kBAAU,CAAA","sourcesContent":["import { transformComponent } from '../__builtins__/shared'\nimport { connect, mapProps, mapReadPretty } from '@formily/vue'\n\nimport type { DatePicker as ElDatePickerProps } from 'element-ui'\nimport { DatePicker as ElDatePicker } from 'element-ui'\nimport { PreviewText } from '../preview-text'\n\nexport type DatePickerProps = ElDatePickerProps\n\nconst TransformElDatePicker = transformComponent<DatePickerProps>(\n  ElDatePicker,\n  {\n    change: 'input',\n  }\n)\n\nconst getDefaultFormat = (props, formatType = 'format') => {\n  const type = props.type\n\n  if (type === 'week' && formatType === 'format') {\n    return 'yyyy-WW'\n  } else if (type === 'month') {\n    return 'yyyy-MM'\n  } else if (type === 'year') {\n    return 'yyyy'\n  } else if (type === 'datetime' || type === 'datetimerange') {\n    return 'yyyy-MM-dd HH:mm:ss'\n  }\n\n  return 'yyyy-MM-dd'\n}\n\nexport const DatePicker = connect(\n  TransformElDatePicker,\n  mapProps({ readOnly: 'readonly' }, (props) => {\n    return {\n      ...props,\n      format: props.format || getDefaultFormat(props),\n      valueFormat: props.valueFormat || getDefaultFormat(props, 'valueFormat'),\n    }\n  }),\n  mapReadPretty(PreviewText.DatePicker)\n)\n\nexport default DatePicker\n"]}
{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/form-collapse/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Collapse, CollapseItem, Badge } from 'element-ui'\nimport { model } from '@formily/reactive'\nimport type {\n  Collapse as CollapseProps,\n  CollapseItem as CollapseItemProps,\n} from 'element-ui'\nimport {\n  useField,\n  useFieldSchema,\n  RecursionField,\n  h,\n  Fragment,\n} from '@formily/vue'\nimport { observer } from '@formily/reactive-vue'\nimport { Schema, SchemaKey } from '@formily/json-schema'\nimport { composeExport, stylePrefix } from '../__builtins__'\nimport { toArr } from '@formily/shared'\nimport { computed, defineComponent, PropType } from 'vue-demi'\nimport { GeneralField } from '@formily/core'\n\ntype ActiveKeys = string | number | Array<string | number>\n\ntype ActiveKey = string | number\n\ntype Panels = { name: SchemaKey; props: any; schema: Schema }[]\n\nexport interface IFormCollapse {\n  activeKeys: ActiveKeys\n  hasActiveKey(key: ActiveKey): boolean\n  setActiveKeys(key: ActiveKeys): void\n  addActiveKey(key: ActiveKey): void\n  removeActiveKey(key: ActiveKey): void\n  toggleActiveKey(key: ActiveKey): void\n}\n\nexport interface IFormCollapseProps extends CollapseProps {\n  formCollapse?: IFormCollapse\n  activeKey?: ActiveKey\n}\n\nconst usePanels = (collapseField: GeneralField, schema: Schema) => {\n  const panels: Panels = []\n  schema.mapProperties((schema, name) => {\n    const field = collapseField.query(collapseField.address.concat(name)).take()\n    if (field?.display === 'none' || field?.display === 'hidden') return\n    if (schema['x-component']?.indexOf('FormCollapse.Item') > -1) {\n      panels.push({\n        name,\n        props: {\n          ...schema?.['x-component-props'],\n          key: schema?.['x-component-props']?.key || name,\n        },\n        schema,\n      })\n    }\n  })\n  return panels\n}\n\nconst createFormCollapse = (defaultActiveKeys?: ActiveKeys) => {\n  const formCollapse = model({\n    activeKeys: defaultActiveKeys,\n    setActiveKeys(keys: ActiveKeys) {\n      formCollapse.activeKeys = keys\n    },\n    hasActiveKey(key: ActiveKey) {\n      if (Array.isArray(formCollapse.activeKeys)) {\n        if (formCollapse.activeKeys.includes(key)) {\n          return true\n        }\n      } else if (formCollapse.activeKeys == key) {\n        return true\n      }\n      return false\n    },\n    addActiveKey(key: ActiveKey) {\n      if (formCollapse.hasActiveKey(key)) return\n      formCollapse.activeKeys = toArr(formCollapse.activeKeys).concat(key)\n    },\n    removeActiveKey(key: ActiveKey) {\n      if (Array.isArray(formCollapse.activeKeys)) {\n        formCollapse.activeKeys = formCollapse.activeKeys.filter(\n          (item) => item != key\n        )\n      } else {\n        formCollapse.activeKeys = ''\n      }\n    },\n    toggleActiveKey(key: ActiveKey) {\n      if (formCollapse.hasActiveKey(key)) {\n        formCollapse.removeActiveKey(key)\n      } else {\n        formCollapse.addActiveKey(key)\n      }\n    },\n  })\n  return formCollapse\n}\n\nconst FormCollapse = observer(\n  defineComponent({\n    inheritAttrs: false,\n    props: {\n      formCollapse: { type: Object as PropType<IFormCollapse> },\n      activeKey: {\n        type: [String, Number],\n      },\n    },\n    setup(props, { attrs, emit }) {\n      const field = useField()\n      const schema = useFieldSchema()\n      const prefixCls = `${stylePrefix}-form-collapse`\n      const _formCollapse = computed(\n        () => props.formCollapse ?? createFormCollapse()\n      )\n\n      const takeActiveKeys = (panels: Panels) => {\n        if (props.activeKey) return props.activeKey\n        if (_formCollapse.value?.activeKeys)\n          return _formCollapse.value?.activeKeys\n        if (attrs.accordion) return panels[0]?.name\n        return panels.map((item) => item.name)\n      }\n\n      const badgedHeader = (key: SchemaKey, props: any) => {\n        const errors = field.value.form.queryFeedbacks({\n          type: 'error',\n          address: `${field.value.address.concat(key)}.*`,\n        })\n        if (errors.length) {\n          return h(\n            Badge,\n            {\n              class: [`${prefixCls}-errors-badge`],\n              props: {\n                value: errors.length,\n              },\n            },\n            { default: () => props.title }\n          )\n        }\n        return props.title\n      }\n\n      return () => {\n        const panels = usePanels(field.value, schema.value)\n        const activeKey = takeActiveKeys(panels)\n        return h(\n          Collapse,\n          {\n            class: prefixCls,\n            props: {\n              value: activeKey,\n            },\n            on: {\n              change: (key: string | string[]) => {\n                emit('input', key)\n                _formCollapse.value.setActiveKeys(key)\n              },\n            },\n          },\n          {\n            default: () => {\n              return panels.map(({ props, schema, name }, index) => {\n                return h(\n                  CollapseItem,\n                  {\n                    key: index,\n                    props: {\n                      ...props,\n                      name,\n                    },\n                  },\n                  {\n                    default: () => [\n                      h(RecursionField, { props: { schema, name } }, {}),\n                    ],\n                    title: () =>\n                      h(\n                        'span',\n                        {},\n                        { default: () => badgedHeader(name, props) }\n                      ),\n                  }\n                )\n              })\n            },\n          }\n        )\n      }\n    },\n  })\n)\n\nexport const FormCollapseItem = defineComponent<CollapseItemProps>({\n  name: 'FFormCollapseItem',\n  setup(_props, { slots }) {\n    return () => h(Fragment, {}, slots)\n  },\n})\n\nconst composeFormCollapse = composeExport(FormCollapse, {\n  Item: FormCollapseItem,\n  createFormCollapse,\n})\n\nexport { composeFormCollapse as FormCollapse }\nexport default composeFormCollapse\n"]}
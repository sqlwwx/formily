{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/form-step/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { defineComponent, PropType } from '@vue/composition-api'\nimport { action, model, observable } from '@formily/reactive'\nimport { VoidField, Form } from '@formily/core'\nimport { observer } from '@formily/reactive-vue'\nimport {\n  h,\n  useField,\n  useFieldSchema,\n  RecursionField,\n  Fragment,\n} from '@formily/vue'\nimport { Schema, SchemaKey } from '@formily/json-schema'\nimport { Steps, Step } from 'element-ui'\nimport { stylePrefix } from '../__builtins__/configs'\n\nimport type { Steps as StepsProps, Step as StepProps } from 'element-ui'\nimport { composeExport } from '../__builtins__/shared'\n\nexport interface IFormStep {\n  connect: (steps: SchemaStep[], field: VoidField) => void\n  current: number\n  allowNext: boolean\n  allowBack: boolean\n  setCurrent(key: number): void\n  submit: Form['submit']\n  next(): void\n  back(): void\n}\n\nexport interface IFormStepProps extends StepsProps {\n  formStep?: IFormStep\n}\n\ntype SchemaStep = {\n  name: SchemaKey\n  props: any\n  schema: Schema\n}\n\ntype FormStepEnv = {\n  form: Form\n  field: VoidField\n  steps: SchemaStep[]\n}\n\nconst parseSteps = (schema: Schema) => {\n  const steps: SchemaStep[] = []\n  schema.mapProperties((schema, name) => {\n    if (schema['x-component']?.indexOf('StepPane') > -1) {\n      steps.push({\n        name,\n        props: schema['x-component-props'],\n        schema,\n      })\n    }\n  })\n  return steps\n}\n\nconst createFormStep = (defaultCurrent = 0): IFormStep => {\n  const env: FormStepEnv = observable({\n    form: null,\n    field: null,\n    steps: [],\n  })\n\n  const setDisplay = action.bound((target: number) => {\n    const currentStep = env.steps[target]\n    env.steps.forEach(({ name }) => {\n      env.form.query(`${env.field.address}.${name}`).take((field) => {\n        if (name === currentStep.name) {\n          field.setDisplay('visible')\n        } else {\n          field.setDisplay('hidden')\n        }\n      })\n    })\n  })\n\n  const next = action.bound(() => {\n    if (formStep.allowNext) {\n      setDisplay(formStep.current + 1)\n      formStep.setCurrent(formStep.current + 1)\n    }\n  })\n\n  const back = action.bound(() => {\n    if (formStep.allowBack) {\n      setDisplay(formStep.current - 1)\n      formStep.setCurrent(formStep.current - 1)\n    }\n  })\n\n  const formStep: IFormStep = model({\n    connect(steps, field) {\n      env.steps = steps\n      env.form = field?.form\n      env.field = field\n    },\n    current: defaultCurrent,\n    setCurrent(key: number) {\n      formStep.current = key\n    },\n    get allowNext() {\n      return formStep.current < env.steps.length - 1\n    },\n    get allowBack() {\n      return formStep.current > 0\n    },\n    async next() {\n      try {\n        await env.form.validate()\n        next()\n      } catch {}\n    },\n    async back() {\n      back()\n    },\n    async submit(onSubmit) {\n      return env.form?.submit?.(onSubmit)\n    },\n  })\n  return formStep\n}\n\nconst FormStepInner = observer(\n  defineComponent<IFormStepProps>({\n    name: 'FFormStep',\n    props: {\n      formStep: {\n        type: Object as PropType<IFormStep>,\n        default() {\n          return {\n            current: 0,\n          }\n        },\n      },\n    },\n    setup(props, { attrs }) {\n      const field = useField<VoidField>().value\n      const prefixCls = `${stylePrefix}-form-step`\n      const fieldSchemaRef = useFieldSchema()\n\n      const steps = parseSteps(fieldSchemaRef.value)\n\n      props.formStep.connect?.(steps, field)\n\n      return () => {\n        const current = props.active || props.formStep?.current || 0\n\n        const renderSteps = (steps: SchemaStep[], callback) => {\n          return steps.map(callback)\n        }\n\n        return h(\n          'div',\n          {\n            class: [prefixCls],\n          },\n          {\n            default: () => [\n              h(\n                Steps,\n                {\n                  props: {\n                    active: current,\n                  },\n                  style: [{ marginBottom: '10px' }, attrs.style],\n                  attrs,\n                },\n                {\n                  default: () =>\n                    renderSteps(steps, ({ props }, key) => {\n                      return h(Step, { props, key }, {})\n                    }),\n                }\n              ),\n\n              renderSteps(steps, ({ name, schema }, key) => {\n                if (key !== current) return\n                return h(RecursionField, { props: { name, schema }, key }, {})\n              }),\n            ],\n          }\n        )\n      }\n    },\n  })\n)\n\nconst StepPane = defineComponent<StepProps>({\n  name: 'FFormStepPane',\n  setup(_props, { slots }) {\n    return () => h(Fragment, {}, slots)\n  },\n})\n\nexport const FormStep = composeExport(FormStepInner, {\n  StepPane,\n  createFormStep,\n})\n\nexport default FormStep\n"]}
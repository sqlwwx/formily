{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/form-tab/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { defineComponent, reactive, computed } from '@vue/composition-api'\nimport { observer } from '@formily/reactive-vue'\nimport { model } from '@formily/reactive'\nimport {\n  h,\n  useField,\n  useFieldSchema,\n  RecursionField,\n  Fragment,\n} from '@formily/vue'\nimport { Schema, SchemaKey } from '@formily/json-schema'\nimport { Tabs, TabPane, Badge } from 'element-ui'\nimport { stylePrefix } from '../__builtins__/configs'\n\nimport type { TabPane as TabPaneProps, Tabs as TabsProps } from 'element-ui'\nimport { composeExport } from '../__builtins__/shared'\n\nexport interface IFormTab {\n  activeKey: string\n  setActiveKey(key: string): void\n}\n\nexport interface IFormTabProps extends TabsProps {\n  formTab?: IFormTab\n}\n\nexport interface IFormTabPaneProps extends TabPaneProps {\n  key: string | number\n}\n\nconst useTabs = () => {\n  const tabsField = useField().value\n  const schema = useFieldSchema().value\n  const tabs: { name: SchemaKey; props: any; schema: Schema }[] = reactive([])\n  schema.mapProperties((schema, name) => {\n    const field = tabsField.query(tabsField.address.concat(name)).take()\n    if (field?.display === 'none' || field?.display === 'hidden') return\n    if (schema['x-component']?.indexOf('TabPane') > -1) {\n      tabs.push({\n        name,\n        props: {\n          name: schema?.['x-component-props']?.name || name,\n          ...schema?.['x-component-props'],\n        },\n        schema,\n      })\n    }\n  })\n  return tabs\n}\n\nconst createFormTab = (defaultActiveKey?: string) => {\n  const formTab = model({\n    activeKey: defaultActiveKey,\n    setActiveKey(key: string) {\n      formTab.activeKey = key\n    },\n  })\n  return formTab\n}\n\nconst FormTabInner = observer(\n  defineComponent<IFormTabProps>({\n    name: 'FFormTab',\n    props: ['formTab'],\n    setup(props, { attrs, listeners }) {\n      const field = useField().value\n      const formTabRef = computed(() => props.formTab ?? createFormTab())\n\n      const prefixCls = `${stylePrefix}-form-tab`\n\n      return () => {\n        const formTab = formTabRef.value\n        const tabs = useTabs()\n        const activeKey = props.value || formTab?.activeKey || tabs?.[0]?.name\n        const badgedTab = (key: SchemaKey, props: any) => {\n          const errors = field.form.queryFeedbacks({\n            type: 'error',\n            address: `${field.address.concat(key)}.*`,\n          })\n          if (errors.length) {\n            return () =>\n              h(\n                Badge,\n                {\n                  class: [`${prefixCls}-errors-badge`],\n                  props: {\n                    value: errors.length,\n                  },\n                },\n                { default: () => props.label }\n              )\n          }\n          return () => props.label\n        }\n\n        const getTabs = (tabs) => {\n          return tabs.map(({ props, schema, name }, key) => {\n            return h(\n              TabPane,\n              {\n                key,\n                props,\n              },\n              {\n                default: () => [\n                  h(\n                    RecursionField,\n                    {\n                      props: {\n                        schema,\n                        name,\n                      },\n                    },\n                    {}\n                  ),\n                ],\n                label: () => [\n                  h('div', {}, { default: badgedTab(name, props) }),\n                ],\n              }\n            )\n          })\n        }\n\n        return h(\n          Tabs,\n          {\n            class: [prefixCls],\n            style: attrs.style,\n            props: {\n              ...attrs,\n              value: activeKey,\n            },\n            on: {\n              ...listeners,\n              input: (key) => {\n                listeners.input?.(key)\n                formTab.setActiveKey?.(key)\n              },\n            },\n          },\n          {\n            default: () => getTabs(tabs),\n          }\n        )\n      }\n    },\n  })\n)\n\nconst FormTabPane = defineComponent<IFormTabPaneProps>({\n  name: 'FFormTabPane',\n  setup(_props, { slots }) {\n    return () => h(Fragment, {}, slots)\n  },\n})\n\nexport const FormTab = composeExport(FormTabInner, {\n  TabPane: FormTabPane,\n  createFormTab,\n})\n\nexport default FormTab\n"]}
{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/space/index.ts"],"names":[],"mappings":"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","sourcesContent":["// https://github.com/vueComponent/ant-design-vue/blob/next/components/space/index.tsx\n\nimport { defineComponent } from '@vue/composition-api'\nimport { h } from '@formily/vue'\nimport { stylePrefix } from '../__builtins__/configs'\n\nimport type { VNode } from 'vue'\nimport { useFormLayout } from '../form-layout'\n\nexport type SpaceProps = {\n  size: 'small' | 'middle' | 'large' | number\n  direction: 'horizontal' | 'vertical'\n  align: 'start' | 'end' | 'center' | 'baseline'\n}\n\nconst spaceSize = {\n  small: 8,\n  middle: 16,\n  large: 24,\n}\n\nexport const Space = defineComponent<SpaceProps>({\n  name: 'FSpace',\n  props: ['size', 'direction', 'align'],\n  setup(props, { slots }) {\n    const layout = useFormLayout()\n\n    return () => {\n      const {\n        align,\n        size = layout.value?.spaceGap ?? 'small',\n        direction = 'horizontal',\n      } = props\n\n      const prefixCls = `${stylePrefix}-space`\n      const children = slots.default?.()\n      let items: VNode[] = []\n      if (Array.isArray(children)) {\n        if (children.length === 1) {\n          if ((children[0]['tag'] as string)?.endsWith('Fragment')) {\n            // Fragment hack\n            items = (children[0]['componentOptions'] as { children: VNode[] })\n              ?.children\n          } else {\n            items = children\n          }\n        } else {\n          items = children\n        }\n      }\n      const len = items.length\n\n      if (len === 0) {\n        return null\n      }\n\n      const mergedAlign =\n        align === undefined && direction === 'horizontal' ? 'center' : align\n\n      const someSpaceClass = {\n        [prefixCls]: true,\n        [`${prefixCls}-${direction}`]: true,\n        [`${prefixCls}-align-${mergedAlign}`]: mergedAlign,\n      }\n\n      const itemClassName = `${prefixCls}-item`\n      const marginDirection = 'marginRight' // directionConfig === 'rtl' ? 'marginLeft' : 'marginRight';\n\n      const renderItems = items.map((child, i) =>\n        h(\n          'div',\n          {\n            class: itemClassName,\n            key: `${itemClassName}-${i}`,\n            style:\n              i === len - 1\n                ? {}\n                : {\n                    [direction === 'vertical'\n                      ? 'marginBottom'\n                      : marginDirection]:\n                      typeof size === 'string'\n                        ? `${spaceSize[size]}px`\n                        : `${size}px`,\n                  },\n          },\n          { default: () => [child] }\n        )\n      )\n\n      return h('div', { class: someSpaceClass }, { default: () => renderItems })\n    }\n  },\n})\n\nexport default Space\n"]}
{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/submit/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,oCAA+C;AAE/C,sDAAgD;AAChD,wDAAsD;AAGtD,yCAA+C;AASlC,QAAA,MAAM,GAAG,IAAA,uBAAQ,EAC5B,IAAA,iCAAe,EAAe;IAC5B,IAAI,EAAE,SAAS;IACf,KAAK,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,iBAAiB,EAAE,gBAAgB,CAAC;IACnE,KAAK,EAAL,UAAM,KAAK,EAAE,EAA2B;YAAzB,KAAK,WAAA,EAAE,KAAK,WAAA,EAAE,SAAS,eAAA;QACpC,IAAM,OAAO,GAAG,IAAA,mBAAa,GAAE,CAAA;QAE/B,OAAO;YAEH,IAAA,KAIE,KAAK,QAJmB,EAA1B,OAAO,mBAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,KAAK,KAAA,EAC1B,KAGE,KAAK,SAHqB,EAA5B,QAAQ,mBAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,MAAM,KAAA,EAC5B,KAEE,KAAK,gBAFmC,EAA1C,eAAe,mBAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,aAAa,KAAA,EAC1C,KACE,KAAK,eADiC,EAAxC,cAAc,mBAAG,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,YAAY,KAAA,CACjC;YAET,IAAM,IAAI,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,CAAA;YAC3B,OAAO,IAAA,OAAC,EACN,mBAAQ,EACR;gBACE,KAAK,sBACH,UAAU,EAAE,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,MAAM,EAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,EACnD,IAAI,EAAE,SAAS,IACZ,KAAK,KACR,OAAO,EACL,KAAK,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,GACjE;gBACD,EAAE,wBACG,SAAS,KACZ,KAAK,EAAE,UAAC,CAAM;wBACZ,IAAI,OAAO,EAAE;4BACX,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK;gCAAE,OAAM;yBACjC;wBACD,IAAI,QAAQ,EAAE;4BACZ,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CACA,MAAM,CAAC,QAA4B,EACpC,IAAI,CAAC,eAAmC,EACxC,KAAK,CAAC,cAAkC,CAAC,CAAA;yBAC7C;oBACH,CAAC,GACF;aACF,EACD,KAAK,CACN,CAAA;QACH,CAAC,CAAA;IACH,CAAC;CACF,CAAC,CACH,CAAA;AAED,kBAAe,cAAM,CAAA","sourcesContent":["import { h, useParentForm } from '@formily/vue'\nimport { IFormFeedback } from '@formily/core'\nimport { observer } from '@formily/reactive-vue'\nimport { defineComponent } from '@vue/composition-api'\n\nimport type { Button as ElButtonProps } from 'element-ui'\nimport { Button as ElButton } from 'element-ui'\n\nexport interface ISubmitProps extends ElButtonProps {\n  onClick?: (e: MouseEvent) => any\n  onSubmit?: (values: any) => any\n  onSubmitSuccess?: (payload: any) => void\n  onSubmitFailed?: (feedbacks: IFormFeedback[]) => void\n}\n\nexport const Submit = observer(\n  defineComponent<ISubmitProps>({\n    name: 'FSubmit',\n    props: ['onClick', 'onSubmit', 'onSubmitSuccess', 'onSubmitFailed'],\n    setup(props, { attrs, slots, listeners }) {\n      const formRef = useParentForm()\n\n      return () => {\n        const {\n          onClick = listeners?.click,\n          onSubmit = listeners?.submit,\n          onSubmitSuccess = listeners?.submitSuccess,\n          onSubmitFailed = listeners?.submitFailed,\n        } = props\n\n        const form = formRef?.value\n        return h(\n          ElButton,\n          {\n            attrs: {\n              nativeType: listeners?.submit ? 'button' : 'submit',\n              type: 'primary',\n              ...attrs,\n              loading:\n                attrs.loading !== undefined ? attrs.loading : form?.submitting,\n            },\n            on: {\n              ...listeners,\n              click: (e: any) => {\n                if (onClick) {\n                  if (onClick(e) === false) return\n                }\n                if (onSubmit) {\n                  form\n                    ?.submit(onSubmit as (e: any) => void)\n                    .then(onSubmitSuccess as (e: any) => void)\n                    .catch(onSubmitFailed as (e: any) => void)\n                }\n              },\n            },\n          },\n          slots\n        )\n      }\n    },\n  })\n)\n\nexport default Submit\n"]}
{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/array-table/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,OAAO,CAAA;AACpE,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,aAAa,CAAA;AAI9D,OAAO,GAAG,MAAM,YAAY,CAAA;AAE5B,OAAO,EACL,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,cAAc,EACd,cAAc,GACf,MAAM,gBAAgB,CAAA;AACvB,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAA;AAE/C,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAA;AAC9C,OAAO,EAAE,SAAS,EAAmB,MAAM,eAAe,CAAA;AA+B1D,IAAM,iBAAiB,GAAG,UAAC,MAAc;;IACvC,OAAO,CAAA,MAAA,MAAM,CAAC,aAAa,CAAC,0CAAE,OAAO,CAAC,QAAQ,CAAC,IAAG,CAAC,CAAC,CAAA;AACtD,CAAC,CAAA;AAED,IAAM,qBAAqB,GAAG,UAAC,MAAc;;IAC3C,OAAO,CAAA,MAAA,MAAM,CAAC,aAAa,CAAC,0CAAE,OAAO,CAAC,YAAY,CAAC,IAAG,CAAC,CAAC,CAAA;AAC1D,CAAC,CAAA;AAED,IAAM,mBAAmB,GAAG,UAAC,MAAc;;IACzC,OAAO,CAAA,MAAA,MAAM,CAAC,aAAa,CAAC,0CAAE,OAAO,CAAC,UAAU,CAAC,IAAG,CAAC,CAAC,CAAA;AACxD,CAAC,CAAA;AAED,IAAM,oBAAoB,GAAG;IAC3B,IAAM,UAAU,GAAG,QAAQ,EAAE,CAAA;IAC7B,IAAM,MAAM,GAAG,cAAc,EAAE,CAAA;IAC/B,IAAM,YAAY,GAAG,UAAC,MAAc;;QAClC,IACE,iBAAiB,CAAC,MAAM,CAAC;YACzB,qBAAqB,CAAC,MAAM,CAAC;YAC7B,mBAAmB,CAAC,MAAM,CAAC,EAC3B;YACA,IAAI,CAAC,CAAA,MAAA,MAAM,CAAC,mBAAmB,CAAC,0CAAG,WAAW,CAAC,CAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;gBAChE,OAAO,EAAE,CAAA;YACX,IAAM,MAAI,GAAG,CAAA,MAAA,MAAM,CAAC,mBAAmB,CAAC,0CAAG,WAAW,CAAC,KAAI,MAAM,CAAC,MAAM,CAAC,CAAA;YACzE,IAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,MAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;YACtE,IAAM,WAAW,GACf,CAAA,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,SAAS,0CAAG,CAAC,CAAC,KAAI,MAAM,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAA;YAC5D,IAAM,OAAO,GAAG,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,KAAI,MAAM,CAAC,WAAW,CAAC,CAAA;YACrD,OAAO;gBACL;oBACE,IAAI,QAAA;oBACJ,OAAO,SAAA;oBACP,KAAK,OAAA;oBACL,MAAM,QAAA;oBACN,WAAW,aAAA;iBACZ;aACF,CAAA;SACF;aAAM,IAAI,MAAM,CAAC,UAAU,EAAE;YAC5B,OAAO,MAAM,CAAC,gBAAgB,CAAC,UAAC,GAAG,EAAE,MAAM;gBACzC,OAAO,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAA;YACzC,CAAC,EAAE,EAAE,CAAC,CAAA;SACP;IACH,CAAC,CAAA;IAED,IAAM,eAAe,GAAG,UAAC,MAAuB;QAC9C,IAAI,CAAC,MAAM;YAAE,OAAO,EAAE,CAAA;QACtB,IAAM,OAAO,GAA6B,EAAE,CAAA;QAC5C,IAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;QAC/C,OAAO,KAAK,CAAC,MAAM,CAAC,UAAC,OAAO,EAAE,MAAM;YAClC,IAAM,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC,CAAA;YACjC,IAAI,IAAI,EAAE;gBACR,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;aAC5B;YACD,OAAO,OAAO,CAAA;QAChB,CAAC,EAAE,OAAO,CAAC,CAAA;IACb,CAAC,CAAA;IAED,OAAO,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;AACtC,CAAC,CAAA;AAED,IAAM,oBAAoB,GAAG,UAC3B,UAAiB,EACjB,OAAiC;IAEjC,OAAO,OAAO,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,EAAsC,EAAE,GAAG;YAAzC,IAAI,UAAA,EAAE,WAAW,iBAAA,EAAE,MAAM,YAAA,EAAE,OAAO,aAAA;QAC9D,IAAI,OAAO,KAAK,SAAS;YAAE,OAAO,GAAG,CAAA;QACrC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;YAAE,OAAO,GAAG,CAAA;QAC1C,OAAO,GAAG,CAAC,MAAM,uBACZ,WAAW,KACd,GAAG,KAAA,EACH,SAAS,EAAE,IAAI,EACf,IAAI,EAAE,UAAC,KAAU,EAAE,CAAS,EAAE,MAAW;gBACvC,IAAM,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;gBACxC,IAAM,QAAQ,GAAG,CACf,oBAAC,SAAS,CAAC,IAAI,IAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM;oBACtD,oBAAC,cAAc,IAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,oBAAoB,SAAG,CACrD,CAClB,CAAA;gBACD,OAAO,QAAQ,CAAA;YACjB,CAAC,IACD,CAAA;IACJ,CAAC,EAAE,EAAE,CAAC,CAAA;AACR,CAAC,CAAA;AAED,IAAM,WAAW,GAAG;IAClB,IAAM,MAAM,GAAG,cAAc,EAAE,CAAA;IAC/B,OAAO,MAAM,CAAC,gBAAgB,CAAC,UAAC,QAAQ,EAAE,MAAM,EAAE,GAAG;QACnD,IAAI,mBAAmB,CAAC,MAAM,CAAC,EAAE;YAC/B,OAAO,oBAAC,cAAc,IAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,GAAI,CAAA;SACrD;QACD,OAAO,QAAQ,CAAA;IACjB,CAAC,EAAE,IAAI,CAAC,CAAA;AACV,CAAC,CAAA;AAED,IAAM,YAAY,GAAiC,QAAQ,CACzD,UAAC,EAAsB;;IAApB,IAAA,QAAQ,cAAA,EAAK,KAAK,cAApB,YAAsB,CAAF;IACnB,IAAM,IAAI,GAAG,OAAO,EAAE,CAAA;IACtB,IAAM,KAAK,GAAG,QAAQ,EAAc,CAAA;IACpC,IAAM,SAAS,GAAG,YAAY,CAAC,qBAAqB,CAAC,CAAA;IACrD,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;QACjC,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,UAAG,KAAK,CAAC,OAAO,OAAI;KAC9B,CAAC,CAAA;IACF,IAAM,UAAU,GAAG,UAAC,OAAe;;QACjC,OAAO,MAAM,CACX,MAAA,OAAO;aACJ,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC;aACpD,KAAK,CAAC,OAAO,CAAC,0CAAG,CAAC,CAAC,CACvB,CAAA;IACH,CAAC,CAAA;IACD,IAAM,OAAO,GAAG,MAAA,KAAK,CAAC,UAAU,0CAAE,GAAG,CAAC,UAAC,EAAgB;YAAd,KAAK,WAAA,EAAE,KAAK,WAAA;QACnD,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,UAAC,EAAW;gBAAT,OAAO,aAAA;YACrC,IAAM,YAAY,GAAG,UAAU,CAAC,OAAO,CAAC,CAAA;YACxC,IAAM,UAAU,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAA;YACzC,IAAM,QAAQ,GAAG,KAAK,GAAG,QAAQ,CAAA;YACjC,OAAO,YAAY,IAAI,UAAU,IAAI,YAAY,IAAI,QAAQ,CAAA;QAC/D,CAAC,CAAC,CAAA;QACF,OAAO;YACL,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,oBAAC,KAAK,IAAC,GAAG,UAAE,KAAK,CAAS,CAAC,CAAC,CAAC,KAAK;YACpD,KAAK,OAAA;SACN,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,OAAO,CACL,oBAAC,MAAM,eACD,KAAK,IACT,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,UAAU,EAAE,OAAO,EACnB,UAAU,QACV,SAAS,EAAE,GAAG,CAAC,UAAG,SAAS,mBAAgB,EAAE;YAC3C,WAAW,EAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM;SAC5B,CAAC,IACF,CACH,CAAA;AACH,CAAC,CACF,CAAA;AAED,IAAM,oBAAoB,GAAyC,UAAC,EAGnE;;IAFC,IAAA,UAAU,gBAAA,EACP,KAAK,cAF0D,cAGnE,CADS;IAEF,IAAA,KAAA,OAAwB,QAAQ,CAAC,CAAC,CAAC,IAAA,EAAlC,OAAO,QAAA,EAAE,UAAU,QAAe,CAAA;IACzC,IAAM,SAAS,GAAG,YAAY,CAAC,qBAAqB,CAAC,CAAA;IACrD,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,IAAI,EAAE,CAAA;IACrC,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,QAAQ,CAAA;IACnC,IAAM,OAAO,GAAG,UAAU,IAAI,EAAE,CAAA;IAChC,IAAM,UAAU,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAA;IAC3C,IAAM,QAAQ,GAAG,UAAU,GAAG,QAAQ,GAAG,CAAC,CAAA;IAC1C,IAAM,KAAK,GAAG,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,KAAI,CAAC,CAAA;IAClC,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAA;IAC7C,IAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,KAAK;QAC1D,IAAM,IAAI,GAAG,KAAK,GAAG,CAAC,CAAA;QACtB,OAAO;YACL,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,IAAI;SACZ,CAAA;IACH,CAAC,CAAC,CAAA;IACF,IAAM,YAAY,GAAG,UAAC,OAAe;QACnC,UAAU,CAAC,OAAO,CAAC,CAAA;IACrB,CAAC,CAAA;IAED,SAAS,CAAC;QACR,IAAI,SAAS,GAAG,CAAC,IAAI,SAAS,GAAG,OAAO,EAAE;YACxC,YAAY,CAAC,SAAS,CAAC,CAAA;SACxB;IACH,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAA;IAExB,IAAM,gBAAgB,GAAG;QACvB,IAAI,SAAS,IAAI,CAAC;YAAE,OAAM;QAC1B,OAAO,CACL,6BAAK,SAAS,EAAE,UAAG,SAAS,gBAAa;YACvC,oBAAC,YAAY,IACX,KAAK,EAAE,OAAO,EACd,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,YAAY,EACtB,UAAU,EAAE,KAAK,EACjB,eAAe,EAAE,KAAK,GACtB;YACF,oBAAC,UAAU,eACL,KAAK,IACT,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,UAAU,CAAC,MAAM,EACxB,IAAI,EAAE,IAAI,EACV,gBAAgB,EAAE,KAAK,EACvB,QAAQ,EAAE,YAAY,IACtB,CACE,CACP,CAAA;IACH,CAAC,CAAA;IAED,OAAO,CACL,oBAAC,QAAQ,QACN,MAAA,KAAK,CAAC,QAAQ,+CAAd,KAAK,EACJ,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,KAAK,CAAC,UAAU,EAAE,QAAQ,GAAG,CAAC,CAAC,EAC3C,gBAAgB,EAAE,CACnB,CACQ,CACZ,CAAA;AACH,CAAC,CAAA;AAED,IAAM,IAAI,GAAG,UAAC,KAAU,EAAE,IAAe;IACvC,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;SACtB,MAAM,CAAC,UAAC,GAAG,IAAK,OAAA,CAAC,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,CAAC,GAAG,CAAC,CAAA,EAApB,CAAoB,CAAC;SACrC,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG;QACf,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAA;QACrB,OAAO,GAAG,CAAA;IACZ,CAAC,EAAE,EAAE,CAAC,CAAA;AACV,CAAC,CAAA;AAED,MAAM,CAAC,IAAM,UAAU,GAAuB,QAAQ,CACpD,UAAC,KAAuB;IACtB,IAAM,GAAG,GAAG,MAAM,EAAkB,CAAA;IACpC,IAAM,KAAK,GAAG,QAAQ,EAAc,CAAA;IACpC,IAAM,SAAS,GAAG,YAAY,CAAC,qBAAqB,CAAC,CAAA;IACrD,IAAM,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA;IACxE,IAAM,OAAO,GAAG,oBAAoB,EAAE,CAAA;IACtC,IAAM,OAAO,GAAG,oBAAoB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAA;IACzD,IAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAA;IACnE,IAAM,QAAQ,GAAG,WAAW,EAAE,CAAA;IAE9B,OAAO,CACL,oBAAC,oBAAoB,eAAK,UAAU,IAAE,UAAU,EAAE,UAAU,KACzD,UAAC,UAAU,EAAE,KAAK,IAAK,OAAA,CACtB,6BAAK,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,SAAS;QACjC,oBAAC,SAAS;YACR,oBAAC,KAAK,aACJ,IAAI,EAAC,OAAO,IACR,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC,IACpD,OAAO,EAAE,OAAO,EAChB,UAAU,EAAE,UAAU,IACtB;YACF,6BAAK,KAAK,EAAE,EAAE,SAAS,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,IAAG,KAAK,CAAO;YAC3D,OAAO,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,GAAG;gBACvB,oBAAoB;gBACpB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC;oBAAE,OAAM;gBAC7C,OAAO,KAAK,CAAC,aAAa,CAAC,cAAc,EAAE;oBACzC,IAAI,EAAE,MAAM,CAAC,IAAI;oBACjB,MAAM,EAAE,MAAM,CAAC,MAAM;oBACrB,cAAc,EAAE,IAAI;oBACpB,GAAG,KAAA;iBACJ,CAAC,CAAA;YACJ,CAAC,CAAC;YACD,QAAQ,CACC,CACR,CACP,EAvBuB,CAuBvB,CACoB,CACxB,CAAA;AACH,CAAC,CACF,CAAA;AAED,UAAU,CAAC,WAAW,GAAG,YAAY,CAAA;AAErC,UAAU,CAAC,MAAM,GAAG;IAClB,OAAO,oBAAC,QAAQ,OAAG,CAAA;AACrB,CAAC,CAAA;AAED,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAA;AAE3B,eAAe,UAAU,CAAA","sourcesContent":["import React, { Fragment, useState, useRef, useEffect } from 'react'\nimport { Table, Pagination, Select, Badge } from '@alifd/next'\nimport { PaginationProps } from '@alifd/next/lib/pagination'\nimport { TableProps, ColumnProps } from '@alifd/next/lib/table'\nimport { SelectProps } from '@alifd/next/lib/select'\nimport cls from 'classnames'\nimport { GeneralField, FieldDisplayTypes, ArrayField } from '@formily/core'\nimport {\n  useForm,\n  useField,\n  observer,\n  useFieldSchema,\n  RecursionField,\n} from '@formily/react'\nimport { isArr, isBool } from '@formily/shared'\nimport { Schema } from '@formily/json-schema'\nimport { usePrefixCls } from '../__builtins__'\nimport { ArrayBase, ArrayBaseMixins } from '../array-base'\n\ninterface ObservableColumnSource {\n  field: GeneralField\n  columnProps: ColumnProps\n  schema: Schema\n  display: FieldDisplayTypes\n  name: string\n}\n\ninterface IArrayTablePaginationProps extends PaginationProps {\n  dataSource?: any[]\n  children?: (\n    dataSource: any[],\n    pagination: React.ReactNode\n  ) => React.ReactElement\n}\n\ninterface IStatusSelectProps extends SelectProps {\n  pageSize?: number\n}\n\ninterface ExtendTableProps extends TableProps {\n  pagination?: PaginationProps\n}\n\ntype ComposedArrayTable = React.FC<ExtendTableProps> &\n  ArrayBaseMixins & {\n    Column?: React.FC<ColumnProps>\n  }\n\nconst isColumnComponent = (schema: Schema) => {\n  return schema['x-component']?.indexOf('Column') > -1\n}\n\nconst isOperationsComponent = (schema: Schema) => {\n  return schema['x-component']?.indexOf('Operations') > -1\n}\n\nconst isAdditionComponent = (schema: Schema) => {\n  return schema['x-component']?.indexOf('Addition') > -1\n}\n\nconst useArrayTableSources = () => {\n  const arrayField = useField()\n  const schema = useFieldSchema()\n  const parseSources = (schema: Schema): ObservableColumnSource[] => {\n    if (\n      isColumnComponent(schema) ||\n      isOperationsComponent(schema) ||\n      isAdditionComponent(schema)\n    ) {\n      if (!schema['x-component-props']?.['dataIndex'] && !schema['name'])\n        return []\n      const name = schema['x-component-props']?.['dataIndex'] || schema['name']\n      const field = arrayField.query(arrayField.address.concat(name)).take()\n      const columnProps =\n        field?.component?.[1] || schema['x-component-props'] || {}\n      const display = field?.display || schema['x-display']\n      return [\n        {\n          name,\n          display,\n          field,\n          schema,\n          columnProps,\n        },\n      ]\n    } else if (schema.properties) {\n      return schema.reduceProperties((buf, schema) => {\n        return buf.concat(parseSources(schema))\n      }, [])\n    }\n  }\n\n  const parseArrayItems = (schema: Schema['items']) => {\n    if (!schema) return []\n    const sources: ObservableColumnSource[] = []\n    const items = isArr(schema) ? schema : [schema]\n    return items.reduce((columns, schema) => {\n      const item = parseSources(schema)\n      if (item) {\n        return columns.concat(item)\n      }\n      return columns\n    }, sources)\n  }\n\n  return parseArrayItems(schema.items)\n}\n\nconst useArrayTableColumns = (\n  dataSource: any[],\n  sources: ObservableColumnSource[]\n): TableProps['columns'] => {\n  return sources.reduce((buf, { name, columnProps, schema, display }, key) => {\n    if (display !== 'visible') return buf\n    if (!isColumnComponent(schema)) return buf\n    return buf.concat({\n      ...columnProps,\n      key,\n      dataIndex: name,\n      cell: (value: any, _: number, record: any) => {\n        const index = dataSource.indexOf(record)\n        const children = (\n          <ArrayBase.Item key={index} index={index} record={record}>\n            <RecursionField schema={schema} name={index} onlyRenderProperties />\n          </ArrayBase.Item>\n        )\n        return children\n      },\n    })\n  }, [])\n}\n\nconst useAddition = () => {\n  const schema = useFieldSchema()\n  return schema.reduceProperties((addition, schema, key) => {\n    if (isAdditionComponent(schema)) {\n      return <RecursionField schema={schema} name={key} />\n    }\n    return addition\n  }, null)\n}\n\nconst StatusSelect: React.FC<IStatusSelectProps> = observer(\n  ({ pageSize, ...props }) => {\n    const form = useForm()\n    const field = useField<ArrayField>()\n    const prefixCls = usePrefixCls('formily-array-table')\n    const errors = form.queryFeedbacks({\n      type: 'error',\n      address: `${field.address}.*`,\n    })\n    const parseIndex = (address: string) => {\n      return Number(\n        address\n          .slice(address.indexOf(field.address.toString()) + 1)\n          .match(/(\\d+)/)?.[1]\n      )\n    }\n    const options = props.dataSource?.map(({ label, value }) => {\n      const hasError = errors.some(({ address }) => {\n        const currentIndex = parseIndex(address)\n        const startIndex = (value - 1) * pageSize\n        const endIndex = value * pageSize\n        return currentIndex >= startIndex && currentIndex <= endIndex\n      })\n      return {\n        label: hasError ? <Badge dot>{label}</Badge> : label,\n        value,\n      }\n    })\n\n    return (\n      <Select\n        {...props}\n        value={props.value}\n        onChange={props.onChange}\n        dataSource={options}\n        useVirtual\n        className={cls(`${prefixCls}-status-select`, {\n          'has-error': errors?.length,\n        })}\n      />\n    )\n  }\n)\n\nconst ArrayTablePagination: React.FC<IArrayTablePaginationProps> = ({\n  dataSource,\n  ...props\n}) => {\n  const [current, setCurrent] = useState(1)\n  const prefixCls = usePrefixCls('formily-array-table')\n  const pageSize = props.pageSize || 10\n  const size = props.size || 'medium'\n  const sources = dataSource || []\n  const startIndex = (current - 1) * pageSize\n  const endIndex = startIndex + pageSize - 1\n  const total = sources?.length || 0\n  const totalPage = Math.ceil(total / pageSize)\n  const pages = Array.from(new Array(totalPage)).map((_, index) => {\n    const page = index + 1\n    return {\n      label: page,\n      value: page,\n    }\n  })\n  const handleChange = (current: number) => {\n    setCurrent(current)\n  }\n\n  useEffect(() => {\n    if (totalPage > 0 && totalPage < current) {\n      handleChange(totalPage)\n    }\n  }, [totalPage, current])\n\n  const renderPagination = () => {\n    if (totalPage <= 1) return\n    return (\n      <div className={`${prefixCls}-pagination`}>\n        <StatusSelect\n          value={current}\n          pageSize={pageSize}\n          onChange={handleChange}\n          dataSource={pages}\n          notFoundContent={false}\n        />\n        <Pagination\n          {...props}\n          pageSize={pageSize}\n          current={current}\n          total={dataSource.length}\n          size={size}\n          pageSizeSelector={false}\n          onChange={handleChange}\n        />\n      </div>\n    )\n  }\n\n  return (\n    <Fragment>\n      {props.children?.(\n        dataSource?.slice(startIndex, endIndex + 1),\n        renderPagination()\n      )}\n    </Fragment>\n  )\n}\n\nconst omit = (props: any, keys?: string[]) => {\n  return Object.keys(props)\n    .filter((key) => !keys?.includes(key))\n    .reduce((buf, key) => {\n      buf[key] = props[key]\n      return buf\n    }, {})\n}\n\nexport const ArrayTable: ComposedArrayTable = observer(\n  (props: ExtendTableProps) => {\n    const ref = useRef<HTMLDivElement>()\n    const field = useField<ArrayField>()\n    const prefixCls = usePrefixCls('formily-array-table')\n    const dataSource = Array.isArray(field.value) ? field.value.slice() : []\n    const sources = useArrayTableSources()\n    const columns = useArrayTableColumns(dataSource, sources)\n    const pagination = isBool(props.pagination) ? {} : props.pagination\n    const addition = useAddition()\n\n    return (\n      <ArrayTablePagination {...pagination} dataSource={dataSource}>\n        {(dataSource, pager) => (\n          <div ref={ref} className={prefixCls}>\n            <ArrayBase>\n              <Table\n                size=\"small\"\n                {...omit(props, ['value', 'onChange', 'pagination'])}\n                columns={columns}\n                dataSource={dataSource}\n              />\n              <div style={{ marginTop: 5, marginBottom: 5 }}>{pager}</div>\n              {sources.map((column, key) => {\n                //专门用来承接对Column的状态管理\n                if (!isColumnComponent(column.schema)) return\n                return React.createElement(RecursionField, {\n                  name: column.name,\n                  schema: column.schema,\n                  onlyRenderSelf: true,\n                  key,\n                })\n              })}\n              {addition}\n            </ArrayBase>\n          </div>\n        )}\n      </ArrayTablePagination>\n    )\n  }\n)\n\nArrayTable.displayName = 'ArrayTable'\n\nArrayTable.Column = () => {\n  return <Fragment />\n}\n\nArrayBase.mixin(ArrayTable)\n\nexport default ArrayTable\n"]}
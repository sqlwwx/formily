{"version":3,"file":"Field.js","sourceRoot":"","sources":["../../src/components/Field.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,gDAAyB;AACzB,kCAA4C;AAC5C,gDAA8C;AAC9C,iDAA+C;AAC/C,oCAAwC;AAGjC,IAAM,KAAK,GAAG,UACnB,KAAwB;IAExB,IAAM,IAAI,GAAG,IAAA,eAAO,GAAE,CAAA;IACtB,IAAM,MAAM,GAAG,IAAA,gBAAQ,GAAE,CAAA;IACzB,IAAM,KAAK,GAAG,IAAA,qBAAS,EACrB,IAAI,CAAC,WAAW,YAAG,QAAQ,EAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,OAAO,IAAK,KAAK,EAAG,CAC1D,CAAA;IACD,OAAO,CACL,8BAAC,qBAAY,CAAC,QAAQ,IAAC,KAAK,EAAE,KAAK;QACjC,8BAAC,6BAAa,IAAC,KAAK,EAAE,KAAK,IAAG,KAAK,CAAC,QAAQ,CAAiB,CACvC,CACzB,CAAA;AACH,CAAC,CAAA;AAbY,QAAA,KAAK,SAajB;AAED,aAAK,CAAC,WAAW,GAAG,OAAO,CAAA","sourcesContent":["import React from 'react'\nimport { useField, useForm } from '../hooks'\nimport { useAttach } from '../hooks/useAttach'\nimport { ReactiveField } from './ReactiveField'\nimport { FieldContext } from '../shared'\nimport { JSXComponent, IFieldProps } from '../types'\n\nexport const Field = <D extends JSXComponent, C extends JSXComponent>(\n  props: IFieldProps<D, C>\n) => {\n  const form = useForm()\n  const parent = useField()\n  const field = useAttach(\n    form.createField({ basePath: parent?.address, ...props })\n  )\n  return (\n    <FieldContext.Provider value={field}>\n      <ReactiveField field={field}>{props.children}</ReactiveField>\n    </FieldContext.Provider>\n  )\n}\n\nField.displayName = 'Field'\n"]}
{"version":3,"file":"render.js","sourceRoot":"","sources":["../../src/shared/render.ts"],"names":[],"mappings":";;;;;;AAAA,gDAAyB;AACzB,uCAAwC;AACxC,0CAAoD;AAEpD,IAAM,GAAG,GAAG;IACV,SAAS,EAAE,IAAI;CAChB,CAAA;AAEM,IAAM,MAAM,GAAG,UAAC,OAA2B;IAChD,IAAI,2BAAkB,CAAC,UAAU,CAAC,EAAE;QAClC,GAAG,CAAC,SAAS;YACX,GAAG,CAAC,SAAS,IAAI,2BAAkB,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;QACtE,OAAO,IAAA,wBAAY,EAAC,OAAO,EAAE,GAAG,CAAC,SAAS,CAAC,CAAA;KAC5C;SAAM;QACL,OAAO,eAAK,CAAC,aAAa,CAAC,UAAU,EAAE,EAAE,EAAE,OAAO,CAAC,CAAA;KACpD;AACH,CAAC,CAAA;AARY,QAAA,MAAM,UAQlB","sourcesContent":["import React from 'react'\nimport { createPortal } from 'react-dom'\nimport { globalThisPolyfill } from '@formily/shared'\n\nconst env = {\n  portalDOM: null,\n}\n\nexport const render = (element: React.ReactElement) => {\n  if (globalThisPolyfill['document']) {\n    env.portalDOM =\n      env.portalDOM || globalThisPolyfill['document'].createElement('div')\n    return createPortal(element, env.portalDOM)\n  } else {\n    return React.createElement('template', {}, element)\n  }\n}\n"]}
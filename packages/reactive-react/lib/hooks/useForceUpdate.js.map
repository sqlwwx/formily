{"version":3,"file":"useForceUpdate.js","sourceRoot":"","sources":["../../src/hooks/useForceUpdate.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,+BAAgE;AAChE,+CAA6C;AAE7C,IAAM,WAAW,GAAU,EAAE,CAAA;AAC7B,IAAM,YAAY,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,CAAA;AACjC,IAAM,YAAY,GAAG,IAAI,GAAG,EAAc,CAAA;AAE1C,SAAgB,cAAc;IACtB,IAAA,KAAA,OAAe,IAAA,gBAAQ,EAAC,EAAE,CAAC,IAAA,EAAxB,QAAQ,QAAgB,CAAA;IACjC,IAAM,UAAU,GAAG,IAAA,cAAM,EAAC,KAAK,CAAC,CAAA;IAEhC,IAAA,iBAAS,EAAC;QACR,UAAU,CAAC,OAAO,GAAG,KAAK,CAAA;QAC1B,OAAO;YACL,UAAU,CAAC,OAAO,GAAG,IAAI,CAAA;QAC3B,CAAC,CAAA;IACH,CAAC,EAAE,WAAW,CAAC,CAAA;IAEf,IAAM,MAAM,GAAG,IAAA,mBAAW,EAAC;QACzB,IAAI,UAAU,CAAC,OAAO;YAAE,OAAM;QAC9B,QAAQ,CAAC,EAAE,CAAC,CAAA;IACd,CAAC,EAAE,WAAW,CAAC,CAAA;IAEf,IAAM,SAAS,GAAG,IAAA,mBAAW,EAAC;QAC5B,IAAI,YAAY,CAAC,KAAK,KAAK,CAAC,EAAE;YAC5B,MAAM,EAAE,CAAA;SACT;aAAM;YACL,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;SACzB;IACH,CAAC,EAAE,WAAW,CAAC,CAAA;IAEf,YAAY,CAAC,KAAK,EAAE,CAAA;IAEpB,IAAA,2BAAY,EAAC;QACX,IAAI,YAAY,CAAC,KAAK,GAAG,CAAC,EAAE;YAC1B,YAAY,CAAC,KAAK,EAAE,CAAA;SACrB;QACD,IAAI,YAAY,CAAC,KAAK,KAAK,CAAC,EAAE;YAC5B,YAAY,CAAC,OAAO,CAAC,UAAC,MAAM;gBAC1B,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;gBAC3B,MAAM,EAAE,CAAA;YACV,CAAC,CAAC,CAAA;SACH;IACH,CAAC,CAAC,CAAA;IAEF,OAAO,SAAS,CAAA;AAClB,CAAC;AAvCD,wCAuCC","sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react'\nimport { useDidUpdate } from './useDidUpdate'\n\nconst EMPTY_ARRAY: any[] = []\nconst RENDER_COUNT = { value: 0 }\nconst RENDER_QUEUE = new Set<() => void>()\n\nexport function useForceUpdate() {\n  const [, setState] = useState([])\n  const unMountRef = useRef(false)\n\n  useEffect(() => {\n    unMountRef.current = false\n    return () => {\n      unMountRef.current = true\n    }\n  }, EMPTY_ARRAY)\n\n  const update = useCallback(() => {\n    if (unMountRef.current) return\n    setState([])\n  }, EMPTY_ARRAY)\n\n  const scheduler = useCallback(() => {\n    if (RENDER_COUNT.value === 0) {\n      update()\n    } else {\n      RENDER_QUEUE.add(update)\n    }\n  }, EMPTY_ARRAY)\n\n  RENDER_COUNT.value++\n\n  useDidUpdate(() => {\n    if (RENDER_COUNT.value > 0) {\n      RENDER_COUNT.value--\n    }\n    if (RENDER_COUNT.value === 0) {\n      RENDER_QUEUE.forEach((update) => {\n        RENDER_QUEUE.delete(update)\n        update()\n      })\n    }\n  })\n\n  return scheduler\n}\n"]}
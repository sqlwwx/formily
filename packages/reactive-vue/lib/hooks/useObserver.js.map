{"version":3,"file":"useObserver.js","sourceRoot":"","sources":["../../src/hooks/useObserver.ts"],"names":[],"mappings":";;;AAAA,8CAA2C;AAC3C,qCAAsE;AAEtE,0BAA0B;AACnB,IAAM,WAAW,GAAG;IACzB,IAAI,iBAAM,EAAE;QACV,IAAM,IAAE,GAAG,IAAA,6BAAkB,GAAE,CAAA;QAE/B,IAAI,SAA+B,CAAA;QAEnC,IAAA,0BAAe,EAAC;YACd,IAAI,SAAO,EAAE;gBACX,SAAO,EAAE,CAAA;aACV;QACH,CAAC,CAAC,CAAA;QAEF,MAAM,CAAC,cAAc,CAAC,IAAE,EAAE,QAAQ,EAAE;YAClC,GAAG;gBACD,OAAO,IAAE,CAAC,eAAe,CAAC,CAAA;YAC5B,CAAC;YACD,GAAG,YAAC,QAAQ;gBACV,IAAI,SAAO,EAAE;oBACX,SAAO,EAAE,CAAA;iBACV;gBACD,SAAO,GAAG,IAAA,kBAAO,EAAC,QAAQ,CAAC,CAAA;gBAC3B,IAAE,CAAC,eAAe,CAAC,GAAG,QAAQ,CAAA;YAChC,CAAC;SACF,CAAC,CAAA;KACH;AACH,CAAC,CAAA;AAzBY,QAAA,WAAW,eAyBvB","sourcesContent":["import { autorun } from '@formily/reactive'\nimport { getCurrentInstance, onBeforeUnmount, isVue3 } from 'vue-demi'\n\n/* istanbul ignore next */\nexport const useObserver = () => {\n  if (isVue3) {\n    const vm = getCurrentInstance()\n\n    let dispose: () => void | undefined\n\n    onBeforeUnmount(() => {\n      if (dispose) {\n        dispose()\n      }\n    })\n\n    Object.defineProperty(vm, 'update', {\n      get() {\n        return vm['_updateEffect']\n      },\n      set(newValue) {\n        if (dispose) {\n          dispose()\n        }\n        dispose = autorun(newValue)\n        vm['_updateEffect'] = newValue\n      },\n    })\n  }\n}\n"]}
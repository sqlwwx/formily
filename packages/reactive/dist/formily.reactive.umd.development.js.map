{"version":3,"file":"formily.reactive.umd.development.js","sources":["../src/checkers.ts","../src/array.ts","../src/environment.ts","../src/reaction.ts","../src/externals.ts","../src/handlers.ts","../src/tree.ts","../src/internals.ts","../src/batch.ts","../src/action.ts","../src/untracked.ts","../src/annotations/observable.ts","../src/annotations/box.ts","../src/annotations/ref.ts","../src/annotations/shallow.ts","../src/annotations/computed.ts","../src/observable.ts","../src/model.ts","../src/autorun.ts","../src/tracker.ts","../src/observe.ts"],"sourcesContent":["export const isMap = (val: any): val is Map<any, any> =>\n  val && val instanceof Map\nexport const isSet = (val: any): val is Set<any> => val && val instanceof Set\nexport const isWeakMap = (val: any): val is WeakMap<any, any> =>\n  val && val instanceof WeakMap\nexport const isWeakSet = (val: any): val is WeakSet<any> =>\n  val && val instanceof WeakSet\nexport const isFn = (val: any): val is Function => typeof val === 'function'\nexport const isArr = Array.isArray\nexport const isPlainObj = (val: any): val is object =>\n  Object.prototype.toString.call(val) === '[object Object]'\nexport const isValid = (val: any) => val !== null && val !== undefined\nexport const isCollectionType = (target: any) => {\n  return (\n    isMap(target) || isWeakMap(target) || isSet(target) || isWeakSet(target)\n  )\n}\nexport const isNormalType = (target: any) => {\n  return isPlainObj(target) || isArr(target)\n}\n","export const toArray = (value: any) => {\n  return Array.isArray(value)\n    ? value\n    : value !== undefined && value !== null\n    ? [value]\n    : []\n}\n\nexport class ArraySet<T> {\n  value: T[]\n  batchDeleting = false\n  constructor(value: T[] = []) {\n    this.value = value\n  }\n\n  add(item: T) {\n    if (!this.has(item)) {\n      this.value.push(item)\n    }\n  }\n\n  has(item: T) {\n    return this.value.indexOf(item) > -1\n  }\n\n  delete(item: T) {\n    if (this.batchDeleting) return //批量删除时禁止单独删除，会影响计数执行器\n    const index = this.value.indexOf(item)\n    if (index > -1) {\n      this.value.splice(index, 1)\n    }\n  }\n\n  forEach(callback: (value: T) => void) {\n    if (this.value.length === 0) return\n    for (let index = 0, len = this.value.length; index < len; index++) {\n      callback(this.value[index])\n    }\n  }\n\n  forEachDelete(callback: (value: T) => void) {\n    if (this.value.length === 0) return\n    this.batchDeleting = true\n    for (let index = 0; index < this.value.length; index++) {\n      const item = this.value[index]\n      this.value.splice(index, 1)\n      callback(item)\n      index--\n    }\n    this.batchDeleting = false\n  }\n\n  clear() {\n    this.value.length = 0\n  }\n}\n","import { ObservableListener, Reaction, ReactionsMap } from './types'\nimport { ArraySet } from './array'\nimport { DataNode } from './tree'\n\nexport const ProxyRaw = new WeakMap()\nexport const RawProxy = new WeakMap()\nexport const RawShallowProxy = new WeakMap()\nexport const RawNode = new WeakMap<object, DataNode>()\nexport const RawReactionsMap = new WeakMap<object, ReactionsMap>()\n\nexport const ReactionStack: Reaction[] = []\nexport const BatchCount = { value: 0 }\nexport const UntrackCount = { value: 0 }\nexport const BatchScope = { value: false }\nexport const DependencyCollected = { value: false }\nexport const PendingReactions = new ArraySet<Reaction>()\nexport const PendingScopeReactions = new ArraySet<Reaction>()\nexport const BatchEndpoints = new ArraySet<() => void>()\nexport const MakeObservableSymbol = Symbol('MakeObservableSymbol')\nexport const ObserverListeners = new ArraySet<ObservableListener>()\n","import { isFn } from './checkers'\nimport { ArraySet } from './array'\nimport { IOperation, ReactionsMap, Reaction, PropertyKey } from './types'\nimport {\n  ReactionStack,\n  PendingScopeReactions,\n  BatchEndpoints,\n  DependencyCollected,\n  RawReactionsMap,\n  PendingReactions,\n  BatchCount,\n  UntrackCount,\n  BatchScope,\n  ObserverListeners,\n} from './environment'\n\nconst ITERATION_KEY = Symbol('iteration key')\n\nconst addRawReactionsMap = (\n  target: any,\n  key: PropertyKey,\n  reaction: Reaction\n) => {\n  const reactionsMap = RawReactionsMap.get(target)\n  if (reactionsMap) {\n    const reactions = reactionsMap.get(key)\n    if (reactions) {\n      reactions.add(reaction)\n    } else {\n      reactionsMap.set(key, new ArraySet([reaction]))\n    }\n    return reactionsMap\n  } else {\n    const reactionsMap: ReactionsMap = new Map([\n      [key, new ArraySet([reaction])],\n    ])\n    RawReactionsMap.set(target, reactionsMap)\n    return reactionsMap\n  }\n}\n\nconst addReactionsMapToReaction = (\n  reaction: Reaction,\n  reactionsMap: ReactionsMap\n) => {\n  const bindSet = reaction._reactionsSet\n  if (bindSet) {\n    bindSet.add(reactionsMap)\n  } else {\n    reaction._reactionsSet = new ArraySet([reactionsMap])\n  }\n  return bindSet\n}\n\nconst getReactionsFromTargetKey = (target: any, key: PropertyKey) => {\n  const reactionsMap = RawReactionsMap.get(target)\n  const reactions = []\n  if (reactionsMap) {\n    const map = reactionsMap.get(key)\n    if (map) {\n      map.forEach((reaction) => {\n        if (reactions.indexOf(reaction) === -1) {\n          reactions.push(reaction)\n        }\n      })\n    }\n  }\n  return reactions\n}\n\nconst runReactions = (target: any, key: PropertyKey) => {\n  const reactions = getReactionsFromTargetKey(target, key)\n  const prevUntrackCount = UntrackCount.value\n  UntrackCount.value = 0\n  for (let i = 0, len = reactions.length; i < len; i++) {\n    const reaction = reactions[i]\n    if (reaction._isComputed) {\n      reaction._scheduler(reaction)\n    } else if (isScopeBatching()) {\n      PendingScopeReactions.add(reaction)\n    } else if (isBatching()) {\n      PendingReactions.add(reaction)\n    } else {\n      if (isFn(reaction._scheduler)) {\n        reaction._scheduler(reaction)\n      } else {\n        reaction()\n      }\n    }\n  }\n  UntrackCount.value = prevUntrackCount\n}\n\nconst notifyObservers = (operation: IOperation) => {\n  ObserverListeners.forEach((fn) => fn(operation))\n}\n\nexport const bindTargetKeyWithCurrentReaction = (operation: IOperation) => {\n  let { key, type, target } = operation\n  if (type === 'iterate') {\n    key = ITERATION_KEY\n  }\n\n  const current = ReactionStack[ReactionStack.length - 1]\n  if (isUntracking()) return\n  if (current) {\n    DependencyCollected.value = true\n    addReactionsMapToReaction(current, addRawReactionsMap(target, key, current))\n  }\n}\n\nexport const bindComputedReactions = (reaction: Reaction) => {\n  if (isFn(reaction)) {\n    const current = ReactionStack[ReactionStack.length - 1]\n    if (current) {\n      const computes = current._computesSet\n      if (computes) {\n        computes.add(reaction)\n      } else {\n        current._computesSet = new ArraySet([reaction])\n      }\n    }\n  }\n}\n\nexport const runReactionsFromTargetKey = (operation: IOperation) => {\n  let { key, type, target, oldTarget } = operation\n  batchStart()\n  notifyObservers(operation)\n  if (type === 'clear') {\n    oldTarget.forEach((_: any, key: PropertyKey) => {\n      runReactions(target, key)\n    })\n  } else {\n    runReactions(target, key)\n  }\n  if (type === 'add' || type === 'delete' || type === 'clear') {\n    const newKey = Array.isArray(target) ? 'length' : ITERATION_KEY\n    runReactions(target, newKey)\n  }\n  batchEnd()\n}\n\nexport const hasRunningReaction = () => {\n  return ReactionStack.length > 0\n}\n\nexport const releaseBindingReactions = (reaction: Reaction) => {\n  reaction._reactionsSet?.forEach((reactionsMap) => {\n    reactionsMap.forEach((reactions) => {\n      reactions.delete(reaction)\n    })\n  })\n  PendingReactions.delete(reaction)\n  PendingScopeReactions.delete(reaction)\n  delete reaction._reactionsSet\n}\n\nexport const suspendComputedReactions = (current: Reaction) => {\n  current._computesSet?.forEach((reaction) => {\n    const reactions = getReactionsFromTargetKey(\n      reaction._context,\n      reaction._property\n    )\n    if (reactions.length === 0) {\n      disposeBindingReactions(reaction)\n      reaction._dirty = true\n    }\n  })\n}\n\nexport const disposeBindingReactions = (reaction: Reaction) => {\n  reaction._disposed = true\n  releaseBindingReactions(reaction)\n  suspendComputedReactions(reaction)\n}\n\nexport const batchStart = () => {\n  BatchCount.value++\n}\n\nexport const batchEnd = () => {\n  BatchCount.value--\n  if (BatchCount.value === 0) {\n    const prevUntrackCount = UntrackCount.value\n    UntrackCount.value = 0\n    executePendingReactions()\n    executeBatchEndpoints()\n    UntrackCount.value = prevUntrackCount\n  }\n}\n\nexport const batchScopeStart = () => {\n  BatchScope.value = true\n}\n\nexport const batchScopeEnd = () => {\n  const prevUntrackCount = UntrackCount.value\n  BatchScope.value = false\n  UntrackCount.value = 0\n  PendingScopeReactions.forEachDelete((reaction) => {\n    if (isFn(reaction._scheduler)) {\n      reaction._scheduler(reaction)\n    } else {\n      reaction()\n    }\n  })\n  UntrackCount.value = prevUntrackCount\n}\n\nexport const untrackStart = () => {\n  UntrackCount.value++\n}\n\nexport const untrackEnd = () => {\n  UntrackCount.value--\n}\n\nexport const isBatching = () => BatchCount.value > 0\n\nexport const isScopeBatching = () => BatchScope.value\n\nexport const isUntracking = () => UntrackCount.value > 0\n\nexport const executePendingReactions = () => {\n  PendingReactions.forEachDelete((reaction) => {\n    if (isFn(reaction._scheduler)) {\n      reaction._scheduler(reaction)\n    } else {\n      reaction()\n    }\n  })\n}\n\nexport const executeBatchEndpoints = () => {\n  BatchEndpoints.forEachDelete((callback) => {\n    callback()\n  })\n}\n\nexport const hasDepsChange = (newDeps: any[], oldDeps: any[]) => {\n  if (newDeps === oldDeps) return false\n  if (newDeps.length !== oldDeps.length) return true\n  if (newDeps.some((value, index) => value !== oldDeps[index])) return true\n  return false\n}\n\nexport const disposeEffects = (reaction: Reaction) => {\n  if (reaction._effects) {\n    try {\n      batchStart()\n      reaction._effects.queue.forEach((item) => {\n        if (!item || !item.dispose) return\n        item.dispose()\n      })\n    } finally {\n      batchEnd()\n    }\n  }\n}\n","import {\n  isValid,\n  isFn,\n  isMap,\n  isWeakMap,\n  isSet,\n  isWeakSet,\n  isPlainObj,\n  isArr,\n} from './checkers'\nimport {\n  ProxyRaw,\n  MakeObservableSymbol,\n  DependencyCollected,\n  RawNode,\n} from './environment'\nimport { Annotation } from './types'\n\nconst RAW_TYPE = Symbol('RAW_TYPE')\nconst OBSERVABLE_TYPE = Symbol('OBSERVABLE_TYPE')\nconst hasOwnProperty = Object.prototype.hasOwnProperty\n\nexport const isObservable = (target: any) => {\n  return ProxyRaw.has(target)\n}\n\nexport const isAnnotation = (target: any): target is Annotation => {\n  return target && !!target[MakeObservableSymbol]\n}\n\nexport const isSupportObservable = (target: any) => {\n  if (!isValid(target)) return false\n  if (isArr(target)) return true\n  if (isPlainObj(target)) {\n    if (target[RAW_TYPE]) {\n      return false\n    }\n    if (target[OBSERVABLE_TYPE]) {\n      return true\n    }\n    if ('$$typeof' in target && '_owner' in target) {\n      return false\n    }\n    if (target['_isAMomentObject']) {\n      return false\n    }\n    if (target['_isJSONSchemaObject']) {\n      return false\n    }\n    if (isFn(target['toJS'])) {\n      return false\n    }\n    if (isFn(target['toJSON'])) {\n      return false\n    }\n    return true\n  }\n  if (isMap(target) || isWeakMap(target) || isSet(target) || isWeakSet(target))\n    return true\n  return false\n}\n\nexport const markRaw = <T>(target: T): T => {\n  if (!target) return\n  if (isFn(target)) {\n    target.prototype[RAW_TYPE] = true\n  } else {\n    target[RAW_TYPE] = true\n  }\n  return target\n}\n\nexport const markObservable = <T>(target: T): T => {\n  if (!target) return\n  if (isFn(target)) {\n    target.prototype[OBSERVABLE_TYPE] = true\n  } else {\n    target[OBSERVABLE_TYPE] = true\n  }\n  return target\n}\n\nexport const raw = <T>(target: T): T => ProxyRaw.get(target as any)\n\nexport const toJS = <T>(values: T): T => {\n  const visited = new WeakSet<any>()\n  const _toJS: typeof toJS = (values: any) => {\n    if (visited.has(values)) {\n      return values\n    }\n    if (values && values[RAW_TYPE]) return values\n    if (isArr(values)) {\n      if (isObservable(values)) {\n        visited.add(values)\n        const res: any = []\n        values.forEach((item: any) => {\n          res.push(_toJS(item))\n        })\n        visited.delete(values)\n        return res\n      }\n    } else if (isPlainObj(values)) {\n      if (isObservable(values)) {\n        visited.add(values)\n        const res: any = {}\n        for (const key in values) {\n          if (hasOwnProperty.call(values, key)) {\n            res[key] = _toJS(values[key])\n          }\n        }\n        visited.delete(values)\n        return res\n      }\n    }\n    return values\n  }\n\n  return _toJS(values)\n}\n\nexport const contains = (target: any, property: any) => {\n  const targetRaw = ProxyRaw.get(target) || target\n  const propertyRaw = ProxyRaw.get(property) || property\n  if (targetRaw === propertyRaw) return true\n  const targetNode = RawNode.get(targetRaw)\n  const propertyNode = RawNode.get(propertyRaw)\n  if (!targetNode) return false\n  if (!propertyNode) return false\n  return targetNode.contains(propertyNode)\n}\n\nexport const hasCollected = (callback?: () => void) => {\n  DependencyCollected.value = false\n  callback?.()\n  return DependencyCollected.value\n}\n","import {\n  bindTargetKeyWithCurrentReaction,\n  runReactionsFromTargetKey,\n} from './reaction'\nimport { ProxyRaw, RawProxy } from './environment'\nimport { isObservable, isSupportObservable } from './externals'\nimport { createObservable } from './internals'\n\nconst wellKnownSymbols = new Set(\n  Object.getOwnPropertyNames(Symbol)\n    .map((key) => Symbol[key])\n    .filter((value) => typeof value === 'symbol')\n)\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction findObservable(target: any, key: PropertyKey, value: any) {\n  const observableObj = RawProxy.get(value)\n  if (observableObj) {\n    return observableObj\n  }\n  if (!isObservable(value) && isSupportObservable(value)) {\n    return createObservable(target, key, value)\n  }\n  return value\n}\n\nfunction patchIterator(\n  target: any,\n  key: PropertyKey,\n  iterator: IterableIterator<any>,\n  isEntries: boolean\n) {\n  const originalNext = iterator.next\n  iterator.next = () => {\n    let { done, value } = originalNext.call(iterator)\n    if (!done) {\n      if (isEntries) {\n        value[1] = findObservable(target, key, value[1])\n      } else {\n        value = findObservable(target, key, value)\n      }\n    }\n    return { done, value }\n  }\n  return iterator\n}\n\nconst instrumentations = {\n  has(key: PropertyKey) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, key, type: 'has' })\n    return proto.has.apply(target, arguments)\n  },\n  get(key: PropertyKey) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, key, type: 'get' })\n    return findObservable(target, key, proto.get.apply(target, arguments))\n  },\n  add(key: PropertyKey) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    const hadKey = proto.has.call(target, key)\n    // forward the operation before queueing reactions\n    const result = proto.add.apply(target, arguments)\n    if (!hadKey) {\n      runReactionsFromTargetKey({ target, key, value: key, type: 'add' })\n    }\n    return result\n  },\n  set(key: PropertyKey, value: any) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    const hadKey = proto.has.call(target, key)\n    const oldValue = proto.get.call(target, key)\n    // forward the operation before queueing reactions\n    const result = proto.set.apply(target, arguments)\n    if (!hadKey) {\n      runReactionsFromTargetKey({ target, key, value, type: 'add' })\n    } else if (value !== oldValue) {\n      runReactionsFromTargetKey({ target, key, value, oldValue, type: 'set' })\n    }\n    return result\n  },\n  delete(key: PropertyKey) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    const hadKey = proto.has.call(target, key)\n    const oldValue = proto.get ? proto.get.call(target, key) : undefined\n    // forward the operation before queueing reactions\n    const result = proto.delete.apply(target, arguments)\n    if (hadKey) {\n      runReactionsFromTargetKey({ target, key, oldValue, type: 'delete' })\n    }\n    return result\n  },\n  clear() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    const hadItems = target.size !== 0\n    const oldTarget = target instanceof Map ? new Map(target) : new Set(target)\n    // forward the operation before queueing reactions\n    const result = proto.clear.apply(target, arguments)\n    if (hadItems) {\n      runReactionsFromTargetKey({ target, oldTarget, type: 'clear' })\n    }\n    return result\n  },\n  forEach(cb: any, ...args: any[]) {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    // swap out the raw values with their observable pairs\n    // before passing them to the callback\n    const wrappedCb = (value: any, key: PropertyKey, ...args: any) =>\n      cb(findObservable(target, key, value), key, ...args)\n    return proto.forEach.call(target, wrappedCb, ...args)\n  },\n  keys() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    return proto.keys.apply(target, arguments)\n  },\n  values() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    const iterator = proto.values.apply(target, arguments)\n    return patchIterator(target, '', iterator, false)\n  },\n  entries() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this) as any\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    const iterator = proto.entries.apply(target, arguments)\n    return patchIterator(target, '', iterator, true)\n  },\n  [Symbol.iterator]() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this)\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    const iterator = proto[Symbol.iterator].apply(target, arguments)\n    return patchIterator(target, '', iterator, target instanceof Map)\n  },\n  get size() {\n    const target = ProxyRaw.get(this)\n    const proto = Reflect.getPrototypeOf(this)\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    return Reflect.get(proto, 'size', target)\n  },\n}\n\nexport const collectionHandlers = {\n  get(target: any, key: PropertyKey, receiver: any) {\n    // instrument methods and property accessors to be reactive\n    target = hasOwnProperty.call(instrumentations, key)\n      ? instrumentations\n      : target\n    return Reflect.get(target, key, receiver)\n  },\n}\n\nexport const baseHandlers: ProxyHandler<any> = {\n  get(target, key, receiver) {\n    const result = target[key] // use Reflect.get is too slow\n    if (typeof key === 'symbol' && wellKnownSymbols.has(key)) {\n      return result\n    }\n    bindTargetKeyWithCurrentReaction({ target, key, receiver, type: 'get' })\n    const observableResult = RawProxy.get(result)\n    if (observableResult) {\n      return observableResult\n    }\n    if (!isObservable(result) && isSupportObservable(result)) {\n      const descriptor = Reflect.getOwnPropertyDescriptor(target, key)\n      if (\n        !descriptor ||\n        !(descriptor.writable === false && descriptor.configurable === false)\n      ) {\n        return createObservable(target, key, result)\n      }\n    }\n    return result\n  },\n  has(target, key) {\n    const result = Reflect.has(target, key)\n    bindTargetKeyWithCurrentReaction({ target, key, type: 'has' })\n    return result\n  },\n  ownKeys(target) {\n    const keys = Reflect.ownKeys(target)\n    bindTargetKeyWithCurrentReaction({ target, type: 'iterate' })\n    return keys\n  },\n  set(target, key, value, receiver) {\n    const hadKey = hasOwnProperty.call(target, key)\n    const newValue = createObservable(target, key, value)\n    const oldValue = target[key]\n    target[key] = newValue // use Reflect.set is too slow\n    if (!hadKey) {\n      runReactionsFromTargetKey({\n        target,\n        key,\n        value: newValue,\n        oldValue,\n        receiver,\n        type: 'add',\n      })\n    } else if (value !== oldValue) {\n      runReactionsFromTargetKey({\n        target,\n        key,\n        value: newValue,\n        oldValue,\n        receiver,\n        type: 'set',\n      })\n    }\n    return true\n  },\n  deleteProperty(target, key) {\n    const oldValue = target[key]\n    delete target[key]\n    runReactionsFromTargetKey({\n      target,\n      key,\n      oldValue,\n      type: 'delete',\n    })\n    return true\n  },\n}\n","import { ProxyRaw, RawNode } from './environment'\nimport { ObservablePath, PropertyKey, IOperation } from './types'\n\nexport class DataChange {\n  path: ObservablePath\n  key: PropertyKey\n  object: object\n  type: string\n  value: any\n  oldValue: any\n  constructor(operation: IOperation, node: DataNode) {\n    this.key = operation.key\n    this.type = operation.type\n    this.object = operation.target\n    this.value = operation.value\n    this.oldValue = operation.oldValue\n    this.path = node.path.concat(operation.key)\n  }\n}\nexport class DataNode {\n  target: any\n\n  key: PropertyKey\n\n  value: any\n\n  constructor(target: any, key: PropertyKey, value: any) {\n    this.target = target\n    this.key = key\n    this.value = value\n  }\n\n  get path() {\n    if (!this.parent) return this.key ? [this.key] : []\n    return this.parent.path.concat(this.key)\n  }\n\n  get targetRaw() {\n    return ProxyRaw.get(this.target) || this.target\n  }\n\n  get parent() {\n    if (!this.target) return\n    return RawNode.get(this.targetRaw)\n  }\n\n  isEqual(node: DataNode) {\n    if (this.key) {\n      return node.targetRaw === this.targetRaw && node.key === this.key\n    }\n    return node.value === this.value\n  }\n\n  contains(node: DataNode) {\n    if (node === this) return true\n    let parent = node.parent\n    while (!!parent) {\n      if (this.isEqual(parent)) return true\n      parent = parent.parent\n    }\n    return false\n  }\n}\n\nexport const buildDataTree = (target: any, key: PropertyKey, value: any) => {\n  const currentNode = RawNode.get(ProxyRaw.get(value) || value)\n  if (currentNode) return currentNode\n  RawNode.set(value, new DataNode(target, key, value))\n}\n","import { isFn, isCollectionType, isNormalType } from './checkers'\nimport {\n  RawProxy,\n  ProxyRaw,\n  MakeObservableSymbol,\n  RawShallowProxy,\n  RawNode,\n} from './environment'\nimport { baseHandlers, collectionHandlers } from './handlers'\nimport { buildDataTree } from './tree'\nimport { isSupportObservable } from './externals'\nimport { PropertyKey, IVisitor, BoundaryFunction } from './types'\n\nconst createNormalProxy = (target: any, shallow?: boolean) => {\n  const proxy = new Proxy(target, baseHandlers)\n  ProxyRaw.set(proxy, target)\n  if (shallow) {\n    RawShallowProxy.set(target, proxy)\n  } else {\n    RawProxy.set(target, proxy)\n  }\n  return proxy\n}\n\nconst createCollectionProxy = (target: any, shallow?: boolean) => {\n  const proxy = new Proxy(target, collectionHandlers)\n  ProxyRaw.set(proxy, target)\n  if (shallow) {\n    RawShallowProxy.set(target, proxy)\n  } else {\n    RawProxy.set(target, proxy)\n  }\n  return proxy\n}\n\nconst createShallowProxy = (target: any) => {\n  if (isNormalType(target)) return createNormalProxy(target, true)\n  if (isCollectionType(target)) return createCollectionProxy(target, true)\n  return target\n}\n\nexport const createObservable = (\n  target: any,\n  key?: PropertyKey,\n  value?: any,\n  shallow?: boolean\n) => {\n  if (typeof value !== 'object') return value\n  const raw = ProxyRaw.get(value)\n  if (!!raw) {\n    const node = RawNode.get(raw)\n    node.key = key\n    return value\n  }\n\n  if (!isSupportObservable(value)) return value\n\n  if (target) {\n    const parentRaw = ProxyRaw.get(target) || target\n    const isShallowParent = RawShallowProxy.get(parentRaw)\n    if (isShallowParent) return value\n  }\n\n  buildDataTree(target, key, value)\n  if (shallow) return createShallowProxy(value)\n  if (isNormalType(value)) return createNormalProxy(value)\n  if (isCollectionType(value)) return createCollectionProxy(value)\n  return value\n}\n\nexport const createAnnotation = <T extends (visitor: IVisitor) => any>(\n  maker: T\n) => {\n  const annotation = (target: any): ReturnType<T> => {\n    return maker({ value: target })\n  }\n  if (isFn(maker)) {\n    annotation[MakeObservableSymbol] = maker\n  }\n  return annotation\n}\n\nexport const getObservableMaker = (target: any) => {\n  if (target[MakeObservableSymbol]) {\n    if (!target[MakeObservableSymbol][MakeObservableSymbol]) {\n      return target[MakeObservableSymbol]\n    }\n    return getObservableMaker(target[MakeObservableSymbol])\n  }\n}\n\nexport const createBoundaryFunction = (\n  start: (...args: any) => void,\n  end: (...args: any) => void\n) => {\n  function boundary<F extends (...args: any) => any>(fn?: F): ReturnType<F> {\n    let results: ReturnType<F>\n    try {\n      start()\n      if (isFn(fn)) {\n        results = fn()\n      }\n    } finally {\n      end()\n    }\n    return results\n  }\n\n  boundary.bound = createBindFunction(boundary)\n  return boundary\n}\n\nexport const createBindFunction = <Boundary extends BoundaryFunction>(\n  boundary: Boundary\n) => {\n  function bind<F extends (...args: any[]) => any>(\n    callback?: F,\n    context?: any\n  ): F {\n    return ((...args: any[]) =>\n      boundary(() => callback.apply(context, args))) as any\n  }\n  return bind\n}\n\nexport const createBoundaryAnnotation = (\n  start: (...args: any) => void,\n  end: (...args: any) => void\n) => {\n  const boundary = createBoundaryFunction(start, end)\n  const annotation = createAnnotation(({ target, key }) => {\n    target[key] = boundary.bound(target[key], target)\n    return target\n  })\n  boundary[MakeObservableSymbol] = annotation\n  boundary.bound[MakeObservableSymbol] = annotation\n  return boundary\n}\n","import {\n  batchStart,\n  batchEnd,\n  batchScopeStart,\n  batchScopeEnd,\n} from './reaction'\nimport { BatchEndpoints, BatchCount } from './environment'\nimport { createBoundaryAnnotation } from './internals'\nimport { IBatch } from './types'\nimport { isFn } from './checkers'\n\nexport const batch: IBatch = createBoundaryAnnotation(batchStart, batchEnd)\nbatch.scope = createBoundaryAnnotation(batchScopeStart, batchScopeEnd)\nbatch.endpoint = (callback?: () => void) => {\n  if (!isFn(callback)) return\n  if (BatchCount.value === 0) {\n    callback()\n  } else {\n    BatchEndpoints.add(callback)\n  }\n}\n","import {\n  batchStart,\n  batchEnd,\n  batchScopeStart,\n  batchScopeEnd,\n  untrackStart,\n  untrackEnd,\n} from './reaction'\nimport { createBoundaryAnnotation } from './internals'\nimport { IAction } from './types'\n\nexport const action: IAction = createBoundaryAnnotation(\n  () => {\n    batchStart()\n    untrackStart()\n  },\n  () => {\n    untrackEnd()\n    batchEnd()\n  }\n)\n\naction.scope = createBoundaryAnnotation(\n  () => {\n    batchScopeStart()\n    untrackStart()\n  },\n  () => {\n    untrackEnd()\n    batchScopeEnd()\n  }\n)\n","import { createBoundaryFunction } from './internals'\nimport { untrackStart, untrackEnd } from './reaction'\n\nexport const untracked = createBoundaryFunction(untrackStart, untrackEnd)\n","import { createAnnotation, createObservable } from '../internals'\nimport {\n  bindTargetKeyWithCurrentReaction,\n  runReactionsFromTargetKey,\n} from '../reaction'\n\nexport interface IObservable {\n  <T>(target: T): T\n}\n\nexport const observable: IObservable = createAnnotation(\n  ({ target, key, value }) => {\n    const store = {\n      value: createObservable(target, key, target ? target[key] : value),\n    }\n\n    function get() {\n      bindTargetKeyWithCurrentReaction({\n        target: target,\n        key: key,\n        type: 'get',\n      })\n      return store.value\n    }\n\n    function set(value: any) {\n      const oldValue = store.value\n      value = createObservable(target, key, value)\n      store.value = value\n      if (oldValue === value) return\n      runReactionsFromTargetKey({\n        target: target,\n        key: key,\n        type: 'set',\n        oldValue,\n        value,\n      })\n    }\n    if (target) {\n      Object.defineProperty(target, key, {\n        set,\n        get,\n        enumerable: true,\n        configurable: false,\n      })\n      return target\n    }\n    return store.value\n  }\n)\n","import { ProxyRaw, RawProxy } from '../environment'\nimport { createAnnotation } from '../internals'\nimport { buildDataTree } from '../tree'\nimport {\n  bindTargetKeyWithCurrentReaction,\n  runReactionsFromTargetKey,\n} from '../reaction'\n\nexport interface IBox {\n  <T>(target: T): { get(): T; set(value: T): void }\n}\n\nexport const box: IBox = createAnnotation(({ target, key, value }) => {\n  const store = {\n    value: target ? target[key] : value,\n  }\n\n  const proxy = {\n    set,\n    get,\n  }\n\n  ProxyRaw.set(proxy, store)\n  RawProxy.set(store, proxy)\n\n  buildDataTree(target, key, store)\n\n  function get() {\n    bindTargetKeyWithCurrentReaction({\n      target: store,\n      key,\n      type: 'get',\n    })\n    return store.value\n  }\n\n  function set(value: any) {\n    const oldValue = store.value\n    store.value = value\n    if (oldValue !== value) {\n      runReactionsFromTargetKey({\n        target: store,\n        key,\n        type: 'set',\n        oldValue,\n        value,\n      })\n    }\n  }\n\n  if (target) {\n    Object.defineProperty(target, key, {\n      value: proxy,\n      enumerable: true,\n      configurable: false,\n      writable: false,\n    })\n    return target\n  }\n  return proxy\n})\n","import { ProxyRaw, RawProxy } from '../environment'\nimport { createAnnotation } from '../internals'\nimport { buildDataTree } from '../tree'\nimport {\n  bindTargetKeyWithCurrentReaction,\n  runReactionsFromTargetKey,\n} from '../reaction'\n\nexport interface IRef {\n  <T>(target: T): { value: T }\n}\n\nexport const ref: IRef = createAnnotation(({ target, key, value }) => {\n  const store = {\n    value: target ? target[key] : value,\n  }\n\n  const proxy = {}\n\n  const context = target ? target : store\n  const property = target ? key : 'value'\n\n  buildDataTree(target, key, store)\n\n  ProxyRaw.set(proxy, store)\n  RawProxy.set(store, proxy)\n\n  function get() {\n    bindTargetKeyWithCurrentReaction({\n      target: context,\n      key: property,\n      type: 'get',\n    })\n    return store.value\n  }\n\n  function set(value: any) {\n    const oldValue = store.value\n    store.value = value\n    if (oldValue !== value) {\n      runReactionsFromTargetKey({\n        target: context,\n        key: property,\n        type: 'set',\n        oldValue,\n        value,\n      })\n    }\n  }\n  if (target) {\n    Object.defineProperty(target, key, {\n      get,\n      set,\n      enumerable: true,\n      configurable: false,\n    })\n    return target\n  } else {\n    Object.defineProperty(proxy, 'value', {\n      set,\n      get,\n    })\n  }\n  return proxy\n})\n","import { createAnnotation, createObservable } from '../internals'\nimport {\n  bindTargetKeyWithCurrentReaction,\n  runReactionsFromTargetKey,\n} from '../reaction'\nimport { IObservable } from './observable'\n\nexport const shallow: IObservable = createAnnotation(\n  ({ target, key, value }) => {\n    const store = {\n      value: createObservable(target, key, target ? target[key] : value, true),\n    }\n\n    function get() {\n      bindTargetKeyWithCurrentReaction({\n        target: target,\n        key: key,\n        type: 'get',\n      })\n      return store.value\n    }\n\n    function set(value: any) {\n      const oldValue = store.value\n      value = createObservable(target, key, value, true)\n      store.value = value\n      if (oldValue === value) return\n      runReactionsFromTargetKey({\n        target: target,\n        key: key,\n        type: 'set',\n        oldValue,\n        value,\n      })\n    }\n    if (target) {\n      Object.defineProperty(target, key, {\n        set,\n        get,\n        enumerable: true,\n        configurable: false,\n      })\n      return target\n    }\n    return store.value\n  }\n)\n","import { ProxyRaw, RawProxy, ReactionStack } from '../environment'\nimport { createAnnotation } from '../internals'\nimport { buildDataTree } from '../tree'\nimport {\n  bindTargetKeyWithCurrentReaction,\n  runReactionsFromTargetKey,\n  bindComputedReactions,\n  hasRunningReaction,\n  isUntracking,\n  batchStart,\n  batchEnd,\n  releaseBindingReactions,\n} from '../reaction'\n\ninterface IValue<T = any> {\n  value?: T\n}\nexport interface IComputed {\n  <T>(compute: () => T): IValue<T>\n  <T>(compute: { get?: () => T; set?: (value: T) => void }): IValue<T>\n}\n\nexport const computed: IComputed = createAnnotation(\n  ({ target, key, value }) => {\n    const store: IValue = {}\n\n    const proxy = {}\n\n    const context = target ? target : store\n    const property = target ? key : 'value'\n    const getter = getGetter(context)\n    const setter = getSetter(context)\n\n    function getGetter(target: any) {\n      if (!target) {\n        if (value && value.get) return value.get\n        return value\n      }\n      const descriptor = Object.getOwnPropertyDescriptor(target, property)\n      if (descriptor && descriptor.get) return descriptor.get\n      return getGetter(Object.getPrototypeOf(target))\n    }\n\n    function getSetter(target: any) {\n      if (!target) {\n        if (value && value.set) return value.set\n        return\n      }\n      const descriptor = Object.getOwnPropertyDescriptor(target, property)\n      if (descriptor && descriptor.set) return descriptor.set\n      return getSetter(Object.getPrototypeOf(target))\n    }\n\n    function compute() {\n      store.value = getter?.call?.(context)\n    }\n    function reaction() {\n      if (ReactionStack.indexOf(reaction) === -1) {\n        releaseBindingReactions(reaction)\n        try {\n          ReactionStack.push(reaction)\n          compute()\n        } finally {\n          ReactionStack.pop()\n        }\n      }\n    }\n    reaction._name = 'ComputedReaction'\n    reaction._scheduler = () => {\n      reaction._dirty = true\n      runReactionsFromTargetKey({\n        target: context,\n        key: property,\n        value: store.value,\n        type: 'set',\n      })\n    }\n    reaction._isComputed = true\n    reaction._dirty = true\n    reaction._context = context\n    reaction._property = property\n\n    ProxyRaw.set(proxy, store)\n    RawProxy.set(store, proxy)\n\n    buildDataTree(target, key, store)\n\n    function get() {\n      if (hasRunningReaction()) {\n        bindComputedReactions(reaction)\n      }\n      if (!isUntracking()) {\n        //如果允许untracked过程中收集依赖，那么永远不会存在绑定，因为_dirty已经设置为false\n        if (reaction._dirty) {\n          reaction()\n          reaction._dirty = false\n        }\n      } else {\n        compute()\n      }\n      bindTargetKeyWithCurrentReaction({\n        target: context,\n        key: property,\n        type: 'get',\n      })\n      return store.value\n    }\n\n    function set(value: any) {\n      try {\n        batchStart()\n        setter?.call?.(context, value)\n      } finally {\n        batchEnd()\n      }\n    }\n    if (target) {\n      Object.defineProperty(target, key, {\n        get,\n        set,\n        enumerable: true,\n        configurable: false,\n      })\n      return target\n    } else {\n      Object.defineProperty(proxy, 'value', {\n        set,\n        get,\n      })\n    }\n    return proxy\n  }\n)\n","import * as annotations from './annotations'\nimport { MakeObservableSymbol } from './environment'\nimport { createObservable } from './internals'\n\nexport function observable<T extends object>(target: T): T {\n  return createObservable(null, null, target)\n}\n\nobservable.box = annotations.box\nobservable.ref = annotations.ref\nobservable.deep = annotations.observable\nobservable.shallow = annotations.shallow\nobservable.computed = annotations.computed\nobservable[MakeObservableSymbol] = annotations.observable\n","import { isFn } from './checkers'\nimport { buildDataTree } from './tree'\nimport { observable } from './observable'\nimport { getObservableMaker } from './internals'\nimport { isObservable, isAnnotation, isSupportObservable } from './externals'\nimport { Annotations } from './types'\nimport { action } from './action'\nimport { ProxyRaw, RawProxy } from './environment'\n\nexport function define<Target extends object = any>(\n  target: Target,\n  annotations?: Annotations<Target>\n): Target {\n  if (isObservable(target)) return target\n  if (!isSupportObservable(target)) return target\n  buildDataTree(undefined, undefined, target)\n  ProxyRaw.set(target, target)\n  RawProxy.set(target, target)\n  for (const key in annotations) {\n    const annotation = annotations[key]\n    if (isAnnotation(annotation)) {\n      getObservableMaker(annotation)({\n        target,\n        key,\n      })\n    }\n  }\n  return target\n}\n\nexport function model<Target extends object = any>(target: Target): Target {\n  const annotations = Object.keys(target || {}).reduce((buf, key) => {\n    const descriptor = Object.getOwnPropertyDescriptor(target, key)\n    if (descriptor && descriptor.get) {\n      buf[key] = observable.computed\n    } else if (isFn(target[key])) {\n      buf[key] = action\n    } else {\n      buf[key] = observable\n    }\n    return buf\n  }, {})\n  return define(target, annotations)\n}\n","import {\n  batchEnd,\n  batchStart,\n  disposeBindingReactions,\n  releaseBindingReactions,\n  disposeEffects,\n  hasDepsChange,\n  untrackStart,\n  untrackEnd,\n} from './reaction'\nimport { isFn } from './checkers'\nimport { ReactionStack } from './environment'\nimport { Reaction, IReactionOptions, Dispose } from './types'\nimport { toArray } from './array'\n\ninterface IValue {\n  currentValue?: any\n  oldValue?: any\n}\n\nexport const autorun = (tracker: Reaction, name = 'AutoRun') => {\n  const reaction: Reaction = () => {\n    if (!isFn(tracker)) return\n    if (reaction._boundary > 0) return\n    if (ReactionStack.indexOf(reaction) === -1) {\n      releaseBindingReactions(reaction)\n      try {\n        batchStart()\n        ReactionStack.push(reaction)\n        tracker()\n      } finally {\n        ReactionStack.pop()\n        reaction._boundary++\n        batchEnd()\n        reaction._boundary = 0\n        reaction._memos.cursor = 0\n        reaction._effects.cursor = 0\n      }\n    }\n  }\n  const cleanRefs = () => {\n    reaction._memos = {\n      queue: [],\n      cursor: 0,\n    }\n    reaction._effects = {\n      queue: [],\n      cursor: 0,\n    }\n  }\n  reaction._boundary = 0\n  reaction._name = name\n  cleanRefs()\n  reaction()\n  return () => {\n    disposeBindingReactions(reaction)\n    disposeEffects(reaction)\n    cleanRefs()\n  }\n}\n\nautorun.memo = <T>(callback: () => T, dependencies?: any[]): T => {\n  if (!isFn(callback)) return\n  const current = ReactionStack[ReactionStack.length - 1]\n  if (!current || !current._memos)\n    throw new Error('autorun.memo must used in autorun function body.')\n  const deps = toArray(dependencies || [])\n  const id = current._memos.cursor++\n  const old = current._memos.queue[id]\n  if (!old || hasDepsChange(deps, old.deps)) {\n    const value = callback()\n    current._memos.queue[id] = {\n      value,\n      deps,\n    }\n    return value\n  }\n  return old.value\n}\n\nautorun.effect = (callback: () => void | Dispose, dependencies?: any[]) => {\n  if (!isFn(callback)) return\n  const current = ReactionStack[ReactionStack.length - 1]\n  if (!current || !current._effects)\n    throw new Error('autorun.effect must used in autorun function body.')\n  const effects = current._effects\n  const deps = toArray(dependencies || [{}])\n  const id = effects.cursor++\n  const old = effects.queue[id]\n  if (!old || hasDepsChange(deps, old.deps)) {\n    Promise.resolve(0).then(() => {\n      if (current._disposed) return\n      const dispose = callback()\n      if (isFn(dispose)) {\n        effects.queue[id].dispose = dispose\n      }\n    })\n    effects.queue[id] = {\n      deps,\n    }\n  }\n}\n\nexport const reaction = <T>(\n  tracker: () => T,\n  subscriber?: (value: T, oldValue: T) => void,\n  options?: IReactionOptions<T>\n) => {\n  const realOptions = {\n    name: 'Reaction',\n    ...options,\n  }\n  const value: IValue = {}\n  const dirtyCheck = () => {\n    if (isFn(realOptions.equals))\n      return !realOptions.equals(value.oldValue, value.currentValue)\n    return value.oldValue !== value.currentValue\n  }\n\n  const fireAction = () => {\n    try {\n      untrackStart()\n      batchStart()\n      if (isFn(subscriber)) subscriber(value.currentValue, value.oldValue)\n    } finally {\n      batchEnd()\n      untrackEnd()\n    }\n  }\n\n  const reaction: Reaction = () => {\n    if (ReactionStack.indexOf(reaction) === -1) {\n      releaseBindingReactions(reaction)\n      try {\n        ReactionStack.push(reaction)\n        value.currentValue = tracker()\n      } finally {\n        ReactionStack.pop()\n      }\n    }\n  }\n  reaction._scheduler = (looping) => {\n    looping()\n    if (dirtyCheck()) fireAction()\n    value.oldValue = value.currentValue\n  }\n  reaction._name = realOptions.name\n  reaction()\n  value.oldValue = value.currentValue\n  if (realOptions.fireImmediately) {\n    fireAction()\n  }\n  return () => {\n    disposeBindingReactions(reaction)\n  }\n}\n","import { ReactionStack } from './environment'\nimport { isFn } from './checkers'\nimport { Reaction } from './types'\nimport {\n  batchEnd,\n  batchStart,\n  disposeBindingReactions,\n  releaseBindingReactions,\n} from './reaction'\n\nexport class Tracker {\n  private results: any\n  constructor(\n    scheduler?: (reaction: Reaction) => void,\n    name = 'TrackerReaction'\n  ) {\n    this.track._scheduler = (callback) => {\n      if (this.track._boundary === 0) this.dispose()\n      if (isFn(callback)) scheduler(callback)\n    }\n    this.track._name = name\n    this.track._boundary = 0\n  }\n\n  track: Reaction = (tracker: Reaction) => {\n    if (!isFn(tracker)) return this.results\n    if (this.track._boundary > 0) return\n    if (ReactionStack.indexOf(this.track) === -1) {\n      releaseBindingReactions(this.track)\n      try {\n        batchStart()\n        ReactionStack.push(this.track)\n        this.results = tracker()\n      } finally {\n        ReactionStack.pop()\n        this.track._boundary++\n        batchEnd()\n        this.track._boundary = 0\n      }\n    }\n    return this.results\n  }\n\n  dispose = () => {\n    disposeBindingReactions(this.track)\n  }\n}\n","import { IOperation } from './types'\nimport { RawNode, ProxyRaw, ObserverListeners } from './environment'\nimport { isFn } from './checkers'\nimport { DataChange } from './tree'\n\nexport const observe = (\n  target: object,\n  observer?: (change: DataChange) => void,\n  deep = true\n) => {\n  const addListener = (target: any) => {\n    const raw = ProxyRaw.get(target) || target\n    const node = RawNode.get(raw)\n\n    const listener = (operation: IOperation) => {\n      const targetRaw = ProxyRaw.get(operation.target) || operation.target\n      const targetNode = RawNode.get(targetRaw)\n      if (deep) {\n        if (node.contains(targetNode)) {\n          observer(new DataChange(operation, targetNode))\n          return\n        }\n      }\n      if (\n        node === targetNode ||\n        (node.targetRaw === targetRaw && node.key === operation.key)\n      ) {\n        observer(new DataChange(operation, targetNode))\n      }\n    }\n\n    if (node && isFn(observer)) {\n      ObserverListeners.add(listener)\n    }\n    return () => {\n      ObserverListeners.delete(listener)\n    }\n  }\n  if (target && typeof target !== 'object')\n    throw Error(`Can not observe ${typeof target} type.`)\n  return addListener(target)\n}\n"],"names":["hasOwnProperty","observable","annotations.box","annotations.ref","annotations.observable","annotations.shallow","annotations.computed"],"mappings":"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"}
{"version":3,"file":"array.js","sourceRoot":"","sources":["../src/array.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,IAAM,OAAO,GAAG,UAAC,KAAU;IAChC,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;QACzB,CAAC,CAAC,KAAK;QACP,CAAC,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI;YACvC,CAAC,CAAC,CAAC,KAAK,CAAC;YACT,CAAC,CAAC,EAAE,CAAA;AACR,CAAC,CAAA;AAED;IAGE,kBAAY,KAAe;QAAf,sBAAA,EAAA,UAAe;QAD3B,kBAAa,GAAG,KAAK,CAAA;QAEnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;IACpB,CAAC;IAED,sBAAG,GAAH,UAAI,IAAO;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;SACtB;IACH,CAAC;IAED,sBAAG,GAAH,UAAI,IAAO;QACT,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;IACtC,CAAC;IAED,yBAAM,GAAN,UAAO,IAAO;QACZ,IAAI,IAAI,CAAC,aAAa;YAAE,OAAM,CAAC,sBAAsB;QACrD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QACtC,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;SAC5B;IACH,CAAC;IAED,0BAAO,GAAP,UAAQ,QAA4B;QAClC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC;YAAE,OAAM;QACnC,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,GAAG,GAAG,EAAE,KAAK,EAAE,EAAE;YACjE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAA;SAC5B;IACH,CAAC;IAED,gCAAa,GAAb,UAAc,QAA4B;QACxC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC;YAAE,OAAM;QACnC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAA;QACzB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACtD,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;YAC3B,QAAQ,CAAC,IAAI,CAAC,CAAA;YACd,KAAK,EAAE,CAAA;SACR;QACD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAA;IAC5B,CAAC;IAED,wBAAK,GAAL;QACE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAA;IACvB,CAAC;IACH,eAAC;AAAD,CAAC,AA/CD,IA+CC","sourcesContent":["export const toArray = (value: any) => {\n  return Array.isArray(value)\n    ? value\n    : value !== undefined && value !== null\n    ? [value]\n    : []\n}\n\nexport class ArraySet<T> {\n  value: T[]\n  batchDeleting = false\n  constructor(value: T[] = []) {\n    this.value = value\n  }\n\n  add(item: T) {\n    if (!this.has(item)) {\n      this.value.push(item)\n    }\n  }\n\n  has(item: T) {\n    return this.value.indexOf(item) > -1\n  }\n\n  delete(item: T) {\n    if (this.batchDeleting) return //批量删除时禁止单独删除，会影响计数执行器\n    const index = this.value.indexOf(item)\n    if (index > -1) {\n      this.value.splice(index, 1)\n    }\n  }\n\n  forEach(callback: (value: T) => void) {\n    if (this.value.length === 0) return\n    for (let index = 0, len = this.value.length; index < len; index++) {\n      callback(this.value[index])\n    }\n  }\n\n  forEachDelete(callback: (value: T) => void) {\n    if (this.value.length === 0) return\n    this.batchDeleting = true\n    for (let index = 0; index < this.value.length; index++) {\n      const item = this.value[index]\n      this.value.splice(index, 1)\n      callback(item)\n      index--\n    }\n    this.batchDeleting = false\n  }\n\n  clear() {\n    this.value.length = 0\n  }\n}\n"]}
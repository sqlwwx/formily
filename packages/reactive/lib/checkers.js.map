{"version":3,"file":"checkers.js","sourceRoot":"","sources":["../src/checkers.ts"],"names":[],"mappings":";;;AAAO,IAAM,KAAK,GAAG,UAAC,GAAQ;IAC5B,OAAA,GAAG,IAAI,GAAG,YAAY,GAAG;AAAzB,CAAyB,CAAA;AADd,QAAA,KAAK,SACS;AACpB,IAAM,KAAK,GAAG,UAAC,GAAQ,IAAsB,OAAA,GAAG,IAAI,GAAG,YAAY,GAAG,EAAzB,CAAyB,CAAA;AAAhE,QAAA,KAAK,SAA2D;AACtE,IAAM,SAAS,GAAG,UAAC,GAAQ;IAChC,OAAA,GAAG,IAAI,GAAG,YAAY,OAAO;AAA7B,CAA6B,CAAA;AADlB,QAAA,SAAS,aACS;AACxB,IAAM,SAAS,GAAG,UAAC,GAAQ;IAChC,OAAA,GAAG,IAAI,GAAG,YAAY,OAAO;AAA7B,CAA6B,CAAA;AADlB,QAAA,SAAS,aACS;AACxB,IAAM,IAAI,GAAG,UAAC,GAAQ,IAAsB,OAAA,OAAO,GAAG,KAAK,UAAU,EAAzB,CAAyB,CAAA;AAA/D,QAAA,IAAI,QAA2D;AAC/D,QAAA,KAAK,GAAG,KAAK,CAAC,OAAO,CAAA;AAC3B,IAAM,UAAU,GAAG,UAAC,GAAQ;IACjC,OAAA,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,iBAAiB;AAAzD,CAAyD,CAAA;AAD9C,QAAA,UAAU,cACoC;AACpD,IAAM,OAAO,GAAG,UAAC,GAAQ,IAAK,OAAA,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,EAAjC,CAAiC,CAAA;AAAzD,QAAA,OAAO,WAAkD;AAC/D,IAAM,gBAAgB,GAAG,UAAC,MAAW;IAC1C,OAAO,CACL,IAAA,aAAK,EAAC,MAAM,CAAC,IAAI,IAAA,iBAAS,EAAC,MAAM,CAAC,IAAI,IAAA,aAAK,EAAC,MAAM,CAAC,IAAI,IAAA,iBAAS,EAAC,MAAM,CAAC,CACzE,CAAA;AACH,CAAC,CAAA;AAJY,QAAA,gBAAgB,oBAI5B;AACM,IAAM,YAAY,GAAG,UAAC,MAAW;IACtC,OAAO,IAAA,kBAAU,EAAC,MAAM,CAAC,IAAI,IAAA,aAAK,EAAC,MAAM,CAAC,CAAA;AAC5C,CAAC,CAAA;AAFY,QAAA,YAAY,gBAExB","sourcesContent":["export const isMap = (val: any): val is Map<any, any> =>\n  val && val instanceof Map\nexport const isSet = (val: any): val is Set<any> => val && val instanceof Set\nexport const isWeakMap = (val: any): val is WeakMap<any, any> =>\n  val && val instanceof WeakMap\nexport const isWeakSet = (val: any): val is WeakSet<any> =>\n  val && val instanceof WeakSet\nexport const isFn = (val: any): val is Function => typeof val === 'function'\nexport const isArr = Array.isArray\nexport const isPlainObj = (val: any): val is object =>\n  Object.prototype.toString.call(val) === '[object Object]'\nexport const isValid = (val: any) => val !== null && val !== undefined\nexport const isCollectionType = (target: any) => {\n  return (\n    isMap(target) || isWeakMap(target) || isSet(target) || isWeakSet(target)\n  )\n}\nexport const isNormalType = (target: any) => {\n  return isPlainObj(target) || isArr(target)\n}\n"]}
{"version":3,"file":"merge.js","sourceRoot":"","sources":["../src/merge.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;AAEnC,SAAS,wBAAwB,CAAC,KAAU;IAC1C,OAAO,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;AACpD,CAAC;AAED,SAAS,eAAe,CAAC,KAAU;IACjC,OAAO,CAAC,CAAC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,CAAA;AAC7C,CAAC;AAED,SAAS,SAAS,CAAC,KAAU;IAC3B,IAAM,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IAEzD,OAAO,CACL,WAAW,KAAK,iBAAiB;QACjC,WAAW,KAAK,eAAe;QAC/B,cAAc,CAAC,KAAK,CAAC,CACtB,CAAA;AACH,CAAC;AAED,6IAA6I;AAC7I,IAAM,YAAY,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,CAAA;AAC/D,IAAM,kBAAkB,GAAG,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,CAAA;AAE9E,SAAS,cAAc,CAAC,KAAK;IAC3B,OAAO,KAAK,CAAC,QAAQ,KAAK,kBAAkB,CAAA;AAC9C,CAAC;AAED,SAAS,WAAW,CAAC,GAAQ;IAC3B,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA;AACrC,CAAC;AAED,SAAS,6BAA6B,CAAC,KAAU,EAAE,OAAgB;IACjE,IAAI,OAAO,CAAC,KAAK,KAAK,KAAK,IAAI,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;QAC/D,OAAO,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;KACrD;IACD,OAAO,KAAK,CAAA;AACd,CAAC;AAED,SAAS,iBAAiB,CAAC,MAAW,EAAE,MAAW,EAAE,OAAgB;IACnE,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAU,OAAO;QAChD,OAAO,6BAA6B,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;IACxD,CAAC,CAAC,CAAA;AACJ,CAAC;AAED,SAAS,gBAAgB,CAAC,GAAW,EAAE,OAAgB;IACrD,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;QACxB,OAAO,SAAS,CAAA;KACjB;IACD,IAAM,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAA;IAC5C,OAAO,OAAO,WAAW,KAAK,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAA;AACpE,CAAC;AAED,SAAS,+BAA+B,CAAC,MAAW;IAClD,OAAO,MAAM,CAAC,qBAAqB;QACjC,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,UAAU,MAAM;YAC1D,OAAO,MAAM,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAA;QAC5C,CAAC,CAAC;QACJ,CAAC,CAAC,EAAE,CAAA;AACR,CAAC;AAED,SAAS,OAAO,CAAC,MAAW;IAC1B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAAE,OAAO,EAAE,CAAA;IAC/B,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,+BAA+B,CAAC,MAAM,CAAC,CAAC,CAAA;AAC5E,CAAC;AAED,SAAS,kBAAkB,CAAC,MAAW,EAAE,QAAa;IACpD,0BAA0B;IAC1B,IAAI;QACF,OAAO,QAAQ,IAAI,MAAM,CAAA;KAC1B;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,KAAK,CAAA;KACb;AACH,CAAC;AAED,mFAAmF;AACnF,SAAS,gBAAgB,CAAC,MAAM,EAAE,GAAG;IACnC,OAAO,CACL,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,sEAAsE;QACzG,CAAC,CACC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,+CAA+C;YAC1F,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAC9C,CACF,CAAA,CAAC,4CAA4C;AAChD,CAAC;AAED,SAAS,WAAW,CAAC,MAAW,EAAE,MAAW,EAAE,OAAgB;IAC7D,IAAM,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA;IACtD,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC;QAAE,OAAO,MAAM,CAAA;IACrD,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;QACnB,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG;YACnC,WAAW,CAAC,GAAG,CAAC,GAAG,6BAA6B,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAA;QACxE,CAAC,CAAC,CAAA;KACH;IACD,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG;QACnC,0BAA0B;QAC1B,IAAI,gBAAgB,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE;YACjC,OAAM;SACP;QACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YAChB,WAAW,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;SAC/B;QACD,IACE,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC;YAC/B,OAAO,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EACtC;YACA,WAAW,CAAC,GAAG,CAAC,GAAG,gBAAgB,CAAC,GAAG,EAAE,OAAO,CAAC,CAC/C,MAAM,CAAC,GAAG,CAAC,EACX,MAAM,CAAC,GAAG,CAAC,EACX,OAAO,CACR,CAAA;SACF;aAAM;YACL,WAAW,CAAC,GAAG,CAAC,GAAG,6BAA6B,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAA;SACvE;IACH,CAAC,CAAC,CAAA;IACF,OAAO,WAAW,CAAA;AACpB,CAAC;AAcD,SAAS,SAAS,CAAC,MAAW,EAAE,MAAW,EAAE,OAAiB;IAC5D,OAAO,GAAG,OAAO,IAAI,EAAE,CAAA;IACvB,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,iBAAiB,CAAA;IAC5D,OAAO,CAAC,iBAAiB;QACvB,OAAO,CAAC,iBAAiB,IAAI,wBAAwB,CAAA;IACvD,kFAAkF;IAClF,6DAA6D;IAC7D,OAAO,CAAC,6BAA6B,GAAG,6BAA6B,CAAA;IAErE,IAAM,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;IAC3C,IAAM,aAAa,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;IAC3C,IAAM,yBAAyB,GAAG,aAAa,KAAK,aAAa,CAAA;IAEjE,IAAI,CAAC,yBAAyB,EAAE;QAC9B,OAAO,6BAA6B,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;KACtD;SAAM,IAAI,aAAa,EAAE;QACxB,OAAO,OAAO,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;KACnD;SAAM;QACL,OAAO,WAAW,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;KAC5C;AACH,CAAC;AAED,MAAM,CAAC,IAAM,KAAK,GAAG,SAAS,CAAA","sourcesContent":["import { isValid } from './isEmpty'\n\nfunction defaultIsMergeableObject(value: any) {\n  return isNonNullObject(value) && !isSpecial(value)\n}\n\nfunction isNonNullObject(value: any) {\n  return !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value: any) {\n  const stringValue = Object.prototype.toString.call(value)\n\n  return (\n    stringValue === '[object RegExp]' ||\n    stringValue === '[object Date]' ||\n    isReactElement(value)\n  )\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nconst canUseSymbol = typeof Symbol === 'function' && Symbol.for\nconst REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7\n\nfunction isReactElement(value) {\n  return value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val: any) {\n  return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value: any, options: Options) {\n  if (options.clone !== false && options.isMergeableObject(value)) {\n    return deepmerge(emptyTarget(value), value, options)\n  }\n  return value\n}\n\nfunction defaultArrayMerge(target: any, source: any, options: Options) {\n  return target.concat(source).map(function (element) {\n    return cloneUnlessOtherwiseSpecified(element, options)\n  })\n}\n\nfunction getMergeFunction(key: string, options: Options) {\n  if (!options.customMerge) {\n    return deepmerge\n  }\n  const customMerge = options.customMerge(key)\n  return typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target: any): any {\n  return Object.getOwnPropertySymbols\n    ? Object.getOwnPropertySymbols(target).filter(function (symbol) {\n        return target.propertyIsEnumerable(symbol)\n      })\n    : []\n}\n\nfunction getKeys(target: any) {\n  if (!isValid(target)) return []\n  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object: any, property: any) {\n  /* istanbul ignore next */\n  try {\n    return property in object\n  } catch (_) {\n    return false\n  }\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n  return (\n    propertyIsOnObject(target, key) && // Properties are safe to merge if they don't exist in the target yet,\n    !(\n      Object.hasOwnProperty.call(target, key) && // unsafe if they exist up the prototype chain,\n      Object.propertyIsEnumerable.call(target, key)\n    )\n  ) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target: any, source: any, options: Options) {\n  const destination = options.assign ? target || {} : {}\n  if (!options.isMergeableObject(target)) return target\n  if (!options.assign) {\n    getKeys(target).forEach(function (key) {\n      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options)\n    })\n  }\n  getKeys(source).forEach(function (key) {\n    /* istanbul ignore next */\n    if (propertyIsUnsafe(target, key)) {\n      return\n    }\n    if (!target[key]) {\n      destination[key] = source[key]\n    }\n    if (\n      propertyIsOnObject(target, key) &&\n      options.isMergeableObject(source[key])\n    ) {\n      destination[key] = getMergeFunction(key, options)(\n        target[key],\n        source[key],\n        options\n      )\n    } else {\n      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options)\n    }\n  })\n  return destination\n}\n\ninterface Options {\n  arrayMerge?(target: any[], source: any[], options?: Options): any[]\n  clone?: boolean\n  assign?: boolean\n  customMerge?: (\n    key: string,\n    options?: Options\n  ) => ((x: any, y: any) => any) | undefined\n  isMergeableObject?(value: object): boolean\n  cloneUnlessOtherwiseSpecified?: (value: any, options: Options) => any\n}\n\nfunction deepmerge(target: any, source: any, options?: Options) {\n  options = options || {}\n  options.arrayMerge = options.arrayMerge || defaultArrayMerge\n  options.isMergeableObject =\n    options.isMergeableObject || defaultIsMergeableObject\n  // cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n  // implementations can use it. The caller may not replace it.\n  options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified\n\n  const sourceIsArray = Array.isArray(source)\n  const targetIsArray = Array.isArray(target)\n  const sourceAndTargetTypesMatch = sourceIsArray === targetIsArray\n\n  if (!sourceAndTargetTypesMatch) {\n    return cloneUnlessOtherwiseSpecified(source, options)\n  } else if (sourceIsArray) {\n    return options.arrayMerge(target, source, options)\n  } else {\n    return mergeObject(target, source, options)\n  }\n}\n\nexport const merge = deepmerge\n"]}
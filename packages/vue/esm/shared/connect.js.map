{"version":3,"file":"connect.js","sourceRoot":"","sources":["../../src/shared/connect.ts"],"names":[],"mappings":"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","sourcesContent":["import { Vue2Component } from '../types/vue2'\nimport { isVue2, markRaw, defineComponent } from 'vue-demi'\nimport { isFn, isStr, FormPath, each } from '@formily/shared'\nimport { isVoidField, GeneralField } from '@formily/core'\nimport { observer } from '@formily/reactive-vue'\n\nimport { useField } from '../hooks/useField'\nimport h from './h'\n\nimport type {\n  VueComponent,\n  IComponentMapper,\n  IStateMapper,\n  VueComponentProps,\n  DefineComponent,\n} from '../types'\n\nexport function mapProps<T extends VueComponent = VueComponent>(\n  ...args: IStateMapper<VueComponentProps<T>>[]\n) {\n  return (target: T) => {\n    return observer(\n      defineComponent<VueComponentProps<T>>({\n        // listeners is needed for vue2\n        setup(props, { attrs, slots, listeners }: Record<string, any>) {\n          const fieldRef = useField()\n\n          const transform = (\n            input: VueComponentProps<T>,\n            field: GeneralField\n          ) =>\n            args.reduce((props, mapper) => {\n              if (isFn(mapper)) {\n                props = Object.assign(props, mapper(props, field))\n              } else {\n                each(mapper, (to, extract) => {\n                  const extractValue = FormPath.getIn(field, extract)\n                  const targetValue = isStr(to) ? to : extract\n                  if (extract === 'value') {\n                    if (to !== extract) {\n                      delete props['value']\n                    }\n                  }\n                  FormPath.setIn(props, targetValue, extractValue)\n                })\n              }\n              return props\n            }, input)\n\n          return () => {\n            const newAttrs = fieldRef.value\n              ? transform({ ...attrs } as VueComponentProps<T>, fieldRef.value)\n              : { ...attrs }\n            return h(\n              target,\n              {\n                attrs: {\n                  ...newAttrs,\n                },\n                on: listeners,\n              },\n              slots\n            )\n          }\n        },\n      }) as unknown as DefineComponent<VueComponentProps<T>>\n    )\n  }\n}\n\nexport function mapReadPretty<T extends VueComponent, C extends VueComponent>(\n  component: C,\n  readPrettyProps?: Record<string, any>\n) {\n  return (target: T) => {\n    return observer(\n      defineComponent({\n        setup(props, { attrs, slots, listeners }: Record<string, any>) {\n          const fieldRef = useField()\n          return () => {\n            const field = fieldRef.value\n            return h(\n              field && !isVoidField(field) && field.pattern === 'readPretty'\n                ? component\n                : target,\n              {\n                attrs: {\n                  ...readPrettyProps,\n                  ...attrs,\n                },\n                on: listeners,\n              },\n              slots\n            )\n          }\n        },\n      }) as unknown as DefineComponent<VueComponentProps<T>>\n    )\n  }\n}\n\nexport function connect<T extends VueComponent>(\n  target: T,\n  ...args: IComponentMapper[]\n) {\n  const Component = args.reduce((target: VueComponent, mapper) => {\n    return mapper(target)\n  }, target)\n  /* istanbul ignore else */\n  if (isVue2) {\n    const functionalComponent = {\n      functional: true,\n      render(h, context) {\n        return h(Component as Vue2Component, context.data, context.children)\n      },\n    }\n    return markRaw(functionalComponent)\n  } else {\n    const functionalComponent = defineComponent({\n      setup(props: VueComponentProps<T>, { attrs, slots }) {\n        return () => {\n          return h(Component, { props, attrs }, slots)\n        }\n      },\n    })\n    return markRaw(functionalComponent)\n  }\n}\n"]}
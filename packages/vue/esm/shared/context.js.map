{"version":3,"file":"context.js","sourceRoot":"","sources":["../../src/shared/context.ts"],"names":[],"mappings":"AAIA,MAAM,CAAC,IAAM,UAAU,GAA4B,MAAM,CAAC,MAAM,CAAC,CAAA;AACjE,MAAM,CAAC,IAAM,WAAW,GAAoC,MAAM,CAAC,OAAO,CAAC,CAAA;AAC3E,MAAM,CAAC,IAAM,kBAAkB,GAC7B,MAAM,CAAC,cAAc,CAAC,CAAA;AACxB,MAAM,CAAC,IAAM,YAAY,GAA8B,MAAM,CAAC,QAAQ,CAAC,CAAA;AACvE,MAAM,CAAC,IAAM,2BAA2B,GAEpC,MAAM,CAAC,kBAAkB,CAAC,CAAA;AAC9B,MAAM,CAAC,IAAM,mBAAmB,GAE5B,MAAM,CAAC,eAAe,CAAC,CAAA","sourcesContent":["import { InjectionKey, Ref } from 'vue-demi'\nimport { Form, GeneralField } from '@formily/core'\nimport { Schema } from '@formily/json-schema'\nimport { ISchemaFieldVueFactoryOptions } from '../types'\nexport const FormSymbol: InjectionKey<Ref<Form>> = Symbol('form')\nexport const FieldSymbol: InjectionKey<Ref<GeneralField>> = Symbol('field')\nexport const SchemaMarkupSymbol: InjectionKey<Ref<Schema>> =\n  Symbol('schemaMarkup')\nexport const SchemaSymbol: InjectionKey<Ref<Schema>> = Symbol('schema')\nexport const SchemaExpressionScopeSymbol: InjectionKey<\n  Ref<Record<string, any>>\n> = Symbol('schemaExpression')\nexport const SchemaOptionsSymbol: InjectionKey<\n  Ref<ISchemaFieldVueFactoryOptions>\n> = Symbol('schemaOptions')\n"]}
{"version":3,"file":"ArrayField.js","sourceRoot":"","sources":["../../src/components/ArrayField.ts"],"names":[],"mappings":"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","sourcesContent":["import { provide, defineComponent, watch, computed } from 'vue-demi'\nimport { useField, useForm } from '../hooks'\nimport { useAttach } from '../hooks/useAttach'\nimport ReactiveField from './ReactiveField'\nimport { FieldSymbol } from '../shared/context'\nimport h from '../shared/h'\nimport { getRawComponent } from '../utils/getRawComponent'\nimport { observer } from '@formily/reactive-vue'\n\nimport type { IArrayFieldProps, DefineComponent } from '../types'\n\nexport default observer(\n  defineComponent<IArrayFieldProps>({\n    name: 'ArrayField',\n    props: {\n      name: {},\n      title: {},\n      description: {},\n      value: {},\n      initialValue: {},\n      basePath: {},\n      decorator: Array,\n      component: Array,\n      display: String,\n      pattern: String,\n      required: {\n        type: Boolean,\n        default: undefined,\n      },\n      validateFirst: {\n        type: Boolean,\n        default: undefined,\n      },\n      hidden: {\n        type: Boolean,\n        default: undefined,\n      },\n      visible: {\n        type: Boolean,\n        default: undefined,\n      },\n      editable: {\n        type: Boolean,\n        default: undefined,\n      },\n      disabled: {\n        type: Boolean,\n        default: undefined,\n      },\n      readOnly: {\n        type: Boolean,\n        default: undefined,\n      },\n      readPretty: {\n        type: Boolean,\n        default: undefined,\n      },\n      dataSource: {},\n      validator: {},\n      reactions: [Array, Function],\n    },\n    setup(props: IArrayFieldProps, { slots }) {\n      const formRef = useForm()\n      const parentRef = useField()\n\n      const basePath = computed(() =>\n        props.basePath !== undefined\n          ? props.basePath\n          : parentRef?.value?.address\n      )\n      const createField = () =>\n        formRef.value.createArrayField({\n          ...props,\n          basePath: basePath.value,\n          ...getRawComponent(props),\n        })\n      const [fieldRef, checker] = useAttach(createField())\n      watch(\n        () => props,\n        () => (fieldRef.value = checker(createField())),\n        { deep: true }\n      )\n      watch(\n        [formRef, parentRef],\n        () => (fieldRef.value = checker(createField()))\n      )\n\n      provide(FieldSymbol, fieldRef)\n\n      return () => {\n        const field = fieldRef.value\n        const componentData = {\n          props: {\n            field,\n          },\n        }\n        const children = {\n          ...slots,\n        }\n        if (slots.default) {\n          children.default = () =>\n            slots.default({\n              field: field,\n              form: field.form,\n            })\n        }\n        return h(ReactiveField, componentData, children)\n      }\n    },\n  }) as unknown as DefineComponent<IArrayFieldProps>\n)\n"]}
{"version":3,"file":"ReactiveField.js","sourceRoot":"","sources":["../../src/components/ReactiveField.ts"],"names":[],"mappings":"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","sourcesContent":["import { defineComponent, inject, ref } from 'vue-demi'\nimport { isVoidField } from '@formily/core'\nimport { FormPath } from '@formily/shared'\nimport { observer } from '@formily/reactive-vue'\nimport { toJS } from '@formily/reactive'\nimport { SchemaOptionsSymbol } from '../shared'\nimport h from '../shared/h'\nimport { Fragment } from '../shared/fragment'\n\nimport type {\n  IReactiveFieldProps,\n  VueComponent,\n  DefineComponent,\n  VueComponentProps,\n} from '../types'\n\nfunction isVueOptions(options: any) {\n  if (!options) {\n    return false\n  }\n  return (\n    typeof options.template === 'string' ||\n    typeof options.render === 'function' ||\n    typeof options.setup === 'function'\n  )\n}\n\nexport default observer(\n  defineComponent<IReactiveFieldProps>({\n    name: 'ReactiveField',\n    props: ['field'],\n    setup(props: IReactiveFieldProps, { slots }) {\n      const optionsRef = inject(SchemaOptionsSymbol, ref(null))\n      const key = Math.floor(Date.now() * Math.random()).toString(16)\n      const mergeChildren = (slots: Record<string, any>, content: any) => {\n        if (!Object.keys(slots).length && !content) return {}\n\n        const defaultSlot = slots?.default\n          ? slots?.default(props.field, props.field.form)\n          : []\n        if (typeof content === 'string') {\n          slots['default'] = () => [...defaultSlot, content]\n        } else if (isVueOptions(content) || typeof content === 'function') {\n          // scoped slot for class component\n          if (isVueOptions(content) && content?.render?.length > 1) {\n            slots['default'] = (scopedProps: VueComponentProps<any>) => [\n              ...defaultSlot,\n              h(content, { props: scopedProps }, {}),\n            ]\n          } else {\n            slots['default'] = () => [...defaultSlot, h(content, {}, {})]\n          }\n        } else if (content && typeof content === 'object') {\n          // for named slots\n          Object.keys(content).forEach((key) => {\n            const child = content[key]\n            const slot = slots?.[key] ? slots?.[key]() : []\n            if (typeof child === 'string') {\n              slots[key] = () => [...slot, child]\n            } else if (isVueOptions(child) || typeof child === 'function') {\n              // scoped slot for class component\n              if (isVueOptions(child) && child?.render?.length > 1) {\n                slots[key] = (scopedProps: VueComponentProps<any>) => [\n                  ...slot,\n                  h(child, { props: scopedProps }, {}),\n                ]\n              } else {\n                slots[key] = () => [...slot, h(child, {}, {})]\n              }\n            }\n          })\n        }\n\n        return slots\n      }\n\n      return () => {\n        const field = props.field\n        let children = {}\n        if (!field) {\n          children = slots\n        } else if (field.display !== 'visible') {\n          children = {\n            ...slots,\n            default: () => [h('template', {}, {})],\n          }\n        } else {\n          const renderDecorator = (childNodes: any[]) => {\n            if (!field?.decorator?.[0]) {\n              return {\n                default: () => childNodes,\n              }\n            } else {\n              const decorator = (FormPath.getIn(\n                optionsRef.value?.components,\n                field.decorator[0]\n              ) ?? field.decorator[0]) as VueComponent\n              const decoratorData = toJS(field.decorator[1]) || {}\n              const style = decoratorData?.style\n              const classes = decoratorData?.class\n              delete decoratorData.style\n              delete decoratorData.class\n              return {\n                default: () =>\n                  h(\n                    decorator,\n                    {\n                      style,\n                      class: classes,\n                      attrs: {\n                        ...decoratorData,\n                      },\n                    },\n                    {\n                      default: () => childNodes,\n                    }\n                  ),\n              }\n            }\n          }\n\n          const renderComponent = () => {\n            if (!field?.component?.[0]) {\n              return h(\n                Fragment,\n                {},\n                {\n                  default: () =>\n                    slots.default?.({\n                      field: props.field,\n                      form: props.field.form,\n                    }),\n                }\n              )\n            }\n\n            const component = (FormPath.getIn(\n              optionsRef.value?.components,\n              field.component[0]\n            ) ?? field.component[0]) as VueComponent\n            const originData = toJS(field.component[1]) || {}\n            const events = {} as Record<string, any>\n            const originChange = originData['@change'] || originData['onChange']\n            const originFocus = originData['@focus'] || originData['onFocus']\n            const originBlur = originData['@blur'] || originData['onBlur']\n\n            // '@xxx' has higher priority\n            Object.keys(originData)\n              .filter((key) => key.startsWith('on'))\n              .forEach((eventKey) => {\n                const eventName = `${eventKey[2].toLowerCase()}${eventKey.slice(\n                  3\n                )}`\n                events[eventName] = originData[eventKey]\n              })\n\n            Object.keys(originData)\n              .filter((key) => key.startsWith('@'))\n              .forEach((eventKey) => {\n                events[eventKey.slice(1)] = originData[eventKey]\n                delete originData[eventKey]\n              })\n\n            events.change = (...args: any[]) => {\n              if (!isVoidField(field)) field.onInput(...args)\n              originChange?.(...args)\n            }\n            events.focus = (...args: any[]) => {\n              if (!isVoidField(field)) field.onFocus(...args)\n              originFocus?.(...args)\n            }\n            events.blur = (...args: any[]) => {\n              if (!isVoidField(field)) field.onBlur(...args)\n              originBlur?.(...args)\n            }\n\n            const style = originData?.style\n            const classes = originData?.class\n            delete originData.style\n            delete originData.class\n            const attrs = {\n              disabled: !isVoidField(field)\n                ? field.pattern === 'disabled' || field.pattern === 'readPretty'\n                : undefined,\n              readOnly: !isVoidField(field)\n                ? field.pattern === 'readOnly'\n                : undefined,\n              ...originData,\n              // toJS is used to avoid some render loop.\n              value: !isVoidField(field) ? toJS(field.value) : undefined,\n            }\n            const componentData = {\n              attrs,\n              style,\n              class: classes,\n              on: events,\n            }\n\n            const componentChildren = mergeChildren(\n              {\n                ...slots,\n              },\n              field.content\n            )\n\n            return h(component, componentData, componentChildren)\n          }\n\n          children = renderDecorator([renderComponent()])\n        }\n\n        return h(Fragment, { key }, children)\n      }\n    },\n  }) as unknown as DefineComponent<IReactiveFieldProps>\n)\n"]}
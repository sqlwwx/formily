{"version":3,"file":"SchemaField.js","sourceRoot":"","sources":["../../src/components/SchemaField.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  inject,\n  provide,\n  defineComponent,\n  computed,\n  shallowRef,\n  watch,\n} from 'vue-demi'\nimport { ISchema, Schema, SchemaTypes } from '@formily/json-schema'\nimport { RecursionField } from '../components'\nimport {\n  SchemaMarkupSymbol,\n  SchemaExpressionScopeSymbol,\n  SchemaOptionsSymbol,\n} from '../shared'\nimport {\n  ComponentPath,\n  VueComponent,\n  ISchemaFieldVueFactoryOptions,\n  SchemaVueComponents,\n  ISchemaFieldProps,\n  ISchemaMarkupFieldProps,\n  ISchemaTypeFieldProps,\n} from '../types'\nimport { resolveSchemaProps } from '../utils/resolveSchemaProps'\nimport { h } from '../shared/h'\nimport { Fragment } from '../shared/fragment'\n\nimport type { DefineComponent } from '../types'\n\nconst env = {\n  nonameId: 0,\n}\n\nconst getRandomName = () => {\n  return `NO_NAME_FIELD_$${env.nonameId++}`\n}\n\nconst markupProps = {\n  version: String,\n  name: [String, Number],\n  title: {},\n  description: {},\n  default: {},\n  readOnly: {\n    type: Boolean,\n    default: undefined,\n  },\n  writeOnly: {\n    type: Boolean,\n    default: undefined,\n  },\n  enum: {},\n  const: {},\n  multipleOf: Number,\n  maximum: Number,\n  exclusiveMaximum: Number,\n  minimum: Number,\n  exclusiveMinimum: Number,\n  maxLength: Number,\n  minLength: Number,\n  pattern: {},\n  maxItems: Number,\n  minItems: Number,\n  uniqueItems: {\n    type: Boolean,\n    default: undefined,\n  },\n  maxProperties: Number,\n  minProperties: Number,\n  required: {\n    type: [Boolean, Array, String],\n    default: undefined,\n  },\n  format: String,\n  properties: {},\n  items: {},\n  additionalItems: {},\n  patternProperties: {},\n  additionalProperties: {},\n  xIndex: Number,\n  xPattern: {},\n  xDisplay: {},\n  xValidator: {},\n  xDecorator: {},\n  xDecoratorProps: {},\n  xComponent: {},\n  xComponentProps: {},\n  xReactions: {},\n  xContent: {},\n  xVisible: {\n    type: Boolean,\n    default: undefined,\n  },\n  xHidden: {\n    type: Boolean,\n    default: undefined,\n  },\n  xDisabled: {\n    type: Boolean,\n    default: undefined,\n  },\n  xEditable: {\n    type: Boolean,\n    default: undefined,\n  },\n  xReadOnly: {\n    type: Boolean,\n    default: undefined,\n  },\n  xReadPretty: {\n    type: Boolean,\n    default: undefined,\n  },\n}\n\ntype SchemaFieldComponents = {\n  SchemaField: DefineComponent<ISchemaFieldProps>\n  SchemaMarkupField: DefineComponent<ISchemaMarkupFieldProps>\n  SchemaStringField: DefineComponent<ISchemaTypeFieldProps>\n  SchemaObjectField: DefineComponent<ISchemaTypeFieldProps>\n  SchemaArrayField: DefineComponent<ISchemaTypeFieldProps>\n  SchemaBooleanField: DefineComponent<ISchemaTypeFieldProps>\n  SchemaDateField: DefineComponent<ISchemaTypeFieldProps>\n  SchemaDateTimeField: DefineComponent<ISchemaTypeFieldProps>\n  SchemaVoidField: DefineComponent<ISchemaTypeFieldProps>\n  SchemaNumberField: DefineComponent<ISchemaTypeFieldProps>\n}\n\nexport function createSchemaField<\n  Components extends SchemaVueComponents = SchemaVueComponents\n>(options: ISchemaFieldVueFactoryOptions<Components>): SchemaFieldComponents {\n  const SchemaField = defineComponent<\n    ISchemaFieldProps<VueComponent, VueComponent>\n  >({\n    name: 'SchemaField',\n    inheritAttrs: false,\n    props: {\n      schema: {},\n      scope: {},\n      components: {},\n      basePath: {},\n      title: {},\n      description: {},\n      value: {},\n      initialValue: {},\n      validator: {},\n      dataSource: {},\n      name: [String, Number],\n      decorator: Array,\n      component: Array,\n      reactions: Array,\n      display: String,\n      pattern: String,\n      required: {\n        type: Boolean,\n        default: undefined,\n      },\n      validateFirst: {\n        type: Boolean,\n        default: undefined,\n      },\n      hidden: {\n        type: Boolean,\n        default: undefined,\n      },\n      visible: {\n        type: Boolean,\n        default: undefined,\n      },\n      editable: {\n        type: Boolean,\n        default: undefined,\n      },\n      disabled: {\n        type: Boolean,\n        default: undefined,\n      },\n      readOnly: {\n        type: Boolean,\n        default: undefined,\n      },\n      readPretty: {\n        type: Boolean,\n        default: undefined,\n      },\n    },\n    setup(props: ISchemaFieldProps<VueComponent, VueComponent>, { slots }) {\n      const schemaRef = computed(() =>\n        Schema.isSchemaInstance(props.schema)\n          ? props.schema\n          : new Schema({\n              type: 'object',\n              ...props.schema,\n            })\n      )\n\n      const scopeRef = computed(() => ({\n        ...options.scope,\n        ...props.scope,\n      }))\n\n      const optionsRef = computed(() => ({\n        ...options,\n        components: {\n          ...options.components,\n          ...props.components,\n        },\n      }))\n\n      provide(SchemaMarkupSymbol, schemaRef)\n      provide(SchemaOptionsSymbol, optionsRef)\n      provide(SchemaExpressionScopeSymbol, scopeRef)\n\n      return () => {\n        env.nonameId = 0\n\n        return h(\n          Fragment,\n          {},\n          {\n            default: () => {\n              const children = []\n              if (slots.default) {\n                children.push(\n                  h(\n                    'template',\n                    {},\n                    {\n                      default: () => slots.default(),\n                    }\n                  )\n                )\n              }\n              children.push(\n                h(\n                  RecursionField,\n                  {\n                    attrs: {\n                      ...props,\n                      schema: schemaRef.value,\n                    },\n                  },\n                  {}\n                )\n              )\n              return children\n            },\n          }\n        )\n      }\n    },\n  })\n\n  const MarkupField = defineComponent<\n    ISchemaMarkupFieldProps<\n      Components,\n      ComponentPath<Components>,\n      ComponentPath<Components>\n    >\n  >({\n    name: 'MarkupField',\n    props: Object.assign({}, markupProps, { type: String }),\n    setup(props, { slots }) {\n      const parentRef = inject(SchemaMarkupSymbol, null)\n      if (!parentRef || !parentRef.value) return () => h(Fragment, {}, {})\n      const resolvedProps = resolveSchemaProps(props)\n\n      const name = props.name || getRandomName()\n      const appendArraySchema = (schema: ISchema) => {\n        if (parentRef.value.items) {\n          return parentRef.value.addProperty(name, schema)\n        } else {\n          return parentRef.value.setItems(resolvedProps)\n        }\n      }\n\n      const schemaRef = shallowRef(null)\n\n      watch(\n        parentRef,\n        () => {\n          if (\n            parentRef.value.type === 'object' ||\n            parentRef.value.type === 'void'\n          ) {\n            schemaRef.value = parentRef.value.addProperty(name, resolvedProps)\n          } else if (parentRef.value.type === 'array') {\n            const schema = appendArraySchema(resolvedProps)\n            schemaRef.value = Array.isArray(schema) ? schema[0] : schema\n          }\n        },\n        { immediate: true }\n      )\n      provide(SchemaMarkupSymbol, schemaRef)\n\n      return () => {\n        const children: Record<string, () => any> = {}\n        if (slots.default) {\n          children.default = () => slots.default()\n        }\n        return h(Fragment, {}, children)\n      }\n    },\n  })\n\n  const SchemaFieldFactory = (type: SchemaTypes, name: string) => {\n    return defineComponent<\n      ISchemaMarkupFieldProps<\n        Components,\n        ComponentPath<Components>,\n        ComponentPath<Components>\n      >\n    >({\n      name: name,\n      props: Object.assign({}, markupProps),\n      setup(\n        props: ISchemaMarkupFieldProps<\n          Components,\n          ComponentPath<Components>,\n          ComponentPath<Components>\n        >,\n        { slots }\n      ) {\n        return () =>\n          h(\n            MarkupField,\n            {\n              attrs: {\n                ...props,\n                type: type,\n              },\n            },\n            slots\n          )\n      },\n    })\n  }\n\n  return {\n    SchemaField,\n    SchemaMarkupField: MarkupField,\n    SchemaStringField: SchemaFieldFactory('string', 'SchemaStringField'),\n    SchemaObjectField: SchemaFieldFactory('object', 'SchemaObjectField'),\n    SchemaArrayField: SchemaFieldFactory('array', 'SchemaArrayField'),\n    SchemaBooleanField: SchemaFieldFactory('boolean', 'SchemaBooleanField'),\n    SchemaDateField: SchemaFieldFactory('date', 'SchemaDateField'),\n    SchemaDateTimeField: SchemaFieldFactory('datetime', 'SchemaDatetimeField'),\n    SchemaVoidField: SchemaFieldFactory('void', 'SchemaVoidField'),\n    SchemaNumberField: SchemaFieldFactory('number', 'SchemaNumberField'),\n  } as any\n}\n"]}
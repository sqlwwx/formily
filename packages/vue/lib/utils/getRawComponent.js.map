{"version":3,"file":"getRawComponent.js","sourceRoot":"","sources":["../../src/utils/getRawComponent.ts"],"names":[],"mappings":";;;AACA,qCAAgC;AAEzB,IAAM,eAAe,GAAG,UAC7B,KAA8C;IAEtC,IAAA,SAAS,GAAgB,KAAK,UAArB,EAAE,SAAS,GAAK,KAAK,UAAV,CAAU;IACtC,IAAI,YAAoC,CAAA;IACxC,IAAI,YAAoC,CAAA;IACxC,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;QAC5B,YAAY,GAAG,CAAC,IAAA,gBAAK,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;KACnD;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;QAC5B,YAAY,GAAG,CAAC,IAAA,gBAAK,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;KACnD;IACD,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,SAAS,EAAE,YAAY,EAAE,CAAA;AAC7D,CAAC,CAAA;AAbY,QAAA,eAAe,mBAa3B","sourcesContent":["import { IFieldProps, VueComponent } from '../types'\nimport { toRaw } from 'vue-demi'\n\nexport const getRawComponent = (\n  props: IFieldProps<VueComponent, VueComponent>\n) => {\n  const { component, decorator } = props\n  let newComponent: typeof props.component\n  let newDecorator: typeof props.component\n  if (Array.isArray(component)) {\n    newComponent = [toRaw(component[0]), component[1]]\n  }\n  if (Array.isArray(decorator)) {\n    newDecorator = [toRaw(decorator[0]), decorator[1]]\n  }\n  return { component: newComponent, decorator: newDecorator }\n}\n"]}